[{"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\index.js":"1","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\store.js":"2","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\ScrollToTop.js":"3","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\app\\index.js":"4","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\permissions.js":"5","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\auth.js":"6","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\cupos.js":"7","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\parametros.js":"8","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\representantes.js":"9","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\roles.js":"10","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\representante-patentes.js":"11","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\translations.js":"12","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\users.js":"13","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\talonarios.js":"14","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\contenidos.js":"15","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\user-types.js":"16","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\talonario-tickets.js":"17","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\user-roles.js":"18","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\terminales.js":"19","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\slices\\auth.js":"20","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\slices\\missing-translations.js":"21","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\HomePage\\index.jsx":"22","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\createApi.js":"23","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\apiUrl.js":"24","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\routes.js":"25","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\permissionsKeys.js":"26","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\routeWithLoader\\RouteWithLoader.jsx":"27","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\routeWithSidebar\\RouteWithSidebar.jsx":"28","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\notFound\\NotFound.jsx":"29","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\form.jsx":"30","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\form.jsx":"31","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\lostpassword\\index.jsx":"32","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\form.jsx":"33","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\form.jsx":"34","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\index.jsx":"35","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\index.jsx":"36","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\index.jsx":"37","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\account\\changepassword\\successPassword\\index.jsx":"38","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\index.jsx":"39","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\index.jsx":"40","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\account\\changepassword\\index.jsx":"41","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\index.jsx":"42","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\dashboard\\index.jsx":"43","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\signup\\index.jsx":"44","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\cobrartasa\\index.jsx":"45","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\signin\\index.jsx":"46","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\signup\\verifyEmail\\index.jsx":"47","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\lostpassword\\verifyEmail\\index.jsx":"48","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\index.jsx":"49","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\form\\index.jsx":"50","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\Preloader.js":"51","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\footer.jsx":"52","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\manager.jsx":"53","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\translationsGroupNames.js":"54","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\header.jsx":"55","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\otorgar-cupos-ctg.jsx":"56","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\otorgar-cupos.jsx":"57","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\saldo.jsx":"58","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\header.jsx":"59","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\talonarios.jsx":"60","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\hoc\\manager.jsx":"61","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\translations\\index.js":"62","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\index.jsx":"63","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\navbar\\index.jsx":"64","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\userTypes.js":"65","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\header.jsx":"66","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\table.jsx":"67","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\header.jsx":"68","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\table\\index.jsx":"69","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\index.jsx":"70","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\header.jsx":"71","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\select.jsx":"72","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\header.jsx":"73","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\table\\index.jsx":"74","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\table.jsx":"75","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\header.jsx":"76","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\table\\index.jsx":"77","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\form\\permission-check.jsx":"78","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\table\\index.jsx":"79","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\table\\index.jsx":"80","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\translations\\TranslatableText.jsx":"81","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\translations\\useTranslations.js":"82","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\header.jsx":"83","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\brand.jsx":"84","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar-item.jsx":"85","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\navbar\\user-menu.jsx":"86","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\collapsable-sidebar-item.jsx":"87","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar.jsx":"88","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar-divider.jsx":"89","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\pagination\\index.jsx":"90","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\row.jsx":"91","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\row.jsx":"92","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\table\\row.jsx":"93","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\table\\row.jsx":"94","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\permissionChecker\\index.js":"95","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\table\\row.jsx":"96","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\table\\row.jsx":"97","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\index.jsx":"98","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\table\\row.jsx":"99","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\pagination\\page-size.jsx":"100","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\pagination\\pagination.jsx":"101","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\icon-button.jsx":"102","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\table.jsx":"103","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\row.jsx":"104","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\cell.jsx":"105","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\index.jsx":"106","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\header.jsx":"107","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\option-menu.jsx":"108","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\select-filter\\index.jsx":"109","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\text-filter\\index.jsx":"110","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\sort\\index.jsx":"111","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\select-filter\\select-filter-description.jsx":"112","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\select-filter\\select-filter-form.jsx":"113","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\text-filter\\text-filter-description.jsx":"114","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\text-filter\\text-filter-form.jsx":"115","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\sort\\sort-description.jsx":"116","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\sort\\sort-form.jsx":"117","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\header.jsx":"118","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\index.jsx":"119","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\body.jsx":"120","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\user-avatar\\index.jsx":"121","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\footer.jsx":"122","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\header.jsx":"123","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\section.jsx":"124","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\subtitle.jsx":"125","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\title.jsx":"126","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\navbar\\user-menu-toogle.jsx":"127","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\empleadoscategorias.js":"128","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\categorias.js":"129","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\form.jsx":"130","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\index.jsx":"131","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar-space.jsx":"132","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\header.jsx":"133","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\index.jsx":"134","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\table\\index.jsx":"135","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\table\\row.jsx":"136","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\table\\index.jsx":"137","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\table\\row.jsx":"138","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\index.jsx":"139","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\form.jsx":"140","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\header.jsx":"141","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\table\\index.jsx":"142","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\table\\row.jsx":"143","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\votar\\index.js":"144","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\votos.js":"145","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\index.jsx":"146","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\header.jsx":"147","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\table\\index.jsx":"148","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\table\\row.jsx":"149"},{"size":678,"mtime":1663773878514,"results":"150","hashOfConfig":"151"},{"size":2397,"mtime":1664290607010,"results":"152","hashOfConfig":"151"},{"size":408,"mtime":1652789923711,"results":"153","hashOfConfig":"151"},{"size":451,"mtime":1654864263668,"results":"154","hashOfConfig":"151"},{"size":351,"mtime":1655388416235,"results":"155","hashOfConfig":"151"},{"size":1843,"mtime":1660136206965,"results":"156","hashOfConfig":"151"},{"size":950,"mtime":1658860317700,"results":"157","hashOfConfig":"151"},{"size":488,"mtime":1664204638967,"results":"158","hashOfConfig":"151"},{"size":1464,"mtime":1658860317702,"results":"159","hashOfConfig":"151"},{"size":518,"mtime":1663018446271,"results":"160","hashOfConfig":"151"},{"size":551,"mtime":1656536557759,"results":"161","hashOfConfig":"151"},{"size":472,"mtime":1656442915954,"results":"162","hashOfConfig":"151"},{"size":718,"mtime":1663773878542,"results":"163","hashOfConfig":"151"},{"size":428,"mtime":1657631990223,"results":"164","hashOfConfig":"151"},{"size":296,"mtime":1657292540189,"results":"165","hashOfConfig":"151"},{"size":348,"mtime":1654789655584,"results":"166","hashOfConfig":"151"},{"size":441,"mtime":1658860317703,"results":"167","hashOfConfig":"151"},{"size":474,"mtime":1659624416255,"results":"168","hashOfConfig":"151"},{"size":2546,"mtime":1658860317705,"results":"169","hashOfConfig":"151"},{"size":1096,"mtime":1656348324526,"results":"170","hashOfConfig":"151"},{"size":583,"mtime":1657292540201,"results":"171","hashOfConfig":"151"},{"size":7130,"mtime":1664552685641,"results":"172","hashOfConfig":"151"},{"size":5513,"mtime":1662508787593,"results":"173","hashOfConfig":"151"},{"size":1155,"mtime":1664290541308,"results":"174","hashOfConfig":"151"},{"size":2336,"mtime":1664553629388,"results":"175","hashOfConfig":"151"},{"size":535,"mtime":1662729422293,"results":"176","hashOfConfig":"151"},{"size":374,"mtime":1663773878479,"results":"177","hashOfConfig":"151"},{"size":1308,"mtime":1663773878489,"results":"178","hashOfConfig":"151"},{"size":168,"mtime":1652986953120,"results":"179","hashOfConfig":"151"},{"size":5771,"mtime":1663773878526,"results":"180","hashOfConfig":"151"},{"size":2912,"mtime":1657564041406,"results":"181","hashOfConfig":"151"},{"size":6241,"mtime":1657292539908,"results":"182","hashOfConfig":"151"},{"size":5490,"mtime":1658860317475,"results":"183","hashOfConfig":"151"},{"size":4237,"mtime":1658860317566,"results":"184","hashOfConfig":"151"},{"size":2845,"mtime":1664466476848,"results":"185","hashOfConfig":"151"},{"size":225,"mtime":1658860317626,"results":"186","hashOfConfig":"151"},{"size":2350,"mtime":1658860317407,"results":"187","hashOfConfig":"151"},{"size":2327,"mtime":1660147933891,"results":"188","hashOfConfig":"151"},{"size":503,"mtime":1658860317567,"results":"189","hashOfConfig":"151"},{"size":2478,"mtime":1658860317496,"results":"190","hashOfConfig":"151"},{"size":4732,"mtime":1663773878523,"results":"191","hashOfConfig":"151"},{"size":2338,"mtime":1658860317465,"results":"192","hashOfConfig":"151"},{"size":171,"mtime":1659012696277,"results":"193","hashOfConfig":"151"},{"size":12467,"mtime":1657292539931,"results":"194","hashOfConfig":"151"},{"size":7758,"mtime":1664204723240,"results":"195","hashOfConfig":"151"},{"size":3515,"mtime":1664549814695,"results":"196","hashOfConfig":"151"},{"size":3663,"mtime":1658344902924,"results":"197","hashOfConfig":"151"},{"size":1740,"mtime":1657292539911,"results":"198","hashOfConfig":"151"},{"size":556,"mtime":1658860317562,"results":"199","hashOfConfig":"151"},{"size":5591,"mtime":1658860317439,"results":"200","hashOfConfig":"151"},{"size":493,"mtime":1652789923710,"results":"201","hashOfConfig":"151"},{"size":208,"mtime":1663773878469,"results":"202","hashOfConfig":"151"},{"size":1706,"mtime":1663773878472,"results":"203","hashOfConfig":"151"},{"size":263,"mtime":1657292540240,"results":"204","hashOfConfig":"151"},{"size":714,"mtime":1663773878535,"results":"205","hashOfConfig":"151"},{"size":4370,"mtime":1658860317629,"results":"206","hashOfConfig":"151"},{"size":6023,"mtime":1658860317653,"results":"207","hashOfConfig":"151"},{"size":3409,"mtime":1658860317666,"results":"208","hashOfConfig":"151"},{"size":1328,"mtime":1657631990191,"results":"209","hashOfConfig":"151"},{"size":3535,"mtime":1657631990218,"results":"210","hashOfConfig":"151"},{"size":483,"mtime":1658860317710,"results":"211","hashOfConfig":"151"},{"size":130,"mtime":1654274231129,"results":"212","hashOfConfig":"151"},{"size":3180,"mtime":1664472695411,"results":"213","hashOfConfig":"151"},{"size":1275,"mtime":1664484412306,"results":"214","hashOfConfig":"151"},{"size":110,"mtime":1656360273053,"results":"215","hashOfConfig":"151"},{"size":547,"mtime":1663609271835,"results":"216","hashOfConfig":"151"},{"size":2856,"mtime":1658860317570,"results":"217","hashOfConfig":"151"},{"size":1430,"mtime":1657631990200,"results":"218","hashOfConfig":"151"},{"size":2204,"mtime":1658860317575,"results":"219","hashOfConfig":"151"},{"size":513,"mtime":1658860317573,"results":"220","hashOfConfig":"151"},{"size":1330,"mtime":1658860317495,"results":"221","hashOfConfig":"151"},{"size":567,"mtime":1656597960795,"results":"222","hashOfConfig":"151"},{"size":1300,"mtime":1658860317456,"results":"223","hashOfConfig":"151"},{"size":2599,"mtime":1663859100942,"results":"224","hashOfConfig":"151"},{"size":5570,"mtime":1658860317564,"results":"225","hashOfConfig":"151"},{"size":1380,"mtime":1658860317561,"results":"226","hashOfConfig":"151"},{"size":1215,"mtime":1658860317421,"results":"227","hashOfConfig":"151"},{"size":484,"mtime":1658860317445,"results":"228","hashOfConfig":"151"},{"size":2340,"mtime":1658860317526,"results":"229","hashOfConfig":"151"},{"size":1864,"mtime":1658860317473,"results":"230","hashOfConfig":"151"},{"size":157,"mtime":1658891567313,"results":"231","hashOfConfig":"151"},{"size":961,"mtime":1654274231136,"results":"232","hashOfConfig":"151"},{"size":150,"mtime":1663773878495,"results":"233","hashOfConfig":"151"},{"size":250,"mtime":1663773878492,"results":"234","hashOfConfig":"151"},{"size":627,"mtime":1663773878504,"results":"235","hashOfConfig":"151"},{"size":1203,"mtime":1663773878477,"results":"236","hashOfConfig":"151"},{"size":2541,"mtime":1663773878494,"results":"237","hashOfConfig":"151"},{"size":764,"mtime":1663773878506,"results":"238","hashOfConfig":"151"},{"size":105,"mtime":1663773878502,"results":"239","hashOfConfig":"151"},{"size":105,"mtime":1653329958887,"results":"240","hashOfConfig":"151"},{"size":1493,"mtime":1658860317568,"results":"241","hashOfConfig":"151"},{"size":800,"mtime":1658860317563,"results":"242","hashOfConfig":"151"},{"size":1720,"mtime":1664466680706,"results":"243","hashOfConfig":"151"},{"size":651,"mtime":1658860317577,"results":"244","hashOfConfig":"151"},{"size":281,"mtime":1659539046931,"results":"245","hashOfConfig":"151"},{"size":1059,"mtime":1657631990199,"results":"246","hashOfConfig":"151"},{"size":1834,"mtime":1658860317529,"results":"247","hashOfConfig":"151"},{"size":284,"mtime":1658860317324,"results":"248","hashOfConfig":"151"},{"size":1625,"mtime":1657292540132,"results":"249","hashOfConfig":"151"},{"size":126,"mtime":1653329958894,"results":"250","hashOfConfig":"151"},{"size":4087,"mtime":1658860317226,"results":"251","hashOfConfig":"151"},{"size":470,"mtime":1663773878470,"results":"252","hashOfConfig":"151"},{"size":2478,"mtime":1663773878511,"results":"253","hashOfConfig":"151"},{"size":132,"mtime":1653329958928,"results":"254","hashOfConfig":"151"},{"size":132,"mtime":1653329958903,"results":"255","hashOfConfig":"151"},{"size":304,"mtime":1658860317268,"results":"256","hashOfConfig":"151"},{"size":477,"mtime":1658860317266,"results":"257","hashOfConfig":"151"},{"size":2022,"mtime":1658860317273,"results":"258","hashOfConfig":"151"},{"size":150,"mtime":1658860317275,"results":"259","hashOfConfig":"151"},{"size":142,"mtime":1658860317319,"results":"260","hashOfConfig":"151"},{"size":116,"mtime":1658860317287,"results":"261","hashOfConfig":"151"},{"size":1174,"mtime":1658860317276,"results":"262","hashOfConfig":"151"},{"size":1527,"mtime":1658860317278,"results":"263","hashOfConfig":"151"},{"size":1060,"mtime":1658860317321,"results":"264","hashOfConfig":"151"},{"size":1541,"mtime":1658860317323,"results":"265","hashOfConfig":"151"},{"size":1567,"mtime":1658860317297,"results":"266","hashOfConfig":"151"},{"size":2285,"mtime":1658860317318,"results":"267","hashOfConfig":"151"},{"size":3354,"mtime":1663855100727,"results":"268","hashOfConfig":"151"},{"size":315,"mtime":1663773879004,"results":"269","hashOfConfig":"151"},{"size":229,"mtime":1663773878998,"results":"270","hashOfConfig":"151"},{"size":592,"mtime":1664484417074,"results":"271","hashOfConfig":"151"},{"size":251,"mtime":1663773878999,"results":"272","hashOfConfig":"151"},{"size":277,"mtime":1663773878999,"results":"273","hashOfConfig":"151"},{"size":258,"mtime":1663773879006,"results":"274","hashOfConfig":"151"},{"size":250,"mtime":1663773879010,"results":"275","hashOfConfig":"151"},{"size":241,"mtime":1663773879011,"results":"276","hashOfConfig":"151"},{"size":391,"mtime":1663773878993,"results":"277","hashOfConfig":"151"},{"size":549,"mtime":1663773879047,"results":"278","hashOfConfig":"151"},{"size":532,"mtime":1663773879046,"results":"279","hashOfConfig":"151"},{"size":8349,"mtime":1664489146287,"results":"280","hashOfConfig":"151"},{"size":2880,"mtime":1663858224525,"results":"281","hashOfConfig":"151"},{"size":130,"mtime":1663773879018,"results":"282","hashOfConfig":"151"},{"size":724,"mtime":1663773879040,"results":"283","hashOfConfig":"151"},{"size":2477,"mtime":1664820988454,"results":"284","hashOfConfig":"151"},{"size":3615,"mtime":1663868101461,"results":"285","hashOfConfig":"151"},{"size":2108,"mtime":1663793583610,"results":"286","hashOfConfig":"151"},{"size":1530,"mtime":1663777233198,"results":"287","hashOfConfig":"151"},{"size":931,"mtime":1663776321489,"results":"288","hashOfConfig":"151"},{"size":533,"mtime":1664204997117,"results":"289","hashOfConfig":"151"},{"size":4055,"mtime":1664205008573,"results":"290","hashOfConfig":"151"},{"size":98,"mtime":1664201922347,"results":"291","hashOfConfig":"151"},{"size":2068,"mtime":1664201841957,"results":"292","hashOfConfig":"151"},{"size":1029,"mtime":1664203619237,"results":"293","hashOfConfig":"151"},{"size":4969,"mtime":1664820825086,"results":"294","hashOfConfig":"151"},{"size":522,"mtime":1664290477015,"results":"295","hashOfConfig":"151"},{"size":4366,"mtime":1664820951740,"results":"296","hashOfConfig":"151"},{"size":98,"mtime":1664466619293,"results":"297","hashOfConfig":"151"},{"size":2710,"mtime":1664488199347,"results":"298","hashOfConfig":"151"},{"size":1194,"mtime":1664552948455,"results":"299","hashOfConfig":"151"},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},"67cfz8",{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"303"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"303"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"303"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"303"},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"303"},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"303"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"303"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"303"},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"303"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"303"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"303"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"303"},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"303"},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"303"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"303"},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"303"},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"303"},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"303"},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"303"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"474"},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"303"},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"303"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"303"},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"303"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"303"},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"303"},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"303"},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"303"},{"filePath":"564","messages":"565","suppressedMessages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"567","messages":"568","suppressedMessages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"570","messages":"571","suppressedMessages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"573","messages":"574","suppressedMessages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"303"},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"303"},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"303"},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"303"},{"filePath":"595","messages":"596","suppressedMessages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"303"},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602","usedDeprecatedRules":"303"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"303"},{"filePath":"610","messages":"611","suppressedMessages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"613","messages":"614","suppressedMessages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"616","messages":"617","suppressedMessages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"619","messages":"620","suppressedMessages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"303"},{"filePath":"623","messages":"624","suppressedMessages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"626","messages":"627","suppressedMessages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"629","messages":"630","suppressedMessages":"631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"632","messages":"633","suppressedMessages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"303"},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"303"},{"filePath":"640","messages":"641","suppressedMessages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"303"},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"303"},{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"651","usedDeprecatedRules":"303"},{"filePath":"652","messages":"653","suppressedMessages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"303"},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"303"},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"303"},{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"673","messages":"674","suppressedMessages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"676","messages":"677","suppressedMessages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"679","messages":"680","suppressedMessages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"682","messages":"683","suppressedMessages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"685","messages":"686","suppressedMessages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"688","messages":"689","suppressedMessages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"691","messages":"692","suppressedMessages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"694","messages":"695","suppressedMessages":"696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"697","messages":"698","suppressedMessages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"303"},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"707","messages":"708","suppressedMessages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","suppressedMessages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"722","messages":"723","suppressedMessages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"725","messages":"726","suppressedMessages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"728","messages":"729","suppressedMessages":"730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"731","messages":"732","suppressedMessages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"734","messages":"735","suppressedMessages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"737","messages":"738","suppressedMessages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"740","usedDeprecatedRules":"303"},{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"744","messages":"745","suppressedMessages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"750","messages":"751","suppressedMessages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"753","messages":"754","suppressedMessages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"303"},{"filePath":"757","messages":"758","suppressedMessages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"760","messages":"761","suppressedMessages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"303"},{"filePath":"764","messages":"765","suppressedMessages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"767","messages":"768","suppressedMessages":"769","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"770","usedDeprecatedRules":"303"},{"filePath":"771","messages":"772","suppressedMessages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"774","messages":"775","suppressedMessages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"777","usedDeprecatedRules":"303"},{"filePath":"778","messages":"779","suppressedMessages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"781","usedDeprecatedRules":"303"},{"filePath":"782","messages":"783","suppressedMessages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"785","messages":"786","suppressedMessages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"303"},{"filePath":"788","messages":"789","suppressedMessages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"791","messages":"792","suppressedMessages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","suppressedMessages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","suppressedMessages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\index.js",[],[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\store.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\ScrollToTop.js",["800"],[],"// Here are more informations about the scroll restoration of React Router\r\n// https://reactrouter.com/web/guides/scroll-restoration\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, left: 0, behavior: \"auto\" });\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\app\\index.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\permissions.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\auth.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\cupos.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\parametros.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\representantes.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\roles.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\representante-patentes.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\translations.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\users.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\talonarios.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\contenidos.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\user-types.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\talonario-tickets.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\user-roles.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\terminales.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\slices\\auth.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\slices\\missing-translations.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\HomePage\\index.jsx",["801"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\createApi.js",["802"],[],"import { createApi as rktCreateApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\nimport queryString from 'query-string';\r\n\r\nconst camelize = (value) => {\r\n  return value.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, (match, index) => {\r\n    if (+match === 0) {\r\n      return '';\r\n    }\r\n    else {\r\n      return index === 0 ? match.toLowerCase() : match.toUpperCase();\r\n    }\r\n  });\r\n};\r\n\r\nconst normalizeQueryParameters = ({ filter, order = [], pagination = {} } = {}) => {\r\n  const condition = order.at(-1) || {};\r\n  const key = Object.keys(condition).at(0);\r\n  const value = condition[key];\r\n\r\n  return {\r\n    ...filter,\r\n    Sort: (key && value) ? `${key} ${value}` : undefined,\r\n    Page: (pagination.index !== undefined) ? pagination.index + 1 : pagination.index,\r\n    PageSize: pagination.size\r\n  };\r\n};\r\n\r\nconst normalizeErrors = (errors) => {\r\n  return Object.entries(errors).reduce((errors, [key, value]) => {\r\n    return {\r\n      ...errors,\r\n      [camelize(key)]: value\r\n    };\r\n  }, {});\r\n};\r\n\r\nexport default function createApi({ url, tagTypes = [], endpoints, ...options }) {\r\n  const apiTagType = options.reducerPath;\r\n\r\n  return rktCreateApi({\r\n    baseQuery: fetchBaseQuery({\r\n      baseUrl: url,\r\n      prepareHeaders: (headers, { getState }) => {\r\n        const token = getState().auth.token;\r\n        if (token) {\r\n          headers.set('authorization', `Bearer ${token}`);\r\n        }\r\n        return headers;\r\n      },\r\n      paramsSerializer: (params) => queryString.stringify(params)\r\n    }),\r\n    tagTypes: [\r\n      ...tagTypes,\r\n      apiTagType\r\n    ],\r\n    endpoints: (rktBuilder) => {\r\n      const builder = {\r\n        ...rktBuilder,\r\n        normalizeQueryParameters: normalizeQueryParameters,\r\n        normalizeErrors: normalizeErrors,\r\n        tagType: apiTagType,\r\n        add: () => rktBuilder.mutation({\r\n          query: (item) => ({\r\n            url: '',\r\n            method: 'POST',\r\n            body: item,\r\n            responseHandler: (response) => {\r\n              if (response.ok) {\r\n                return response.json();\r\n              }\r\n              else {\r\n                return response.json().then((response) => normalizeErrors(response.errors));\r\n              }\r\n            }\r\n          }),\r\n          invalidatesTags: [{ type: apiTagType, id: '*' }]\r\n        }),\r\n        delete: () => rktBuilder.mutation({\r\n          query: (Id) => ({\r\n            url: '',\r\n            method: 'DELETE',\r\n            params: {\r\n              Id: Id\r\n            },\r\n            responseHandler: (response) => {\r\n              if (response.ok) {\r\n                return response.text();\r\n              }\r\n              else {\r\n                return response.json().then((response) => normalizeErrors(response.errors));\r\n              }\r\n            }\r\n          }),\r\n          transformResponse: (response) => ({ message: response }),\r\n          invalidatesTags: (result, error, id) => [{ type: apiTagType, id: id }]\r\n        }),\r\n        update: () => rktBuilder.mutation({\r\n          query: (item) => ({\r\n            url: '',\r\n            method: 'PUT',\r\n            body: item,\r\n            responseHandler: (response) => {\r\n              if (response.ok) {\r\n                return response.text();\r\n              }\r\n              else {\r\n                return response.json().then((response) => normalizeErrors(response.errors));\r\n              }\r\n            }\r\n          }),\r\n          transformResponse: (response) => ({ message: response }),\r\n          invalidatesTags: (result, error, item) => [{ type: apiTagType, id: item.id }]\r\n        }),\r\n        get: () => rktBuilder.query({\r\n          query: (id) => ({\r\n            url: '',\r\n            params: {\r\n               id\r\n            }\r\n          }),\r\n          providesTags: (result, error, id) => ([{ type: apiTagType, id: id }]),\r\n            transformResponse: (response) => {\r\n              if (response.Status == 0) {\r\n                return response.DataObject;\r\n              }\r\n              else {\r\n                return response.json().then((response) => normalizeErrors(response.errors));\r\n              }\r\n            }\r\n        }),\r\n        getItems: () => rktBuilder.query({\r\n          query: ({ filter, order = [], pagination = {} } = {}) => ({\r\n            url: 'Items',\r\n            params: normalizeQueryParameters({ filter, order, pagination })\r\n          }),\r\n          providesTags: (result) => {\r\n            if (result) {\r\n              return [...result.map(({ id }) => ({ type: apiTagType, id })), { type: apiTagType, id: '*' }];\r\n            }\r\n            else {\r\n              return [{ type: apiTagType, id: '*' }];\r\n            }\r\n          }\r\n        }),\r\n        getList: () => rktBuilder.query({\r\n          query: ({ filter, order = [], pagination = {} } = {}) => {\r\n            return ({\r\n              url: 'List',\r\n              params: normalizeQueryParameters({ filter, order, pagination })\r\n            })\r\n          },\r\n          transformResponse: (response) => ({\r\n            data: response.DataObject,\r\n            length: response.DataObject.length\r\n          }),\r\n          providesTags: (result) => {\r\n            if (result?.data) {\r\n              return [...result.data.map(({ id }) => ({ type: apiTagType, id })), { type: apiTagType, id: '*' }];\r\n            }\r\n            else {\r\n              return [{ type: apiTagType, id: '*' }];\r\n            }\r\n          }\r\n        })\r\n      };\r\n\r\n      return endpoints(builder);\r\n    },\r\n    ...options\r\n  });\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\apiUrl.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\routes.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\permissionsKeys.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\routeWithLoader\\RouteWithLoader.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\routeWithSidebar\\RouteWithSidebar.jsx",["803"],[],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, useHistory, } from 'react-router-dom';\r\n\r\nimport { Routes } from '../../routes';\r\n\r\nimport Sidebar from '../sidebar';\r\nimport Navbar from '../navbar';\r\nimport Footer from \"../footer\";\r\n\r\nlet RouteWithSidebar = ({ permission, component: Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!auth.token)\r\n      history.push(Routes.Signin.path);\r\n  }, [auth.token]);\r\n\r\n  return (\r\n    <Route {...rest} render={props => (\r\n      <div className=\"d-flex\">\r\n        <nav className=\"vh-100 p-4 d-none d-lg-block shadow bg-white\" style={{ width: '300px', minWidth: '300px' }}>\r\n          <Sidebar />\r\n        </nav>\r\n        <div className=\"flex-fill bg-light\">\r\n          <div className=\"vh-100 d-flex flex-column\">\r\n            <header className=\"px-4\">\r\n              <Navbar />\r\n            </header>\r\n            <main className=\"flex-fill p-4 overflow-auto\">\r\n              <Component {...props} />\r\n            </main>\r\n            <footer className=\"p-4\">\r\n              <Footer />\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSidebar;","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\notFound\\NotFound.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\form.jsx",["804","805","806"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Card, Col, Form, Row } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { TranslatableText } from '../../components/translations';\r\nimport { useGetListQuery as useGetRolesQuery } from '../../redux/apis/roles';\r\nimport { useAddMutation, useGetQuery as useGetUserQuery, useUpdateMutation } from '../../redux/apis/users';\r\nimport { Section, SectionBody, SectionHeader, SectionTitle } from '../../components/section';\r\n\r\nexport default function UserForm({ Id, disabled = false }) {\r\n  const history = useHistory();\r\n  const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddMutation();\r\n  const [update, { isSuccess: isUpdateSuccess, data: updateData, isError: isUpdateError, error: updateError }] = useUpdateMutation();\r\n  const { data: roles = [] } = useGetRolesQuery();\r\n  const { data: { Nombre, Apellido, Usuario, EmpleadosRoles } = {} } = useGetUserQuery(Id, { skip: !!!Id });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      Id: Id,\r\n      Nombre: Nombre || '',\r\n      Apellido: Apellido || '',\r\n      Usuario: Usuario || '',\r\n      UsuarioRoles: (EmpleadosRoles || []).map((Id) => `${Id.RolId}`),\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      Usuario: Yup.string().email('Debe ingresar un correo electrónico válido').required('Debe ingresar Email'),\r\n      Nombre: Yup.string().required('Debe ingresar Nombre'),\r\n      Apellido: Yup.string().required( 'Debe ingresar Apellido'),   \r\n    }),\r\n    onSubmit: (values) => {\r\n      if (Id) {\r\n        return update(values);\r\n      }\r\n      else {\r\n        formik.setFieldValue('Id',0);\r\n        return add(values);\r\n      }\r\n    }\r\n  });\r\n\r\n  const onCancelClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const getCheckProps = (role, name) => {\r\n    return ({\r\n      ...formik.getFieldProps(name),\r\n      label: role.Nombre,\r\n      value: `${role.Id}`,\r\n      checked: formik.values.UsuarioRoles.includes(`${role.Id}`),      \r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAddSuccess) {\r\n      toast.success(\"Asociado se registro con exito\");\r\n      history.goBack();\r\n    }\r\n    else if (isUpdateSuccess) {\r\n      toast.success(\"Asociado se edito con exito\");\r\n      history.goBack();\r\n    }\r\n  }, [isAddSuccess, addData, isUpdateSuccess, updateData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddError) {\r\n      toast.error([].concat(...Object.values(JSON.parse(addError.data).Messages)));\r\n      formik.setErrors({ ...addError.data, email: addError.data.email || addError.data.userName });\r\n    }\r\n    else if (isUpdateError) {\r\n      toast.error([].concat(...Object.values(JSON.parse(updateError.data).Messages)));\r\n      formik.setErrors({ ...updateError.data, email: updateError.data.email || updateError.data.userName });\r\n    }\r\n  }, [isAddError, addError, isUpdateError, updateError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} className=\"pt-4\">\r\n      <Section>\r\n        <SectionHeader className=\"d-flex align-items-center\">\r\n          <SectionTitle className=\"flex-fill\">\r\n            <TranslatableText  entry=\"Empleado\" />\r\n          </SectionTitle>\r\n          <div className=\"d-block\">\r\n            <Button type=\"button\" variant=\"outline-primary\" onClick={onCancelClick}>\r\n              <TranslatableText entry=\"Cancelar\" />\r\n            </Button>\r\n            <Button type=\"submit\" className=\"ms-2\" hidden={disabled}>\r\n              <TranslatableText entry=\"Guardar\" />\r\n            </Button>\r\n          </div>\r\n        </SectionHeader>\r\n        <SectionBody>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText  entry=\"Usuario\" />\r\n                </Form.Label>\r\n                <Form.Control type=\"email\" {...formik.getFieldProps('Usuario')} isInvalid={!!formik.errors.Usuario && formik.touched.Usuario} disabled={disabled || !!Id} />\r\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.Usuario}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText  entry=\"Nombre\" />\r\n                </Form.Label>\r\n                <Form.Control type=\"text\"  {...formik.getFieldProps('Nombre')} isInvalid={!!formik.errors.Nombre && formik.touched.Nombre} disabled={disabled} />\r\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.Nombre}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText  entry=\"Apellido\" />\r\n                </Form.Label>\r\n                <Form.Control type=\"text\"  {...formik.getFieldProps('Apellido')} isInvalid={!!formik.errors.Apellido && formik.touched.Apellido} disabled={disabled} />\r\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.Apellido}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            \r\n          </Row>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText  entry=\"Roles\" />\r\n            </Form.Label>            \r\n            {roles.data?.map((role) => (<Form.Check key={role.id} type=\"checkbox\" {...getCheckProps(role, 'UsuarioRoles')} />))}\r\n          </Form.Group>\r\n          </SectionBody>\r\n      </Section>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\form.jsx",["807","808"],[],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { TranslatableText, useTranslations } from '../../components/translations';\r\nimport { translationsGroupNames } from \"../../utils/translationsGroupNames\";\r\nimport { useAddMutation } from '../../redux/apis/representante-patentes';\r\n\r\nexport default function PatenteForm({ id }) {\r\n  const history = useHistory();\r\n  const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddMutation();\r\n\r\n  const { translations: representantesTranslations } = useTranslations({ group: translationsGroupNames.Representantes, keys: ['Patente'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      patente: '',\r\n      escalable: false,\r\n      representanteId: 0\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      patente: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', representantesTranslations.Patente))\r\n    }),\r\n    onSubmit: (values) => {\r\n      return add(values);\r\n    }\r\n  });\r\n\r\n  const onCancelClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAddSuccess) {\r\n      toast.success(addData.message);\r\n      history.goBack();\r\n    }\r\n  }, [isAddSuccess, addData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddError) {\r\n      formik.setErrors(addError.error);\r\n    }\r\n  }, [isAddError, addError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>\r\n            <TranslatableText group={translationsGroupNames.Representantes} entry=\"Patente\" />\r\n          </h4>\r\n        </div>\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Button type=\"submit\">\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Save\" />\r\n          </Button>\r\n          <Button type=\"button\" onClick={onCancelClick}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"Patente\" />\r\n        </Form.Label>\r\n        <Form.Control autoFocus type=\"text\" {...formik.getFieldProps('patente')} isInvalid={!!formik.errors.patente} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.patente}</Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\lostpassword\\index.jsx",["809","810","811"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Form, Button,Container } from '@themesberg/react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLostPasswordMutation } from \"../../../redux/apis/auth\";\r\nimport { TranslatableText, useTranslations } from \"../../../components/translations\";\r\nimport { Routes } from \"../../../routes\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ReCaptcha } from 'react-recaptcha-google';\r\nimport { apiUrl } from '../../../utils/apiUrl';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport toast from 'react-hot-toast';\r\nimport { translationsGroupNames } from \"../../../utils/translationsGroupNames\";\r\n\r\nlet LostPassword = (props) => {\r\n  const history = useHistory();\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n  const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['Email','Password'] });\r\n  const [passwordLost,  { isSuccess: isLostPasswordSuccess, data: lostPasswordData, isError: isLostPasswordError, error: lostPasswordError }] = useLostPasswordMutation();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const [isReCaptchaValid, setisReCaptchaValid] = useState(false)\r\n  \r\n  \r\n  useEffect(() => {\r\n    if (isLostPasswordSuccess) {\r\n      history.push(Routes.LostPassword.VerifyEmail.path);\r\n      history.replace(Routes.LostPassword.VerifyEmail.path);\r\n    }\r\n    else if (isLostPasswordError) {\r\n      const errors = [].concat(...Object.values(lostPasswordError.data));\r\n      toast.error(errors);\r\n    }\r\n  }, [isLostPasswordSuccess, lostPasswordData, isLostPasswordError, lostPasswordError, history]);\r\n  \r\n  let captchaDemo = '';\r\n\r\n  const onLoadRecaptcha = () => {\r\n      if (captchaDemo) {\r\n          captchaDemo.reset();\r\n      }\r\n  }\r\n\r\n  const verifyCallback = (recaptchaToken) => {\r\n      setisReCaptchaValid(true)\r\n  }\r\n\r\n  const onExpiredRecaptcha = (response) => {    \r\n    if (response == undefined){      \r\n      setisReCaptchaValid(false)\r\n    }    \r\n  } \r\n\r\n  useEffect(() => {\r\n      console.log(apiUrl.RecaptchaURL);\r\n      if (captchaDemo) {\r\n          captchaDemo.reset();\r\n      }\r\n  }, [])\r\n\r\n  const onCancelClick = () => {\r\n    history.goBack();\r\n};\r\n  \r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      email: '',\r\n      Recaptcha: false,\r\n    },\r\n    validationSchema: Yup.object().shape({       \r\n        email: Yup.string().email(errorsTranslations.InvalidFormat.replace('{0}', genericTranslations.Email)).required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Email)),\r\n        Recaptcha: Yup.boolean().oneOf([!isReCaptchaValid], errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Recaptcha)),\r\n        }),\r\n        onSubmit : (values) => {\r\n          passwordLost(values);          \r\n        },\r\n});\r\n\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n        <Container>\r\n          <Row className=\"justify-content-center form-bg-image\" >\r\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                  <h3 className=\"mb-0\">\r\n                    <TranslatableText group={translationsGroupNames.Generic} entry=\"LostPassword\" />\r\n                  </h3>\r\n                </div>\r\n                <Form className=\"mt-4\" onSubmit={formik.handleSubmit}> \r\n                <Form.Group id=\"email\" className=\"mb-4\">\r\n                    <Form.Label>\r\n                        <TranslatableText group={translationsGroupNames.Generic} entry=\"Email\" />\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                         {...formik.getFieldProps('email')}\r\n                         isInvalid={!!formik.errors.email}\r\n                         placeholder={genericTranslations.Email}\r\n                         type=\"email\"\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">{formik.errors.email}</Form.Control.Feedback>\r\n                </Form.Group>\r\n                  <Form.Group>\r\n                    <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n                        <ReCaptcha\r\n                            ref={(el) => { captchaDemo = el; }}\r\n                            size=\"normal\"\r\n                            render=\"explicit\"\r\n                            name=\"Recaptcha\"\r\n                            hl={\"es\"}\r\n                            sitekey={apiUrl.RecaptchaURL}\r\n                            onloadCallback={onLoadRecaptcha}\r\n                            verifyCallback={verifyCallback}\r\n                            expiredCallback ={onExpiredRecaptcha} \r\n                        />\r\n                              {formik.touched.Recaptcha && formik.errors.Recaptcha ?\r\n                                (\r\n                                  <div className=\"fv-plugins-message-container\">\r\n                                      <div className=\"invalid-feedback d-block\">{formik.errors.Recaptcha}</div>\r\n                                  </div>\r\n                                ):null\r\n                              }\r\n                    </div>\r\n                  </Form.Group>\r\n                 \r\n                  <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                    <TranslatableText group={translationsGroupNames.Generic} entry=\"ConfirmEmail\" />\r\n                  </Button>\r\n                  <br/>\r\n                  <br/>\r\n                  <Button variant=\"primary\" onClick={onCancelClick} className=\"w-100\">\r\n                    <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n                  </Button>\r\n                </Form>\r\n               \r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LostPassword;","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\form.jsx",["812","813","814","815"],[],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form, Tab, Tabs } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { TranslatableText, useTranslations } from '../../../components/translations';\r\nimport { useAddMutation, useGetQuery as useGetTerminalQuery, useUpdateMutation } from '../../../redux/apis/terminales';\r\nimport { translationsGroupNames } from '../../../utils/translationsGroupNames';\r\n\r\nexport default function UserForm({ id, disabled = false }) {\r\n  const history = useHistory();\r\n  const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddMutation();\r\n  const [update, { isSuccess: isUpdateSuccess, data: updateData, isError: isUpdateError, error: updateError }] = useUpdateMutation();\r\n\r\n  const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['FirstName', 'General', 'Terminal'] });\r\n  const { translations: terminalesTranslations } = useTranslations({ group: translationsGroupNames.Terminales, keys: ['Terminales', 'Cuit', 'NumeroDePlanta'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n\r\n  const { data: { nombre, cuit, nroPlanta } = {} } = useGetTerminalQuery(id, { skip: !!!id });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      id: id || 0,\r\n      nombre: nombre || '',\r\n      cuit: cuit || 0,\r\n      nroPlanta: nroPlanta || 0,\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      nombre: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FirstName)),\r\n      cuit: Yup.number()\r\n              .notOneOf([0], errorsTranslations.FieldRequired.replace('{0}', terminalesTranslations.Cuit))\r\n              .test('len', errorsTranslations.InvalidFormat.replace('{0}', terminalesTranslations.Cuit), (val) => val?.toString().length === 11)\r\n              .required(errorsTranslations.FieldRequired.replace('{0}', terminalesTranslations.Cuit)),\r\n      nroPlanta: Yup.number()\r\n                  .notOneOf([0], errorsTranslations.FieldRequired.replace('{0}', terminalesTranslations.NumeroDePlanta))\r\n                  .required(errorsTranslations.FieldRequired.replace('{0}', terminalesTranslations.NumeroDePlanta)),\r\n    }),\r\n    onSubmit: (values) => {\r\n      if (id) {\r\n        return update(values);\r\n      }\r\n      else\r\n      {\r\n        return add(values);\r\n      }\r\n    }\r\n  });\r\n\r\n  const onCancelClick = () => {\r\n    formik.resetForm();\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAddSuccess) {\r\n      toast.success(addData.message);\r\n      formik.resetForm();\r\n      history.goBack();\r\n    }\r\n    else if (isUpdateSuccess) {\r\n      toast.success(updateData.message);\r\n      formik.resetForm();\r\n      history.goBack();\r\n    }\r\n  }, [isAddSuccess, addData, isUpdateSuccess, updateData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddError) {\r\n      toast.error(addError.data.cuit);\r\n      formik.setErrors({cuit: addError.data.cuit});\r\n    }\r\n    else if (isUpdateError) {\r\n      toast.error(updateError.data.cuit);\r\n      formik.setErrors({cuit: updateError.data.cuit});\r\n    }\r\n  }, [isAddError, addError, isUpdateError, updateError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>{terminalesTranslations.Terminales}</h4>\r\n        </div>\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Button type=\"submit\" hidden={disabled}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Save\" />\r\n          </Button>\r\n          <Button type=\"button\" onClick={onCancelClick}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText group={translationsGroupNames.Generic} entry=\"FirstName\" />\r\n            </Form.Label>\r\n            <Form.Control type=\"text\" {...formik.getFieldProps('nombre')} isInvalid={!!formik.errors.nombre} disabled={disabled} autoFocus/>\r\n            <Form.Control.Feedback type=\"invalid\">{formik.errors.nombre}</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText group={translationsGroupNames.Terminales} entry=\"Cuit\" />\r\n            </Form.Label>\r\n            <Form.Control type=\"number\"  {...formik.getFieldProps('cuit')} isInvalid={!!formik.errors.cuit} disabled={disabled} />\r\n            <Form.Control.Feedback type=\"invalid\">{formik.errors.cuit}</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText group={translationsGroupNames.Terminales} entry=\"NumeroDePlanta\" />\r\n            </Form.Label>\r\n            <Form.Control type=\"number\"  {...formik.getFieldProps('nroPlanta')} isInvalid={!!formik.errors.nroPlanta} disabled={disabled} />\r\n            <Form.Control.Feedback type=\"invalid\">{formik.errors.nroPlanta}</Form.Control.Feedback>\r\n          </Form.Group>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\form.jsx",["816","817","818","819","820","821","822"],[],"import React, { useEffect , us} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\n\r\nimport { TranslatableText, useTranslations } from '../../../components/translations';\r\nimport { useGetQuery as useGetTalonarioQuery } from '../../../redux/apis/talonarios';\r\nimport { translationsGroupNames } from \"../../../utils/translationsGroupNames\";\r\n\r\nimport Manager from '../../../components/manager';\r\n\r\nimport Table from './tabletickets/table/index';\r\nimport Header from './tabletickets/header';\r\nimport Tickets from './tabletickets'\r\n\r\nexport default function TalonarioTicketsForm({ id}) {\r\n  const history = useHistory();\r\n  const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['NumeroDesde', 'NumeroHasta', 'UltimoNumero', 'UltimoNumero', 'Cancel', 'Completo'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n  const { translations: terminalesTranslations } = useTranslations({ group: translationsGroupNames.Terminales, keys: ['TalonariosTickets'] }); \r\n  const { data: talonario = {} } = useGetTalonarioQuery(id);\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      id: id,\r\n      numeroDesde: talonario.numeroDesde || '',\r\n      numeroHasta: talonario.numeroHasta || '',\r\n      ultimoNumero: talonario.ultimoNumero || '',\r\n      completo: talonario.completo? 'si':'no' || ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n    }),\r\n   \r\n  });\r\n\r\n  const onCancelClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n \r\n \r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>{terminalesTranslations.TalonariosTickets}</h4>\r\n        </div>\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Button type=\"button\" onClick={onCancelClick}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n        <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText group={translationsGroupNames.Generic} entry=\"NumeroDesde\" />\r\n            </Form.Label>\r\n            <Form.Control autoFocus type=\"name\" {...formik.getFieldProps('numeroDesde')} isInvalid={!!formik.errors.numeroDesde} disabled={true} />\r\n            <Form.Control.Feedback type=\"invalid\">{formik.errors.numeroDesde}</Form.Control.Feedback>\r\n        </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText group={translationsGroupNames.Generic} entry=\"NumeroHasta\" />\r\n            </Form.Label>\r\n            <Form.Control type=\"text\"  {...formik.getFieldProps('numeroHasta')} isInvalid={!!formik.errors.numeroHasta} disabled={true} />\r\n            <Form.Control.Feedback type=\"invalid\">{formik.errors.numeroHasta}</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText group={translationsGroupNames.Terminales} entry=\"UltimoNumero\" />\r\n            </Form.Label>\r\n            <Form.Control type=\"text\"  {...formik.getFieldProps('ultimoNumero')} isInvalid={!!formik.errors.ultimoNumero} disabled={true} />\r\n            <Form.Control.Feedback type=\"invalid\">{formik.errors.ultimoNumero}</Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>\r\n              <TranslatableText group={translationsGroupNames.Terminales} entry=\"Completo\" />\r\n            </Form.Label>\r\n            <Form.Control type=\"text\"  {...formik.getFieldProps('completo')} isInvalid={!!formik.errors.completo} disabled={true} />\r\n            <Form.Control.Feedback type=\"invalid\">{formik.errors.completo}</Form.Control.Feedback>\r\n          </Form.Group> \r\n          <br/> \r\n          <Tickets filter={{terminalTalonarioId: id }}></Tickets>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\index.jsx",["823"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\index.jsx",["824"],[],"import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { Button, Modal } from '@themesberg/react-bootstrap';\r\n\r\nimport Manager from '../../components/manager';\r\nimport { TranslatableText } from '../../components/translations';\r\nimport { api as representantePatentes, useDeleteMutation } from '../../redux/apis/representante-patentes';\r\nimport withRedux from '../../redux/hoc/manager';\r\n\r\nimport Table from './table';\r\nimport Header from './header';\r\nimport { translationsGroupNames } from '../../utils/translationsGroupNames';\r\n\r\nconst Patentes = ({ source, onQueryChange }) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [remove, { isSuccess: isDeleteSuccess, data: deleteData, isError: isDeleteError, error: deleteError }] = useDeleteMutation();\r\n\r\n  const onSaveHandler = () => {\r\n    remove(id);\r\n  };\r\n  const onCancelHandler = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isDeleteSuccess) {\r\n      toast.success(deleteData.message);\r\n      history.goBack();\r\n    }\r\n    else if (isDeleteError) {\r\n      const errors = [].concat(...Object.values(deleteError.data));\r\n      toast.error(errors);\r\n    }\r\n  }, [isDeleteSuccess, deleteData, isDeleteError, deleteError]);\r\n\r\n  return (\r\n    <>\r\n      <Manager header={Header} table={Table} source={source} onQueryChange={onQueryChange} />\r\n      <Modal show={!!id} onHide={onCancelHandler} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Delete\" />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <TranslatableText group={translationsGroupNames.Confirmations} entry=\"DeleteConfirmation\" />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type=\"button\" onClick={onSaveHandler}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Save\" />\r\n          </Button>\r\n          <Button type=\"button\" onClick={onCancelHandler}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRedux(representantePatentes)(Patentes);","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\account\\changepassword\\successPassword\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\index.jsx",["825"],[],"import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { Button, Modal } from '@themesberg/react-bootstrap';\r\n\r\nimport Manager from '../../../components/manager';\r\nimport { TranslatableText } from '../../../components/translations';\r\nimport { api as terminales, useDeleteMutation } from '../../../redux/apis/terminales';\r\nimport withRedux from '../../../redux/hoc/manager';\r\n\r\nimport Table from './table';\r\nimport Header from './header';\r\nimport { translationsGroupNames } from '../../../utils/translationsGroupNames';\r\n\r\nconst Terminales = ({ source, onQueryChange }) => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const [remove, { isSuccess: isDeleteSuccess, data: deleteData, isError: isDeleteError, error: deleteError }] = useDeleteMutation();\r\n\r\n    const onSaveHandler = () => {\r\n        remove(id);\r\n    };\r\n    const onCancelHandler = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isDeleteSuccess) {\r\n            toast.success(deleteData.message);\r\n            history.goBack();\r\n        }\r\n        else if (isDeleteError)\r\n        {\r\n            const errors = [].concat(...Object.values(deleteError.data));\r\n            toast.error(errors);\r\n        }\r\n    }, [isDeleteSuccess, deleteData, isDeleteError, deleteError]);\r\n\r\n    return (\r\n        <>\r\n        <Manager header={Header} table={Table} source={source} onQueryChange={onQueryChange} />\r\n        <Modal show={!!id} onHide={onCancelHandler} backdrop=\"static\" keyboard={false}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>\r\n                <TranslatableText group={translationsGroupNames.Generic} entry=\"Delete\" />\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <TranslatableText group={translationsGroupNames.Confirmations} entry=\"DeleteConfirmation\" />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button type=\"button\" onClick={onSaveHandler}>\r\n                <TranslatableText group={translationsGroupNames.Generic} entry=\"Save\" />\r\n            </Button>\r\n            <Button type=\"button\" onClick={onCancelHandler}>\r\n                <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRedux(terminales)(Terminales);","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\account\\changepassword\\index.jsx",["826","827","828","829","830"],[],"import React, { useEffect } from 'react';\r\nimport { Form, Button, Image, Container } from '@themesberg/react-bootstrap';\r\nimport { TranslatableText } from \"../../../../components/translations\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useResetPasswordMutation } from '../../../../redux/apis/auth';\r\nimport { Routes } from './../../../../routes';\r\nimport { Section, SectionTitle } from '../../../../components/section';\r\nimport Logo from '../../../../assets/images/logo.png';\r\n\r\nexport default   () => {\r\n    const history = useHistory();\r\n  \r\n  const [resetPassword, { isSuccess: isResetPasswordSuccess, isError: isResetPasswordError, data: resetPasswordData, error: resetPasswordError }] = useResetPasswordMutation();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      confirmpassword: '',\r\n      password: '',\r\n      passwordnueva: '',\r\n      errorResetPassword: ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      password: Yup.string().required('Debe ingresar Contraseña'),\r\n      passwordnueva: Yup.string().required('Debe ingresar Contraseña'),\r\n      confirmpassword: Yup.string()\r\n        .oneOf([Yup.ref('passwordnueva'), null], 'Las contraseñas deben ser iguales')\r\n        .required('Debe confirmar Contraseña')\r\n\r\n    }),\r\n    onSubmit: (values) => {\r\n      resetPassword(values);\r\n    },\r\n  });\r\n\r\n    useEffect(() => {\r\n        if (isResetPasswordSuccess) {\r\n          history.push(Routes.AccountChangePassword.SuccessPassword.path);\r\n        }\r\n        else if (isResetPasswordError) {\r\n            formik.setErrors({ errorResetPassword: [].concat(...Object.values(JSON.parse(resetPasswordError.data).Messages)) });\r\n        }\r\n      }, [isResetPasswordSuccess, resetPasswordData, isResetPasswordError, resetPasswordError, history]);\r\n     \r\n      const onCancelClick = () => {\r\n        history.goBack();\r\n    };\r\n    \r\n    return (\r\n        <Section className=\"auth p-5 rounded-5\">\r\n        <Container fluid className=\"text-center\">\r\n        <Image fluid src={Logo} className=\"mb-3\" />\r\n         </Container>\r\n        <SectionTitle className=\"text-center mb-3\">\r\n          <TranslatableText entry=\"Cambio de Contraseña\" />\r\n        </SectionTitle>\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Form.Group>\r\n          <Form.Group id=\"password\" className=\"mb-3\">\r\n              <Form.Label>\r\n                <TranslatableText  entry=\"Contraseña\" />*\r\n              </Form.Label>\r\n              <Form.Control type=\"password\" placeholder='Ingrese su contraseña' {...formik.getFieldProps('password')} isInvalid={!!formik.errors.password} />\r\n              <Form.Control.Feedback type=\"invalid\">{formik.errors.password}</Form.Control.Feedback>\r\n           </Form.Group>  \r\n            <Form.Group id=\"passwordnew\" className=\"mb-3\">\r\n              <Form.Label>\r\n                <TranslatableText entry=\"Nueva Contraseña\" />*\r\n              </Form.Label>\r\n              <Form.Control type=\"password\" placeholder='Ingrese su nueva contraseña' {...formik.getFieldProps('passwordnueva')} isInvalid={!!formik.errors.passwordnueva} />\r\n              <Form.Control.Feedback type=\"invalid\">{formik.errors.passwordnueva}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group id=\"confirmpassword\" className=\"mb-3\">\r\n              <Form.Label>\r\n                <TranslatableText entry=\"Confirmar Contraseña\" />*\r\n              </Form.Label>\r\n              <Form.Control type=\"password\" placeholder='Confirma tu nueva contraseña' {...formik.getFieldProps('confirmpassword')} isInvalid={!!formik.errors.confirmpassword} />\r\n              <Form.Control.Feedback type=\"invalid\">{formik.errors.confirmpassword}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group id=\"errorResetPassword\" className=\"mb-3 invalid\">\r\n              <Form.Control hidden={true} type=\"invalid\"{...formik.getFieldProps('errorResetPassword')} isInvalid={!!formik.errors.errorResetPassword} />\r\n              <Form.Control.Feedback type=\"invalid\">{formik.errors.errorResetPassword}</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"d-grid\">\r\n              <Button type=\"submit\" variant=\"primary\">\r\n                <TranslatableText entry=\"Restableser Contraseña\" />\r\n              </Button>\r\n            </Form.Group>\r\n             <Form.Group className=\"mt-3 d-grid\">\r\n              <Button variant=\"outline-primary\" onClick={onCancelClick}>\r\n                <TranslatableText  entry=\"Cancelar\" />\r\n              </Button>\r\n            </Form.Group>\r\n          </Form.Group>\r\n        </Form>\r\n      </Section>\r\n    );\r\n}\r\n","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\index.jsx",["831"],[],"import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { Button, Modal } from '@themesberg/react-bootstrap';\r\n\r\nimport Manager from '../../components/manager';\r\nimport { TranslatableText } from '../../components/translations';\r\nimport { api as roles, useDeleteMutation } from '../../redux/apis/roles';\r\nimport withRedux from '../../redux/hoc/manager';\r\n\r\nimport Table from './table';\r\nimport Header from './header';\r\nimport { translationsGroupNames } from '../../utils/translationsGroupNames';\r\n\r\nconst Roles = ({ source, onQueryChange }) => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [remove, { isSuccess: isDeleteSuccess, data: deleteData, isError: isDeleteError, error: deleteError }] = useDeleteMutation();\r\n\r\n  const onSaveHandler = () => {\r\n    remove(id);\r\n  };\r\n  const onCancelHandler = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isDeleteSuccess) {\r\n      toast.success(deleteData.message);\r\n      history.goBack();\r\n    }\r\n    else if (isDeleteError) {\r\n      const errors = [].concat(...Object.values(deleteError.data));\r\n      toast.error(errors);\r\n    }\r\n  }, [isDeleteSuccess, deleteData, isDeleteError, deleteError]);\r\n\r\n  return (\r\n    <>\r\n      <Manager header={Header} table={Table} source={source} onQueryChange={onQueryChange} />\r\n      <Modal show={!!id} onHide={onCancelHandler} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Delete\" />\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <TranslatableText group={translationsGroupNames.Confirmations} entry=\"DeleteConfirmation\" />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type=\"button\" variant=\"outline-primary\" onClick={onCancelHandler}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n          </Button>\r\n          <Button type=\"button\" className=\"ms-2\" onClick={onSaveHandler}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Save\" />\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRedux(roles)(Roles);","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\dashboard\\index.jsx",["832"],[],"import React from \"react\";\r\n\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <div className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\r\n    </div>\r\n  );\r\n};\r\n","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\signup\\index.jsx",["833","834","835","836"],[],"import React, { useEffect, useState} from \"react\";\r\nimport { apiUrl } from '../../../utils/apiUrl';\r\nimport { userType as userTypeId } from '../../../utils/userTypes';\r\nimport { Col, Row, Form, Card, Button, FormCheck, Container, Modal } from '@themesberg/react-bootstrap';\r\nimport { ReCaptcha } from 'react-recaptcha-google';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TranslatableText, useTranslations } from \"../../../components/translations\";\r\nimport { useAddMutation } from '../../../redux/apis/users';\r\nimport { Routes } from \"../../../routes\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { translationsGroupNames } from \"../../../utils/translationsGroupNames\";\r\nimport { useGetListQuery as useGetListContenidoQuery} from \"../../../redux/apis/contenidos\";\r\n\r\nlet Signup = (props) => {\r\n    const [add, { isSuccess: isAddSuccess, isError: isAddError, data: addData, error: addError}] = useAddMutation();\r\n\r\n    const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['FirstName', 'LastName', 'Email', 'TermsAndConditions', 'Recaptcha', 'UserType'] });\r\n    const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n    const { data: { data: contenidos = [] } = {}  } = useGetListContenidoQuery();\r\n\r\n    const history = useHistory();\r\n\r\n    const [isReCaptchaValid, setisReCaptchaValid] = useState(false)\r\n\r\n    //formik\r\n    const formik = useFormik({\r\n        enableReinitialize: true,\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            termsAndConditions: false,\r\n            Recaptcha: false,\r\n            userType: {\r\n                id: userTypeId.RepresentativeLogistic\r\n            },\r\n            termiYcondicion: ''\r\n        },\r\n        validationSchema: Yup.object().shape({\r\n            firstName: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FirstName)),\r\n            lastName: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.LastName)),\r\n            email: Yup.string()\r\n                .email(errorsTranslations.InvalidFormat.replace('{0}', genericTranslations.Email))\r\n                .required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Email)),\r\n            termsAndConditions: Yup.boolean().oneOf([true], errorsTranslations.FieldRequired.replace('{0}', genericTranslations.TermsAndConditions)),\r\n            Recaptcha: Yup.boolean().oneOf([!isReCaptchaValid], errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Recaptcha)),\r\n            userType: Yup.object().shape({\r\n                id: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.UserType))\r\n            }),\r\n        }),\r\n        onSubmit: (values) => {\r\n            if(isReCaptchaValid){\r\n                add(values);\r\n            }\r\n        }\r\n    });\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => {      \r\n      setShow(true);\r\n  }\r\n\r\n   useEffect(() => {\r\n        if (contenidos.length) {\r\n          const contenido = contenidos.find((c=> c.tipoContenidoId==-1))\r\n          if (contenido) {\r\n            formik.setFieldValue('termiYcondicion', contenido.descripcion);\r\n          }\r\n          else {\r\n            formik.setFieldValue('termiYcondicion', '');\r\n          }\r\n        }\r\n      }, [formik.values.termiYcondicion, contenidos]);\r\n\r\n    \r\n    \r\n    //Captcha\r\n    let captchaDemo = '';\r\n\r\n    useEffect(() => {\r\n        if (captchaDemo) {\r\n            captchaDemo.reset();\r\n        }\r\n    }, [])\r\n\r\n    const onLoadRecaptcha = () => {\r\n        if (captchaDemo) {\r\n            captchaDemo.reset();\r\n        }\r\n    }\r\n\r\n    const verifyCallback = (recaptchaToken) => {\r\n        setisReCaptchaValid(true);\r\n    }\r\n\r\n    const onExpiredRecaptcha = (response) => {\r\n            setisReCaptchaValid(false);\r\n    }\r\n\r\n    const onCancelClick = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAddSuccess) {\r\n            history.push(Routes.Signup.VerifyEmail.path.replace(':id', addData.data.id));\r\n        }\r\n    }, [isAddSuccess, addData, history]);\r\n\r\n    useEffect(() => {\r\n        if (isAddError) {\r\n            formik.setErrors({email: addError.data.userName});\r\n        }\r\n    }, [isAddError, addError]);\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center form-bg-image\" >\r\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                                <h3 className=\"mb-0\">\r\n                                    <TranslatableText group={translationsGroupNames.Generic} entry=\"SignupToOurPlatform\" />\r\n                                </h3>\r\n                                </div>\r\n                                <Form className=\"mt-4\" onSubmit={formik.handleSubmit}>\r\n                                    <Form.Group id=\"firstName\" className=\"mb-4\">\r\n                                        <Form.Label>\r\n                                            <TranslatableText group={translationsGroupNames.Generic} entry=\"YourFirstName\" />\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            {...formik.getFieldProps('firstName')}\r\n                                            isInvalid={!!formik.errors.firstName}\r\n                                            placeholder={genericTranslations.FirstName}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">{formik.errors.firstName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"lastName\" className=\"mb-4\">\r\n                                        <Form.Label>\r\n                                            <TranslatableText group={translationsGroupNames.Generic} entry=\"YourLastName\" />\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            {...formik.getFieldProps('lastName')}\r\n                                            isInvalid={!!formik.errors.lastName}\r\n                                            placeholder={genericTranslations.LastName}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">{formik.errors.lastName}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group id=\"email\" className=\"mb-4\">\r\n                                        <Form.Label>\r\n                                            <TranslatableText group={translationsGroupNames.Generic} entry=\"Email\" />\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            {...formik.getFieldProps('email')}\r\n                                            isInvalid={!!formik.errors.email}\r\n                                            placeholder={genericTranslations.Email}\r\n                                        />\r\n                                        <Form.Control.Feedback type=\"invalid\">{formik.errors.email}</Form.Control.Feedback>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n                                            <Form.Check type=\"checkbox\">\r\n                                                <FormCheck.Input\r\n                                                    id=\"defaultCheck5\"\r\n                                                    {...formik.getFieldProps('termsAndConditions')}\r\n                                                    isInvalid={!!formik.errors.termsAndConditions}\r\n                                                    className=\"me-2\"\r\n                                                />\r\n                                                <Card.Link className=\"small text-end\" onClick={handleShow}>\r\n                                                  <TranslatableText group={translationsGroupNames.Generic} entry=\"TermsAndConditions\" />\r\n                                                 </Card.Link>\r\n                                                <Form.Control.Feedback type=\"invalid\">{formik.errors.termsAndConditions}</Form.Control.Feedback>\r\n                                            </Form.Check>\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <div className=\"d-flex justify-content-center align-items-center mb-4\">\r\n                                            <ReCaptcha\r\n                                                ref={(el) => { captchaDemo = el; }}\r\n                                                size=\"normal\"\r\n                                                render=\"explicit\"\r\n                                                name=\"recaptcha\"\r\n                                                sitekey={apiUrl.RecaptchaURL}\r\n                                                onloadCallback={onLoadRecaptcha}\r\n                                                verifyCallback={verifyCallback}\r\n                                                expiredCallback ={onExpiredRecaptcha}\r\n                                            />\r\n                                            <br/>\r\n                                            <br/>\r\n                                            {formik.touched.Recaptcha && formik.errors.Recaptcha ? (\r\n                                                <div className=\"fv-plugins-message-container\">\r\n                                                    <div className=\"invalid-feedback d-block\">{formik.errors.Recaptcha}</div>\r\n                                                </div>\r\n                                            ) : <div></div>}\r\n                                        </div>\r\n                                    </Form.Group>\r\n                                    <Button type=\"submit\" variant=\"primary\" className=\"w-100\">\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"SignUp\" />\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <Button variant=\"primary\" onClick={onCancelClick} className=\"w-100\">\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"IHaveAnAccount\" />\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n            <Modal show={show} onHide={handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>\r\n                    <TranslatableText group={translationsGroupNames.Generic} entry=\"TitleTermsAndConditions\" />\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body> {formik.values.termiYcondicion}</Modal.Body>\r\n               <Modal.Footer>\r\n                 <Button variant=\"primary\" onClick={handleClose}>\r\n                   <TranslatableText group={translationsGroupNames.Generic} entry=\"Accept\" />\r\n                </Button>\r\n               </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Signup;","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\cobrartasa\\index.jsx",["837","838","839","840","841","842","843","844","845","846","847","848","849"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\nimport { TranslatableText, useTranslations } from '../../components/translations';\r\nimport { useCobrarTasaMutation } from '../../redux/apis/terminales';\r\nimport { useGetListQuery as useGetRepresentantesPatntesListQuery } from '../../redux/apis/representante-patentes';\r\nimport { translationsGroupNames } from '../../utils/translationsGroupNames';\r\nimport { useGetByTokenQuery } from '../../redux/apis/parametros';\r\nimport { useGetItemsQuery as useGetRepresentantesItemsQuery } from '../../redux/apis/representantes';\r\nimport Select from '../patentes/select';\r\n\r\nexport default ({ id }) => {\r\n  const { translations: representantesTranslations } = useTranslations({ group: translationsGroupNames.Representantes, keys: ['Patente', 'EsEscalableCamion', 'FormaPago'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n  const [cobrarTasa, { isSuccess: isCobrarTasaSuccess, data: cobrarTasaData, isError: isCobrarTasaError, error: cobrarTasaError }] = useCobrarTasaMutation();\r\n  const { data: { data: representantesPatente = [] } = {} } = useGetRepresentantesPatntesListQuery();\r\n  const { data: representantes = [] } = useGetRepresentantesItemsQuery();\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      representante: {id :0 },\r\n      representantePatenteId: { id: 0 },\r\n      esEscalable: '',\r\n      escalable: '',\r\n      esEfectivo: '',\r\n      efectivo: 0,\r\n      importe: ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      representante: Yup.object().shape({\r\n        id: Yup.number().integer().notOneOf([0], errorsTranslations.FieldRequired.replace('{0}', representantesTranslations.Representante)).required(errorsTranslations.FieldRequired.replace('{0}'))\r\n      }),\r\n      patente: Yup.object().shape({\r\n        id: Yup.number().integer().notOneOf([0], errorsTranslations.FieldRequired.replace('{0}', representantesTranslations.Patente)).required(errorsTranslations.FieldRequired.replace('{0}'))\r\n      }),\r\n      escalable: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', representantesTranslations.EsEscalableCamion)),\r\n      efectivo: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', representantesTranslations.FormaPago))\r\n    }),\r\n    onSubmit: (values) => {\r\n      cobrarTasa({ esEfectivo: values.esEfectivo, importe: values.importe, esEscalable: values.esEscalable, representantePatenteId: values.patente.id });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isCobrarTasaSuccess) {\r\n      toast.success(cobrarTasaData.message);\r\n      formik.resetForm();\r\n    }\r\n  }, [isCobrarTasaSuccess, cobrarTasaData]);\r\n\r\n  useEffect(() => {\r\n    if (isCobrarTasaError) {\r\n      formik.setErrors(cobrarTasaError.data);\r\n\r\n      const errors = [].concat(...Object.values(cobrarTasaError.data)).join('\\n');\r\n      toast.error(errors);\r\n    }\r\n  }, [isCobrarTasaError, cobrarTasaError]);\r\n\r\n  useEffect(() => {\r\n    if (formik.values.patente) {\r\n      const repatente = representantesPatente.find((rp) => `${rp.id}` === formik.values.patente.id);\r\n      if (repatente) {\r\n        if(repatente.escalable)\r\n        formik.setFieldValue('escalable', 1 ,true)\r\n\r\n      }\r\n      else{\r\n        formik.setFieldValue('escalable', 0 ,false)\r\n      }\r\n    }\r\n  }, [formik.values.patente]);\r\n\r\n  useEffect(() => {\r\n    if (formik.values.escalable == 0) {\r\n      formik.setFieldValue('escalable', '', false);\r\n      formik.setFieldValue('esEscalable', '', false);\r\n      formik.setFieldValue('importe', '', false)\r\n    }\r\n    if (formik.values.escalable == 1) {\r\n      formik.setFieldValue('escalable', 1, false);\r\n      formik.setFieldValue('esEscalable', true, false);\r\n      formik.setFieldValue('importe', 1200, false)\r\n    }\r\n    if (formik.values.escalable == 2) {\r\n      formik.setFieldValue('escalable', 2, false);\r\n      formik.setFieldValue('esEscalable', false, false);\r\n      formik.setFieldValue('importe',1200, false)\r\n    }\r\n  }, [ formik.values.escalable, formik.values.esEscalable]);\r\n\r\n  useEffect(() => {\r\n    if (formik.values.efectivo == 1) {\r\n      formik.setFieldValue('esEfectivo', true, false);\r\n    }\r\n    if (formik.values.efectivo == 0) {\r\n      formik.setFieldValue('esEfectivo', false, false);\r\n    }\r\n  }, [formik.values.efectivo]);\r\n\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>\r\n            <TranslatableText group={translationsGroupNames.Terminales} entry=\"CobrarTasa\" />\r\n          </h4>\r\n        </div>\r\n        <div className=\"d-block  mb-4 mb-md-0\">\r\n          <Button type=\"submit\">\r\n            <TranslatableText group={translationsGroupNames.Terminales} entry=\"CobrarTasa\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"Representante\" />\r\n        </Form.Label>\r\n        <Form.Select {...formik.getFieldProps('representante.id')} isInvalid={!!formik.errors.representante?.id}>\r\n          <option value=\"0\"></option>\r\n          {representantes.map((representante) => (<option key={representante.id} value={`${representante.id}`}>{representante.description}</option>))}\r\n        </Form.Select>\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.representante?.id}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"Patente\" />\r\n        </Form.Label>\r\n        <Select representante={formik.values.representante.id} {...formik.getFieldProps('patente.id')} isInvalid={!!formik.errors.patente?.id} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.patente?.id}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"EsEscalableCamion\" />\r\n        </Form.Label>\r\n        <Form.Select {...formik.getFieldProps('escalable')} isInvalid={!!formik.errors.escalable}>\r\n          <option value=\"0\"></option>\r\n          <option value=\"1\">Si</option>\r\n          <option value=\"2\">No</option>\r\n        </Form.Select>\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.escalable}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"FormaPago\" />\r\n        </Form.Label>\r\n        <Form.Select  {...formik.getFieldProps('efectivo')} isInvalid={!!formik.errors.efectivo}>\r\n          <option value=\"0\">Cuenta Corriente</option>\r\n          <option value=\"1\">Efectivo</option>\r\n        </Form.Select>\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.efectivo}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"ImporteCobrarTasa\" />\r\n        </Form.Label>\r\n        <Form.Control  {...formik.getFieldProps('importe')} type=\"text\" disabled={true} isInvalid={!!formik.errors.fechaHasta} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.fechaHasta}</Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\signin\\index.jsx",["850","851","852","853","854","855","856"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\signup\\verifyEmail\\index.jsx",["857","858","859"],[],"import React from 'react';\r\nimport { Col, Row, Container, Button, Card } from '@themesberg/react-bootstrap';\r\nimport { TranslatableText, useTranslations } from \"../../../../components/translations\";\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { Routes } from \"../../../../routes\";\r\nimport { useAddMutation, useGetQuery as useGetUserQuery } from '../../../../redux/apis/users';\r\nimport { useEffect } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { translationsGroupNames } from '../../../../utils/translationsGroupNames';\r\n\r\nconst VerifyEmail = () => {\r\n\r\n    const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['ReenvioMail'] });\r\n    const [add, { isSuccess: isAddSuccess, isError: isAddError, data: addData, error: addError}] = useAddMutation();\r\n    const { id } = useParams();\r\n    const { data: { firstName, lastName, email, userType, userRoles } = {} } = useGetUserQuery(id);\r\n\r\n    const notReceiveEmail = () => {\r\n        const entity= {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            userType: userType,\r\n            userRoles: (userRoles || []).map((id) => `${id}`)\r\n        }\r\n\r\n        add(entity);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isAddSuccess) {\r\n            toast.success(genericTranslations.ReenvioMail);\r\n        }\r\n    }, [isAddSuccess]);\r\n\r\n    useEffect(() => {\r\n        if (isAddError) {\r\n            toast.error(addError.data.message);\r\n        }\r\n    }, [isAddError, addError]);\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center form-bg-image\" >\r\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                                    <div className=\"alert alert-success\" role=\"alert\">\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"ConfirmRegistrationEmail\" /> \r\n                                        <br/>\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"VerifyEmailWelcome\" />                                        \r\n                                        <br/>\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"VerifySpam\" />                                    \r\n                                    </div>\r\n                                    <Card.Link as={Link} to={Routes.Signin.path} className=\"fw-bold\">\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"ReturnToLogin\" />\r\n                                    </Card.Link>\r\n                                    <br/>\r\n                                    <Button variant=\"light\" onClick={notReceiveEmail} className=\"w-100\">\r\n                                            <TranslatableText group={translationsGroupNames.Generic} entry=\"NotReceiveEmail\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\nexport default VerifyEmail;","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\auth\\lostpassword\\verifyEmail\\index.jsx",["860"],[],"import React from 'react';\r\nimport { Col, Row, Container, Card } from '@themesberg/react-bootstrap';\r\nimport { TranslatableText, useTranslations } from \"../../../../components/translations\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Routes } from \"../../../../routes\";\r\nimport { translationsGroupNames } from '../../../../utils/translationsGroupNames';\r\n\r\nconst VerifyEmail = () => {\r\n    return (\r\n        <main>\r\n            <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center form-bg-image\" >\r\n                        <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\r\n                            <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\r\n                                <div className=\"text-center text-md-center mb-4 mt-md-0\">\r\n                                    <div className=\"alert alert-success\" role=\"alert\">\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"VerifyEmail\" />                                        \r\n                                    </div>\r\n                                    <Card.Link as={Link} to={Routes.Signin.path} className=\"fw-bold\">\r\n                                        <TranslatableText group={translationsGroupNames.Generic} entry=\"ReturnToLogin\" />\r\n                                    </Card.Link>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\nexport default VerifyEmail;","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\index.jsx",["861","862"],[],"import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport Manager from '../../../components/manager';\r\nimport { api as cupos } from '../../../redux/apis/cupos';\r\nimport withRedux from '../../../redux/hoc/manager';\r\n\r\nimport Table from './table';\r\nimport Header from './header';\r\n\r\nconst Cupos = ({ source, onQueryChange }) => {\r\n    return (\r\n        <>\r\n        <Manager header={Header} table={Table} source={source} onQueryChange={onQueryChange} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRedux(cupos)(Cupos);","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\form\\index.jsx",["863","864"],[],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Card, Col, Form, Row } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { TranslatableText, useTranslations } from '../../../components/translations';\r\nimport { useGetItemsQuery as useGetPermissionQuery } from '../../../redux/apis/permissions';\r\nimport { useAddMutation, useGetQuery as useGetUserQuery, useUpdateMutation } from '../../../redux/apis/roles';\r\nimport { translationsGroupNames } from \"../../../utils/translationsGroupNames\";\r\nimport PermissionCheck from './permission-check';\r\n\r\nexport default function RoleForm({ id, disabled = false }) {\r\n  const history = useHistory();\r\n  const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddMutation();\r\n  const [update, { isSuccess: isUpdateSuccess, data: updateData, isError: isUpdateError, error: updateError }] = useUpdateMutation();\r\n  const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['Name', 'Description', 'Save', 'Cancel'] });\r\n  const { translations: rolesTranslations } = useTranslations({ group: translationsGroupNames.Roles, keys: ['Role'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n  const { data: permissionsList = [] } = useGetPermissionQuery({ order: [{ token: 'asc' }] });\r\n  const { data: { name, description, permissions } = {} } = useGetUserQuery(id);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      id: id,\r\n      name: name || '',\r\n      description: description || '',\r\n      permissions: (permissions || []).map((id) => `${id}`)\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      name: Yup.string().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Name))\r\n    }),\r\n    onSubmit: (values) => {\r\n      if (id) {\r\n        return update(values);\r\n      }\r\n      else {\r\n        return add(values);\r\n      }\r\n    }\r\n  });\r\n\r\n  const onCancelClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const getCheckProps = (permission, name) => {\r\n    return ({\r\n      ...formik.getFieldProps(name),\r\n      value: `${permission.id}`,\r\n      checked: formik.values.permissions.includes(`${permission.id}`)\r\n    })\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAddSuccess) {\r\n      toast.success(addData.message);\r\n      history.goBack();\r\n    }\r\n    else if (isUpdateSuccess) {\r\n      toast.success(updateData.message);\r\n      history.goBack();\r\n    }\r\n  }, [isAddSuccess, addData, isUpdateSuccess, updateData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddError) {\r\n      toast.error([].concat(...Object.values(addError.data)));\r\n      formik.setErrors(addError.data);\r\n    }\r\n    else if (isUpdateError) {\r\n      toast.error([].concat(...Object.values(updateError.data)));\r\n      formik.setErrors(updateError.data);\r\n    }\r\n  }, [isAddError, addError, isUpdateError, updateError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} className=\"pt-4\">\r\n      <Card>\r\n        <Card.Header>\r\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center\">\r\n            <div className=\"d-block mb-4 mb-md-0\">\r\n              <h4>{rolesTranslations.Role}</h4>\r\n            </div>\r\n            <div className=\"d-block mb-4 mb-md-0\">\r\n              <Button type=\"button\" variant=\"outline-primary\" onClick={onCancelClick}>\r\n                <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n              </Button>\r\n              <Button type=\"submit\" className=\"ms-2\" hidden={disabled}>\r\n                <TranslatableText group={translationsGroupNames.Generic} entry=\"Save\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText group={translationsGroupNames.Generic} entry=\"Name\" />\r\n                </Form.Label>\r\n                <Form.Control autoFocus type=\"name\" {...formik.getFieldProps('name')} isInvalid={!!formik.errors.name} disabled={disabled} />\r\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.name}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText group={translationsGroupNames.Generic} entry=\"Description\" />\r\n                </Form.Label>\r\n                <Form.Control type=\"text\"  {...formik.getFieldProps('description')} isInvalid={!!formik.errors.description} disabled={disabled} />\r\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.description}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>\r\n                <TranslatableText group={translationsGroupNames.Generic} entry=\"Permissions\" />\r\n              </Form.Label>\r\n              {permissionsList.map((permission) => (<PermissionCheck key={permission.id} type=\"checkbox\" permission={permission} {...getCheckProps(permission, 'permissions')} disabled={disabled} />))}\r\n            </Form.Group>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\Preloader.js",["865"],[],"\r\nimport React from 'react';\r\nimport { Image } from '@themesberg/react-bootstrap';\r\n\r\nimport ReactLogo from \"../assets/img/technologies/react-logo-transparent.svg\";\r\n\r\nexport default (props) => {\r\n\r\n  const { show } = props;\r\n\r\n  return (\r\n    <div className={`preloader bg-soft flex-column justify-content-center align-items-center ${show ? \"\" : \"show\"}`}>\r\n      <Image className=\"loader-element animate__animated animate__jackInTheBox\" src={ReactLogo} height={40} />\r\n    </div>\r\n  );\r\n};\r\n",[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\footer.jsx",["866","867","868"],[],"import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <p className=\"m-0\">\r\n      Copyright ©\r\n      <a href=\"\" target=\"_blank\" className=\"text-decoration-none ms-1\"></a>\r\n    </p>\r\n  );\r\n};\r\n","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\manager.jsx",["869","870"],[],"import React, { useCallback, useRef } from 'react';\r\nimport { Section, SectionBody, SectionFooter, SectionHeader, SectionTitle } from './section';\r\nimport TranslatableText from './translations/TranslatableText';\r\n\r\nimport { Pagination } from './pagination';\r\n\r\nexport default function Manager({  entry: Entrytitle, header: Header, filter: Filter, table: Table = () => <></>, source = { data: [], length: 0 }, onQueryChange = (query) => { } }) {\r\n  const query = useRef({ filter: {}, order: [], pagination: { index: 0, size: 10 } });\r\n\r\n  const filterChangeHandler = (filter) => {\r\n    query.current = { ...query.current, filter, pagination: { ...query.current.pagination, index: 0 } };\r\n    onQueryChange(query.current);\r\n  };\r\n  const tableQueryChangeHandler = ({ filter, order }) => {\r\n    query.current = { ...query.current, filter, order, pagination: { ...query.current.pagination, index: 0 } };\r\n    onQueryChange(query.current);\r\n  };\r\n  const paginationChangeHandler = useCallback((pagination) => {\r\n    query.current = { ...query.current, pagination };\r\n    onQueryChange(query.current);\r\n  }, []);\r\n\r\n  return (\r\n    <Section>\r\n    <SectionHeader className=\"d-flex align-items-center\">\r\n      <SectionTitle className=\"flex-fill\">\r\n        <TranslatableText entry={Entrytitle} />\r\n      </SectionTitle>\r\n      <div className=\"d-block\">\r\n          <Header />\r\n        </div>\r\n    </SectionHeader>\r\n    <SectionBody>\r\n      <Table  values={source.data} onQueryChange={tableQueryChangeHandler} />\r\n    </SectionBody>\r\n    <SectionFooter>\r\n      <Pagination index={query.current.pagination.index} length={source.length} onChange={paginationChangeHandler} />\r\n    </SectionFooter>\r\n  </Section>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\translationsGroupNames.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\otorgar-cupos-ctg.jsx",["871","872","873"],[],"import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { TranslatableText, useTranslations } from '../../components/translations';\r\nimport { useAddCtgMutation } from '../../redux/apis/cupos';\r\nimport { useGetQuery as useGetTerminalQuery } from '../../redux/apis/terminales';\r\nimport { translationsGroupNames } from '../../utils/translationsGroupNames';\r\n\r\nexport default ({ id }) => {\r\n  const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['FechaDesde', 'FechaHasta', 'Terminal'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat', 'FechaDesdeMayorFechaHasta'] });\r\n  const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddCtgMutation();\r\n  const { data: terminal = {} } = useGetTerminalQuery(id);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      terminal: { id: terminal.id },\r\n      fechaDesde: '',\r\n      fechaHasta: ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      terminal: Yup.object().shape({\r\n        id: Yup.number().integer().notOneOf([0], errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Terminal)).required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Terminal))\r\n      }),\r\n      fechaDesde: Yup.date().when('fechaHasta', (fechaHasta, schema) => {\r\n        if (fechaHasta) {\r\n          return schema.max(fechaHasta, errorsTranslations.FechaDesdeMayorFechaHasta).required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FechaDesde));\r\n        }\r\n        else {\r\n          return schema.required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FechaDesde));\r\n        }\r\n      }),\r\n      fechaHasta: Yup.date().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FechaHasta))\r\n    }),\r\n    onSubmit: ({ terminal, fechaDesde, fechaHasta }) => {\r\n      add({ terminalId: terminal.id, fechaDesde, fechaHasta });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isAddSuccess) {\r\n      toast.success(addData.message);\r\n      formik.resetForm();\r\n    }\r\n  }, [isAddSuccess, addData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddError) {\r\n      console.debug(addError);\r\n\r\n      formik.setErrors(addError.data);\r\n\r\n      const errors = [].concat(...Object.values(addError.data)).join('\\n');\r\n      toast.error(errors);\r\n    }\r\n  }, [isAddError, addError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>\r\n            <TranslatableText group={translationsGroupNames.Terminales} entry=\"OtorgarCuposDesdeCtg\" />\r\n          </h4>\r\n        </div>\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Button type=\"submit\">\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Ejecutar\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Generic} entry=\"Terminal\" />\r\n        </Form.Label>\r\n        <Form.Control plaintext readOnly defaultValue={terminal.nombre} />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Generic} entry=\"FechaDesde\" />\r\n        </Form.Label>\r\n        <Form.Control type=\"date\" {...formik.getFieldProps('fechaDesde')} isInvalid={!!formik.errors.fechaDesde} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.fechaDesde}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Generic} entry=\"FechaHasta\" />\r\n        </Form.Label>\r\n        <Form.Control type=\"date\" {...formik.getFieldProps('fechaHasta')} isInvalid={!!formik.errors.fechaHasta} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.fechaHasta}</Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\otorgar-cupos.jsx",["874","875","876"],[],"import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Select from '../patentes/select';\r\nimport { TranslatableText, useTranslations } from '../../components/translations';\r\nimport { useAddMutation } from '../../redux/apis/cupos';\r\nimport { useGetItemsQuery as useGetRepresentantesItemsQuery } from '../../redux/apis/representantes';\r\nimport { translationsGroupNames } from '../../utils/translationsGroupNames';\r\n\r\nexport default ({ id }) => {\r\n  const history = useHistory();\r\n  const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['FechaDesde', 'FechaHasta'] });\r\n  const { translations: representantesTranslations } = useTranslations({ group: translationsGroupNames.Representantes, keys: ['Representante', 'Patente'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat', 'FechaDesdeMayorFechaHasta'] });\r\n  const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddMutation();\r\n  const { data: representantes = [] } = useGetRepresentantesItemsQuery();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      representante: { id: 0 },\r\n      fechaDesde: '',\r\n      fechaHasta: '',\r\n      patente: { id: 0 }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      representante: Yup.object().shape({\r\n        id: Yup.number().integer().notOneOf([0], errorsTranslations.FieldRequired.replace('{0}', representantesTranslations.Representante)).required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Representante))\r\n      }),\r\n      fechaDesde: Yup.date().when('fechaHasta', (fechaHasta, schema) => {\r\n        if (fechaHasta) {\r\n          return schema.max(fechaHasta, errorsTranslations.FechaDesdeMayorFechaHasta).required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FechaDesde));\r\n        }\r\n        else {\r\n          return schema.required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FechaDesde));\r\n        }\r\n      }),\r\n      fechaHasta: Yup.date().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.FechaHasta)),\r\n      patente: Yup.object().shape({\r\n        id: Yup.number().integer().notOneOf([0], errorsTranslations.FieldRequired.replace('{0}', representantesTranslations.Patente)).required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.Patente))\r\n      })\r\n    }),\r\n    onSubmit: ({ representante, fechaDesde, fechaHasta, patente }) => {\r\n      add({ representanteId: representante.id, fechaDesde, fechaHasta, representantePatenteId: patente.id });\r\n    }\r\n  });\r\n\r\n  const onReturnClick = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAddSuccess) {\r\n      toast.success(addData.message);\r\n      formik.resetForm();\r\n      history.goBack();\r\n    }\r\n  }, [isAddSuccess, addData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddError) {\r\n      formik.setErrors(addError.data);\r\n\r\n      const errors = [].concat(...Object.values(addError.data)).join('\\n');\r\n      toast.error(errors);\r\n    }\r\n  }, [isAddError, addError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>\r\n            <TranslatableText group={translationsGroupNames.Terminales} entry=\"OtorgarCupo\" />\r\n          </h4>\r\n        </div>\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Button type=\"submit\">\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Otorgar\" />\r\n          </Button>\r\n          <Button onClick={onReturnClick}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"Representante\" />\r\n        </Form.Label>\r\n        <Form.Select {...formik.getFieldProps('representante.id')} isInvalid={!!formik.errors.representante?.id}>\r\n          <option value=\"0\"></option>\r\n          {representantes.map((representante) => (<option key={representante.id} value={`${representante.id}`}>{representante.description}</option>))}\r\n        </Form.Select>\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.representante?.id}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Generic} entry=\"FechaDesde\" />\r\n        </Form.Label>\r\n        <Form.Control type=\"date\" {...formik.getFieldProps('fechaDesde')} isInvalid={!!formik.errors.fechaDesde} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.fechaDesde}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Generic} entry=\"FechaHasta\" />\r\n        </Form.Label>\r\n        <Form.Control type=\"date\" {...formik.getFieldProps('fechaHasta')} isInvalid={!!formik.errors.fechaHasta} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.fechaHasta}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Representantes} entry=\"Patente\" />\r\n        </Form.Label>\r\n        <Select representante={formik.values.representante.id} {...formik.getFieldProps('patente.id')} isInvalid={!!formik.errors.patente?.id} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.patente?.id}</Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\saldo.jsx",["877","878"],[],"import React, { useEffect } from 'react';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\nimport { DateTime } from 'luxon';\r\nimport * as XLSX from 'xlsx/xlsx.mjs';\r\n\r\nimport { TranslatableText } from '../../components/translations';\r\nimport { useGetQuery, useLiquidarCuentaCorrienteMutation } from '../../redux/apis/terminales';\r\nimport { translationsGroupNames } from '../../utils/translationsGroupNames';\r\nimport PermissionChecker from '../../components/permissionChecker';\r\nimport { permissionsKeys } from '../../utils/permissionsKeys';\r\n\r\nexport default ({ id = 0 }) => {\r\n  const { data: terminal = {}, isError: isTerminalGetError, error: terminalGetError } = useGetQuery(id, { skip: !!!id });\r\n  const [liquidar, { isSuccess: isLiquidacionSuccess, data: liquidacionData, isError: isLiquidacionError, error: liquidacionError }] = useLiquidarCuentaCorrienteMutation();\r\n  const permiteDescargarReporte = PermissionChecker(permissionsKeys.TERMINAL_LIQUIDACION_DESCARGAR);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    liquidar(terminal.saldoCtaCte);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isTerminalGetError) {\r\n      const errors = Object.values(terminalGetError.data);\r\n      toast.error(errors);\r\n    }\r\n  }, [isTerminalGetError, terminalGetError]);\r\n\r\n  useEffect(() => {\r\n    if (isLiquidacionSuccess) {\r\n      toast.success(liquidacionData.message);\r\n\r\n      if (permiteDescargarReporte) {\r\n        const date = DateTime.now().toFormat('yyyyLLddHHmmss');\r\n        const header = ['Número de ticket liquidado', 'Representante', 'Patente', 'Importe cobrado'];\r\n        const data = liquidacionData.cupos.map((cupo) => [\r\n          cupo.terminalTalonarioTicket.numero,\r\n          `${cupo.representante.firstName} ${cupo.representante.lastName}`,\r\n          cupo.representantePatente.patente,\r\n          0\r\n        ]);\r\n        const workbook = XLSX.utils.book_new();\r\n        const sheet = XLSX.utils.aoa_to_sheet([header, ...data, ['Total', '', '', { t: 'n', v: 3, f: `SUM(D2:D${data.length + 1})` }]]);\r\n        XLSX.utils.book_append_sheet(workbook, sheet, 'liquidacion');\r\n        XLSX.writeFile(workbook, `${terminal.nombre}Liquidacion${date}.xlsx`);\r\n      }\r\n    }\r\n  }, [isLiquidacionSuccess, liquidacionData]);\r\n\r\n  useEffect(() => {\r\n    if (isLiquidacionError) {\r\n      const errors = [].concat(...Object.values(liquidacionError.data)).join('\\n');\r\n      toast.error(errors);\r\n    }\r\n  }, [isLiquidacionError, liquidacionError]);\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>\r\n            <TranslatableText group={translationsGroupNames.Terminales} entry=\"LiquidarSaldoCuentaCorriente\" />\r\n          </h4>\r\n        </div>\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Button type=\"submit\">\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Liquidar\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <h6 className=\"card-subtitle mb-2 text-muted\">\r\n        <TranslatableText group={translationsGroupNames.Terminales} entry=\"SaldoDisponibleCuentaCorriente\" />\r\n      </h6>\r\n      <div className=\"d-flex\">\r\n        <h3>${terminal.saldoCtaCte || 0}</h3>\r\n      </div>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\talonarios.jsx",["879","880","881"],[],"import React, { useEffect } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { TranslatableText, useTranslations } from '../../components/translations';\r\nimport { useAddMutation } from '../../redux/apis/talonarios';\r\nimport { translationsGroupNames } from '../../utils/translationsGroupNames';\r\n\r\nexport default ({ id }) => {\r\n  const history = useHistory();\r\n  const { translations: genericTranslations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['NumberFrom', 'NumberTo'] });\r\n  const { translations: errorsTranslations } = useTranslations({ group: translationsGroupNames.Errors, keys: ['FieldRequired', 'InvalidFormat'] });\r\n  const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddMutation();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      numeroDesde: '',\r\n      numeroHasta: ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      numeroDesde: Yup.number().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.NumberFrom)),\r\n      numeroHasta: Yup.number().required(errorsTranslations.FieldRequired.replace('{0}', genericTranslations.NumberTo))\r\n    }),\r\n    onSubmit: ({ numeroDesde, numeroHasta }) => {\r\n      add({ numeroDesde, numeroHasta });\r\n    }\r\n  });\r\n\r\n  const onReturnClick = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAddSuccess) {\r\n      toast.success(addData.message);\r\n      formik.resetForm();\r\n      history.goBack();\r\n    }\r\n  }, [isAddSuccess, addData]);\r\n\r\n  useEffect(() => {\r\n    if (isAddError) {\r\n      formik.setErrors(addError.data);\r\n\r\n      const errors = [].concat(...Object.values(addError.data)).join('\\n');\r\n      toast.error(errors);\r\n    }\r\n  }, [isAddError, addError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4\">\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <h4>\r\n            <TranslatableText group={translationsGroupNames.Terminales} entry=\"GenerarTalonariosTickets\" />\r\n          </h4>\r\n        </div>\r\n        <div className=\"d-block mb-4 mb-md-0\">\r\n          <Button type=\"submit\">\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Generar\" />\r\n          </Button>\r\n          <Button onClick={onReturnClick}>\r\n            <TranslatableText group={translationsGroupNames.Generic} entry=\"Cancel\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Generic} entry=\"NumeroDesde\" />\r\n        </Form.Label>\r\n        <Form.Control type=\"number\" {...formik.getFieldProps('numeroDesde')} isInvalid={!!formik.errors.numeroDesde} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.numeroDesde}</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>\r\n          <TranslatableText group={translationsGroupNames.Generic} entry=\"NumeroHasta\" />\r\n        </Form.Label>\r\n        <Form.Control type=\"number\" {...formik.getFieldProps('numeroHasta')} isInvalid={!!formik.errors.numeroHasta} />\r\n        <Form.Control.Feedback type=\"invalid\">{formik.errors.numeroHasta}</Form.Control.Feedback>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\hoc\\manager.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\translations\\index.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\index.jsx",["882","883"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\navbar\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\utils\\userTypes.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\table.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\select.jsx",["884"],[],"import React from 'react';\r\nimport { Form } from '@themesberg/react-bootstrap';\r\n\r\nimport { useGetItemsQuery } from '../../redux/apis/representante-patentes';\r\n\r\nexport default ({ representante, ...props }) => {\r\n  const { data: patentes = [] } = useGetItemsQuery({ filter: { representanteId: representante } }, { skip: !!!representante });\r\n\r\n  return (\r\n    <Form.Select {...props}>\r\n      <option value=\"0\"></option>\r\n      {patentes.map((patente) => (<option key={patente.id} value={`${patente.id}`}>{patente.description}</option>))}\r\n    </Form.Select>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\table.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\form\\permission-check.jsx",["885"],[],"import React from 'react';\r\nimport { Form } from '@themesberg/react-bootstrap';\r\n\r\nexport default function PermissionCheck({ permission, ...props }) {\r\n  const [application, area, page, displayName] = permission.description.split(' - ');\r\n\r\n  return (\r\n    <Form.Check>\r\n      <Form.Check.Input {...props} />\r\n      <Form.Check.Label className=\"ms-2\">\r\n        <strong>{area}</strong>: <small>{`${page} - ${displayName}`}</small>\r\n      </Form.Check.Label>\r\n    </Form.Check>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\translations\\TranslatableText.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\translations\\useTranslations.js",["886"],[],"import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useGetTranslationValuesQuery } from '../../redux/apis/translations';\r\nimport { add } from '../../redux/slices/missing-translations';\r\n\r\nexport default function useTranslations({ group, keys = [], fill = true }) {\r\n  const query = useGetTranslationValuesQuery(group);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (query.isSuccess) {\r\n      const missings = {\r\n        group,\r\n        keys: keys.filter((key) => !query.data?.some((translation) => translation.key === key))\r\n      };\r\n      dispatch(add(missings));\r\n    }\r\n  }, [query.isSuccess]);\r\n\r\n  return {\r\n    translations: {\r\n      ...((fill) ? keys.reduce((translations, key) => ({ ...translations, [key]: `${group}.${key}` }), {}) : {}),\r\n      ...query.data?.reduce((translations, translation) => ({ ...translations, [translation.key]: translation.value }), {})\r\n    },\r\n    ...query\r\n  };\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\header.jsx",["887"],[],"import React from 'react';\r\n\r\nimport UserAvatar from '../user-avatar';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <UserAvatar />\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\brand.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar-item.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\navbar\\user-menu.jsx",["888"],[],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { TranslatableText } from '../translations';\r\n\r\nimport { useLogoutMutation } from '../../redux/apis/auth';\r\nimport { useGetHeaderQuery } from '../../redux/apis/users';\r\n\r\nimport UserMenuToggle from './user-menu-toogle';\r\n\r\nexport default function UserMenu() {\r\n  const { refetch } = useGetHeaderQuery();\r\n  const [logout] = useLogoutMutation();\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      refetch();\r\n    }\r\n  }, [token]);\r\n\r\n  const clickHandler = () => {\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <Dropdown align=\"end\">\r\n      <Dropdown.Toggle as={UserMenuToggle} />\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item onClick={clickHandler}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"text-danger me-2\" />\r\n          <TranslatableText  entry=\"Cerrar Sesion\"></TranslatableText>\r\n        </Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\collapsable-sidebar-item.jsx",["889"],[],"import React, { Children, cloneElement, isValidElement, useContext } from 'react';\r\nimport { Accordion, AccordionContext, Nav, useAccordionButton } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro';\r\n\r\nimport SidebarItem from \"./sidebar-item\";\r\n\r\nimport './sidebar-item.scss';\r\n\r\nconst NavLinkToogle = ({ eventKey, icon, title }) => {\r\n  const { activeEventKey } = useContext(AccordionContext);\r\n  const isCurrentEventKey = activeEventKey === eventKey;\r\n\r\n  const clickHandler = useAccordionButton(eventKey);\r\n\r\n  return (\r\n    <Nav.Link onClick={clickHandler} className=\"sidebar-item d-flex\">\r\n      <span>\r\n        <FontAwesomeIcon icon={icon} />\r\n      </span>\r\n      <span className=\"flex-fill text-start ms-2\">\r\n        {title}\r\n      </span>\r\n      <span>\r\n        <FontAwesomeIcon icon={isCurrentEventKey ? solid('angle-down') : solid('angle-right')} />\r\n      </span>\r\n    </Nav.Link>\r\n  );\r\n};\r\n\r\nconst isValidChild = (child) => {\r\n  if (!isValidElement(child)) {\r\n    return false;\r\n  } else if (child.type === SidebarItem) {\r\n    return true;\r\n  } else if (child.type === CollapsableSidebarItem) {\r\n    return Children.toArray(child.props.children).some((child) => isValidChild(child));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isEmpty = (children) => {\r\n  return !Children.toArray(children).some((child) => isValidChild(child))\r\n};\r\n\r\nexport default function CollapsableSidebarItem({ children, defaultActiveKey, icon, title, onClick }) {\r\n  if (isEmpty(children)) {\r\n    return (<></>);\r\n  }\r\n  else {\r\n    return (\r\n      <Accordion>\r\n        <Nav fill variant=\"pills\" defaultActiveKey={defaultActiveKey}>\r\n          <Nav.Item className=\"m-0\" >\r\n            <NavLinkToogle eventKey={title} icon={icon} title={title} />\r\n          </Nav.Item>\r\n          <Accordion.Collapse eventKey={title} className=\"ps-4 w-100\">\r\n            <>\r\n              {Children.map(children, (child) => {\r\n                if (isValidElement(child)) {\r\n                  if (child.type === CollapsableSidebarItem) {\r\n                    return isValidElement(child) && cloneElement(child, { defaultActiveKey, onClick: onClick })\r\n                  }\r\n                  else {\r\n                    return isValidElement(child) && cloneElement(child, { onClick: onClick })\r\n                  }\r\n                }\r\n              })}\r\n            </>\r\n          </Accordion.Collapse>\r\n        </Nav>\r\n      </Accordion>\r\n    );\r\n  }\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar.jsx",["890"],[],"import React, { Children, cloneElement, isValidElement } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nimport CollapsableSidebarItem from './collapsable-sidebar-item';\r\n\r\nexport default function Sidebar({ children }) {\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <Nav variant=\"pills\" defaultActiveKey={pathname} className=\"h-100 d-flex flex-column\">\r\n      {Children.map(children, (child) => {\r\n        if (isValidElement(child)) {\r\n          if (child.type === CollapsableSidebarItem) {\r\n            return cloneElement(child, { defaultActiveKey: pathname });\r\n          }\r\n          else {\r\n            return cloneElement(child);\r\n          }\r\n        }\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar-divider.jsx",["891"],[],"import React from 'react';\r\n\r\nexport default function SidebarDivider() {\r\n  return (\r\n    <hr />\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\pagination\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\row.jsx",["892","893","894"],[],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { faEdit, faEye, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport IconButton from '../../../components/icon-button';\r\nimport { Cell, Row as TecsoRow } from '../../../components/table';\r\nimport { useTranslations } from '../../../components/translations';\r\nimport { Routes } from '../../../routes';\r\nimport { permissionsKeys } from '../../../utils/permissionsKeys';\r\nimport PermissionChecker from '../../../components/permissionChecker';\r\nimport { translationsGroupNames } from '../../../utils/translationsGroupNames';\r\n\r\nexport default function Row({ value, index, values }) {\r\n  const { translations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['Delete', 'Yes', 'No'] });\r\n\r\n    return (\r\n        <TecsoRow>\r\n            <Cell>{value.numeroDesde}</Cell>\r\n            <Cell>{value.numeroHasta}</Cell>\r\n            <Cell>{value.ultimoNumero}</Cell>\r\n            <Cell>{(value.completo) ? translations.Yes : translations.No}</Cell>\r\n            <Cell>\r\n            {PermissionChecker(permissionsKeys.TERMINALES_TALONARIO_VIEW) && <IconButton title={translations.View} icon={faEye} href={Routes.Terminales.Talonarios.View.path.replace(':id', value.id)} className=\"mx-1\" />}\r\n             <IconButton title={translations.View} icon={faEye} href={Routes.Terminales.Talonarios.View.path.replace(':id', value.id)} className=\"mx-1\" />\r\n            </Cell>\r\n        </TecsoRow>\r\n    );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaCupos\\row.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\users\\table\\row.jsx",["895","896","897"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\terminales\\grillaTalonarios\\tabletickets\\table\\row.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\permissionChecker\\index.js",["898"],[],"import { useSelector } from 'react-redux';\r\n\r\nfunction PermissionChecker (permissionKey) {\r\n  \r\n  if (permissionKey === undefined)\r\n      return false;\r\n      \r\n  return JSON.parse(localStorage.usuario).roles.some(x=> x=== permissionKey);\r\n\r\n};\r\n\r\nexport default PermissionChecker;","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\patentes\\table\\row.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\sistema\\terminal\\table\\row.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\roles\\table\\row.jsx",["899","900"],[],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { faEdit, faEye, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport IconButton from '../../../components/icon-button';\r\nimport { Cell, Row as TecsoRow } from '../../../components/table';\r\nimport { TranslatableText, useTranslations } from '../../../components/translations';\r\nimport { Routes } from '../../../routes';\r\nimport { permissionsKeys } from '../../../utils/permissionsKeys';\r\nimport PermissionChecker from '../../../components/permissionChecker';\r\nimport { translationsGroupNames } from '../../../utils/translationsGroupNames';\r\n\r\nexport default function Row({ value, index, values }) {\r\n  const { translations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['Edit', 'Delete', 'View'] });\r\n  \r\n  return (\r\n    <TecsoRow>\r\n      <Cell>{value.name}</Cell>\r\n      <Cell>{value.description}</Cell>\r\n      <Cell>{value.userRoles?.length}</Cell>\r\n      <Cell>\r\n        {(PermissionChecker(permissionsKeys.ROLE_VIEW)) && <IconButton title={translations.View} icon={faEye} href={Routes.Roles.View.path.replace(':id', value.id)} className=\"mx-1\" />}\r\n        {(PermissionChecker(permissionsKeys.ROLE_UPDATE) && !value.isSystem) && <IconButton title={translations.Edit} icon={faEdit} href={Routes.Roles.Update.path.replace(':id', value.id)} className=\"mx-1\" />}\r\n        {(PermissionChecker(permissionsKeys.ROLE_DELETE) && !value.isSystem) && <IconButton title={translations.Delete} icon={faTrash} href={Routes.Roles.Delete.path.replace(':id', value.id)} className=\"mx-1\" />}\r\n      </Cell>\r\n    </TecsoRow>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\pagination\\page-size.jsx",["901"],[],"import React from \"react\";\r\n\r\nexport default ({ children }) => {\r\n  return (<option value={children}>{children}</option>);\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\pagination\\pagination.jsx",["902"],[],"import React, { Children, useEffect, useRef, useState } from \"react\";\r\nimport { Col, Form, Pagination, Row } from \"@themesberg/react-bootstrap\";\r\nimport PageSize from \"./page-size\";\r\n\r\nconst MAX_DISPLAYED_PAGES = 10;\r\n\r\nexport default ({ children, index = 0, length, onChange, className }) => {\r\n  const currentPageInitialized = useRef(false);\r\n  const [currentPage, setCurrentPage] = useState({ index: index, size: 10, displacement: 0 });\r\n  const [pages, setPages] = useState({ from: 0, to: 0, length: 0 });\r\n  const [values, setValues] = useState({ from: 0, to: 0 });\r\n\r\n  const firstPageClickHandler = () => {\r\n    setCurrentPage((previous) => ({ ...previous, index: 0, displacement: -previous.index }));\r\n  };\r\n  const previousPageClickHandler = () => {\r\n    if (currentPage.index > 0) {\r\n      setCurrentPage((previous) => ({ ...previous, index: previous.index - 1, displacement: -1 }));\r\n    }\r\n  };\r\n  const pageClickHandler = (index) => {\r\n    setCurrentPage((previous) => ({ ...previous, index: index }));\r\n  };\r\n  const nextPageClickHandler = () => {\r\n    if (currentPage.index < pages.length - 1) {\r\n      setCurrentPage((previous) => ({ ...previous, index: previous.index + 1, displacement: 1 }));\r\n    }\r\n  };\r\n  const lastPageClickHandler = () => {\r\n    setCurrentPage((previous) => ({ ...previous, index: pages.length - 1, displacement: pages.length - previous.index - 1 }));\r\n  };\r\n  const pageSizeChangeHandler = (event) => {\r\n    const size = Number.parseInt(event.target.value);\r\n    setCurrentPage((previous) => ({ ...previous, index: 0, size, displacement: 0 }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentPage((previous) => ({ ...previous, index: index }));\r\n  }, [index]);\r\n\r\n  useEffect(() => {\r\n    setPages((previous) => ({ ...previous, length: Math.ceil(length / currentPage.size) || 1 }));\r\n  }, [length, currentPage.size]);\r\n\r\n  useEffect(() => {\r\n    setPages((previous) => {\r\n      if (currentPage.index < previous.from || currentPage.index > previous.to) {\r\n        if (currentPage.displacement < 0) {\r\n          const from = currentPage.index;\r\n          const to = from + MAX_DISPLAYED_PAGES - 1;\r\n\r\n          return { ...previous, from, to };\r\n        }\r\n        else {\r\n          const from = Math.max(currentPage.index - MAX_DISPLAYED_PAGES + 1, 0);\r\n          const to = from + MAX_DISPLAYED_PAGES - 1;\r\n\r\n          return { ...previous, from, to };\r\n        }\r\n      }\r\n\r\n      return { ...previous };\r\n    });\r\n  }, [length, currentPage.index, currentPage.displacement]);\r\n\r\n  useEffect(() => {\r\n    const from = currentPage.index * currentPage.size;\r\n    const to = Math.min(from + currentPage.size, length);\r\n\r\n    setValues((previous) => ({ ...previous, from: from + 1, to }));\r\n  }, [length, currentPage.index, currentPage.size]);\r\n\r\n  useEffect(() => {\r\n    if (currentPageInitialized.current) {\r\n      onChange({ index: currentPage.index, size: currentPage.size });\r\n    }\r\n    else {\r\n      currentPageInitialized.current = true;\r\n    }\r\n  }, [onChange, currentPage.index, currentPage.size]);\r\n\r\n  return (\r\n    <Row xs=\"auto\" className={className}>\r\n      <Col>\r\n        <Pagination>\r\n          <Pagination.First onClick={firstPageClickHandler} />\r\n          <Pagination.Prev onClick={previousPageClickHandler} />\r\n          {[...Array(Math.min(pages.length, MAX_DISPLAYED_PAGES)).keys()].map(index => index + pages.from).map(index => <Pagination.Item key={index} active={index === currentPage.index} onClick={() => pageClickHandler(index)}>{index + 1}</Pagination.Item>)}\r\n          <Pagination.Next onClick={nextPageClickHandler} />\r\n          <Pagination.Last onClick={lastPageClickHandler} />\r\n        </Pagination>\r\n      </Col>\r\n      <Col xs=\"auto\">\r\n        <Form.Select onChange={pageSizeChangeHandler}>\r\n          {Children.count(children) ? children : [10, 50, 100].map((size, index) => <PageSize key={index}>{size}</PageSize>)}\r\n        </Form.Select>\r\n      </Col>\r\n      <Col>\r\n        <Form.Control plaintext readOnly value={`${values.from}-${values.to} of ${length}`} ></Form.Control>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\icon-button.jsx",["903"],[],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default ({ title, icon, href, ...props }) => {\r\n  return (\r\n    <OverlayTrigger placement=\"left-start\" overlay={<Tooltip>{title}</Tooltip>}>\r\n      <Link to={href} {...props}>\r\n        <FontAwesomeIcon icon={icon} />\r\n      </Link>\r\n    </OverlayTrigger>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\table.jsx",["904","905"],[],"import React, { Children, cloneElement, isValidElement, useEffect, useRef, useState } from \"react\";\r\nimport { Table as BootstrapTable } from \"@themesberg/react-bootstrap\";\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Table({ children, values = [], row: Row = () => <></>, onQueryChange = (query) => { } }) {\r\n  const history = useHistory();\r\n  const initialized = useRef(false);\r\n  const filtro = useRef(JSON.parse(localStorage.getItem(history.location.key))? JSON.parse(localStorage.getItem(history.location.key)).filter : {});\r\n  const orden = useRef(JSON.parse(localStorage.getItem(history.location.key))? JSON.parse(localStorage.getItem(history.location.key)).order: []);\r\n  const query = useRef({ filter: filtro.current, order: orden.current });\r\n\r\n  const filterChangeHandler = (filter) => {\r\n    query.current = { ...query.current, filter };\r\n    localStorage.setItem(history.location.key, JSON.stringify(query.current))\r\n    onQueryChange(query.current);\r\n  };\r\n  const orderChangeHandler = (order) => {\r\n    query.current = { ...query.current, order };\r\n    localStorage.setItem(history.location.key, JSON.stringify(query.current))\r\n    onQueryChange(query.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!initialized.current) {\r\n      initialized.current = true;\r\n\r\n      const initialization = Children.toArray(children).reduce((initialization, child) => {\r\n        const filter = child.props.filter || {};\r\n        const order = child.props.order || [];\r\n\r\n        return {\r\n          ...initialization,\r\n          filter: { ...initialization.filter, ...filter },\r\n          order: [...initialization.order, ...order]\r\n        };\r\n      }, { filter: {}, order: [] });\r\n\r\n      query.current = { ...query.current, filter: {...query.current.filter, ...initialization.filter}, order: [...query.current.order, ...initialization.order] };\r\n      onQueryChange(query.current);\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <BootstrapTable borderless>\r\n      <thead className=\"bg-light\">\r\n        <tr>\r\n          {Children.map(children, (child) => isValidElement(child) && cloneElement(child, { ...child.props, filter: query.current.filter, onFilterChange: filterChangeHandler, order: query.current.order, onOrderChange: orderChangeHandler }))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {values.map((value, index, values) => <Row key={index} value={value} index={index} values={values} />)}\r\n      </tbody>\r\n    </BootstrapTable>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\row.jsx",["906"],[],"import React from \"react\";\r\n\r\nexport default ({ children, ...props }) => {\r\n  return (\r\n    <tr {...props}>{children}</tr>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\cell.jsx",["907"],[],"import React from \"react\";\r\n\r\nexport default ({ children, ...props }) => {\r\n  return (\r\n    <td {...props}>{children}</td>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\option-menu.jsx",["908"],[],"import React, { Children, cloneElement, isValidElement, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDoubleDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Button, Overlay, Popover } from \"@themesberg/react-bootstrap\";\r\n\r\nexport default ({ children, className, filter = {}, onFilterChange = (filter) => { }, order = [], onOrderChange = (order) => { } }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [target, setTarget] = useState(null);\r\n  const ref = useRef(null);\r\n\r\n  const handleToggleClick = (event) => {\r\n    setShow(!show);\r\n    setTarget(event.target);\r\n  };\r\n  const handleHide = () => {\r\n    setShow(false);\r\n  };\r\n  const handleFilterChange = (filter) => {\r\n    setShow(false);\r\n    onFilterChange(filter);\r\n  };\r\n  const handleOrderChange = (order) => {\r\n    setShow(false);\r\n    onOrderChange(order);\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={className}>\r\n      <Button variant=\"link\" className=\"p-0\" onClick={handleToggleClick}>\r\n        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n      </Button>\r\n      <Overlay show={show} target={target} placement=\"bottom\" container={ref} rootClose={true} onHide={handleHide}>\r\n        <Popover id=\"popover-basic\">\r\n          <Popover.Content>\r\n            {Children.map(children, (child, index) => {\r\n              if (isValidElement(child)) {\r\n                if (index > 0) {\r\n                  return (\r\n                    <>\r\n                      <hr />\r\n                      {cloneElement(child, { filter, onFilterChange: handleFilterChange, order, onOrderChange: handleOrderChange })}\r\n                    </>\r\n                  );\r\n                }\r\n                else {\r\n                  return cloneElement(child, { filter, onFilterChange: handleFilterChange, order, onOrderChange: handleOrderChange });\r\n                }\r\n              }\r\n            })}\r\n          </Popover.Content>\r\n        </Popover>\r\n      </Overlay>\r\n    </div >\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\select-filter\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\text-filter\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\sort\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\select-filter\\select-filter-description.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\select-filter\\select-filter-form.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\text-filter\\text-filter-description.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\text-filter\\text-filter-form.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\sort\\sort-description.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\table\\header\\sort\\sort-form.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\header.jsx",["909"],[],"import React, {useState, useEffect} from 'react';\r\nimport { Button, Form } from '@themesberg/react-bootstrap';\r\nimport { TranslatableText } from '../../../components/translations';\r\nimport { permissionsKeys } from '../../../utils/permissionsKeys';\r\nimport PermissionChecker from '../../../components/permissionChecker';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useEmpleadosRepresentantesQuery as useGetRepresentantesItemsQuery} from '../../../redux/apis/users';\r\nimport {useAddMutation} from '../../../redux/apis/empleadoscategorias'\r\nimport { useFormik } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\n\r\nexport default function Header() { \r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n    const { data: representantes = [] } = useGetRepresentantesItemsQuery();\r\n    const [add, { isSuccess: isAddSuccess, data: addData, isError: isAddError, error: addError }] = useAddMutation();\r\n  \r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      representante: {id :0 },\r\n\r\n    }});\r\n\r\n    const onSaveHandler = () => {\r\n        \r\n        if(history.location.pathname.includes('create')){\r\n            formik.setFieldValue('representante', 0)\r\n            toast.error(\"Debe crear la categoría y luago agregar los probadores\");\r\n            setShow(false);\r\n        }\r\n        else{\r\n            var regex = /(\\d+)/g; \r\n        add({EmpleadoId: formik.values.representante.id, CategoriaId: history.location.pathname.match(regex)[0]} );\r\n        }\r\n      };\r\n\r\n\r\n      useEffect(() => {\r\n        if (isAddSuccess) {\r\n            formik.setFieldValue('representante', 0)\r\n          toast.success(\"Aprobador se registro con exito\");\r\n          setShow(false);\r\n        }        \r\n      }, [isAddSuccess, addData]);\r\n    \r\n      useEffect(() => {\r\n        if (isAddError) {\r\n          toast.error([].concat(...Object.values(JSON.parse(addError.data).Messages)));\r\n        }\r\n      }, [isAddError, addError]);\r\n\r\n  return (\r\n      <>\r\n    <Button hidden={!PermissionChecker(permissionsKeys.CATEGORIA_ADD)} type=\"button\" onClick={handleShow}>\r\n    <TranslatableText  entry={'Agregar'} />\r\n  </Button>\r\n  <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Aprobadores</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form.Select {...formik.getFieldProps('representante.id')} isInvalid={!!formik.errors.representante?.id}>\r\n                <option value=\"0\">Seleccione un empleado</option>\r\n                {representantes?.DataObject?.map((representante) => (<option key={representante.Id} value={`${representante.Id}`}>{representante.Descripcion}</option>))}\r\n        </Form.Select>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-primary\" onClick={handleClose}>\r\n          <TranslatableText  entry=\"Cancelar\" />\r\n          </Button>\r\n          <Button type=\"button\" className=\"ms-2\" onClick={onSaveHandler}>\r\n            <TranslatableText  entry=\"Guardar\" />\r\n          </Button>\r\n            \r\n        </Modal.Footer>\r\n      </Modal>\r\n  </>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\body.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\user-avatar\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\footer.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\section.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\subtitle.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\section\\title.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\navbar\\user-menu-toogle.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\empleadoscategorias.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\categorias.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\form.jsx",["910","911","912","913","914","915","916","917","918","919","920","921","922","923"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\index.jsx",["924","925","926"],[],"import React, { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport toast from 'react-hot-toast';\r\nimport { Button, Modal } from '@themesberg/react-bootstrap';\r\n\r\nimport Manager from '../../components/manager';\r\nimport { TranslatableText } from '../../components/translations';\r\nimport { api as categorias, useDeleteMutation, useGetQuery as useGetUserQuery } from '../../redux/apis/categorias';\r\nimport withRedux from '../../redux/hoc/manager';\r\n\r\nimport Table from './table';\r\nimport Header from './header';\r\nimport { useState } from 'react';\r\n\r\nconst Categorias = ({ source, onQueryChange }) => {\r\n  const { Id } = useParams();\r\n  const history = useHistory();\r\n  const { data: { EstadoId } = {} } = useGetUserQuery(Id, { skip: !!!Id });\r\n  const [remove, { isSuccess: isDeleteSuccess, data: deleteData, isError: isDeleteError, error: deleteError }] = useDeleteMutation();\r\n  const [isactivo, setIsActivo] = useState(true);\r\n\r\n  const onSaveHandler = () => {\r\n    remove(Id);\r\n  };\r\n  const onCancelHandler = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isDeleteSuccess) {\r\n      if(EstadoId == 1)\r\n      {\r\n      toast.success(\"Se elimino categoría con exito\");\r\n      }\r\n      else{\r\n        toast.success(\"Se activo categoría con exito\");\r\n      }\r\n      history.goBack();\r\n    }\r\n    else if (isDeleteError) {\r\n      const errors = [].concat(...Object.values(deleteError.data));\r\n      toast.error(errors);\r\n      history.goBack();\r\n    }\r\n  }, [isDeleteSuccess, deleteData, isDeleteError, deleteError]);\r\n\r\n  useEffect(() => {\r\n    if(EstadoId == 1){\r\n      setIsActivo(false)\r\n    }\r\n  }, [EstadoId]);\r\n\r\n  return (\r\n    <>\r\n      <Manager header={Header} entry={'Categorias'} table={Table} source={source} onQueryChange={onQueryChange} />\r\n      <Modal show={!!Id} onHide={onCancelHandler} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n           {(!isactivo) && <TranslatableText entry=\"Eliminar\" />}\r\n\r\n           {(isactivo) && <TranslatableText entry=\"Activar\" />}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        {(!isactivo) && <TranslatableText  entry=\"Confirmar Eliminacion\" />}\r\n        {(isactivo) && <TranslatableText  entry=\"Confirmar Activación\" />}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button type=\"button\" variant=\"outline-primary\" onClick={onCancelHandler}>\r\n            <TranslatableText  entry=\"Cancelar\" />\r\n          </Button>\r\n          <Button type=\"button\" className=\"ms-2\" onClick={onSaveHandler}>\r\n          {(!isactivo) && <TranslatableText  entry=\"Eliminar\" />}          \r\n          {(isactivo) && <TranslatableText  entry=\"Activar\" />}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRedux(categorias)(Categorias);","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\components\\sidebar\\sidebar-space.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\index.jsx",["927","928"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\table\\row.jsx",["929","930","931","932","933","934","935"],[],"import React from 'react';\r\nimport { Badge } from 'react-bootstrap';\r\nimport { faCheck, faEdit,  faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport IconButton from '../../../components/icon-button';\r\nimport { Cell, Row as TecsoRow } from '../../../components/table';\r\nimport { TranslatableText } from '../../../components/translations';\r\nimport { Routes } from '../../../routes';\r\nimport { permissionsKeys } from '../../../utils/permissionsKeys';\r\nimport PermissionChecker from '../../../components/permissionChecker';\r\n\r\nexport default function Row({ value, index, values }) {\r\n\r\n  return (\r\n    <TecsoRow>      \r\n      <Cell>{value.Nombre}</Cell>\r\n      <Cell >{value.Descripcion}</Cell>\r\n      <Cell>{value.CantidadVotos}</Cell>\r\n      {value.IncluyeNovedades && <Cell><TranslatableText  entry=\"Si\" /></Cell>}\r\n      {!value.IncluyeNovedades && <Cell><TranslatableText  entry=\"No\" /></Cell>}\r\n      {value.RequiereAprobacion && <Cell><TranslatableText  entry=\"Si\" /></Cell>}\r\n      {!value.RequiereAprobacion && <Cell><TranslatableText  entry=\"No\" /></Cell>}\r\n      {value.EstadoId == 1 && <Cell><Badge bg=\"secondary\"><TranslatableText  entry=\"Activa\" /></Badge></Cell>}\r\n      {value.EstadoId == 2 && <Cell><Badge bg=\"primary-active\"><TranslatableText  entry=\"Inactiva\" /></Badge></Cell>}\r\n      <Cell>        \r\n        {PermissionChecker(permissionsKeys.CATEGORIA_UPDATE) && !(value.Usuario == 'admin@admin.com') && <IconButton title='Editar' icon={faEdit} href={Routes.Categorias.Update.path.replace(':Id', value.Id)} className=\"mx-1\" />}\r\n        {PermissionChecker(permissionsKeys.CATEGORIA_DELETE) && !(value.Usuario == 'admin@admin.com') && value.EstadoId == 1 && <IconButton title='Eliminar' icon={faTrash} href={Routes.Categorias.Delete.path.replace(':Id', value.Id)} className=\"mx-1\" />}\r\n        {PermissionChecker(permissionsKeys.CATEGORIA_DELETE) && !(value.Usuario == 'admin@admin.com') && value.EstadoId == 2 && <IconButton title='Activar' icon={faCheck}  href={Routes.Categorias.Delete.path.replace(':Id', value.Id)} className=\"mx-1\" />}\r\n      </Cell>\r\n    </TecsoRow>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\categorias\\empleadocategoria\\table\\row.jsx",["936"],[],"import React from 'react';\r\nimport { Cell, Row as TecsoRow } from '../../../../components/table';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport IconButton from '../../../../components/icon-button';\r\nimport { Routes } from '../../../../routes';\r\nimport { permissionsKeys } from '../../../../utils/permissionsKeys';\r\nimport PermissionChecker from '../../../../components/permissionChecker';\r\n\r\nexport default function Row({ value, index, values }) {\r\n\r\n  return (\r\n    <TecsoRow>\r\n      <Cell>{value.Empleado.Nombre}</Cell>\r\n      <Cell>{value.Empleado.Apellido}</Cell>\r\n      <Cell>             \r\n        {PermissionChecker(permissionsKeys.CATEGORIA_DELETE) && !(value.Usuario == 'admin@admin.com') && !value.Eliminado && <IconButton title='Eliminar' icon={faTrash}  href={Routes.EmpleadosCategoriasAprobador.Delete.path.replace(':Id', value.Id)} className=\"mx-1\" />}\r\n      </Cell>\r\n    </TecsoRow>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\form.jsx",["937"],[],"import React, { useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Button, Col, Form, Row } from '@themesberg/react-bootstrap';\r\nimport toast from 'react-hot-toast';\r\n\r\nimport { TranslatableText } from '../../components/translations';\r\nimport {  useGetQuery as useGetUserQuery, useUpdateMutation } from '../../redux/apis/parametros';\r\nimport { Section, SectionBody, SectionHeader, SectionTitle } from '../../components/section';\r\n\r\nexport default function UserForm({ Id, disabled = false }) {\r\n  const history = useHistory();\r\n  const [update, { isSuccess: isUpdateSuccess, data: updateData, isError: isUpdateError, error: updateError }] = useUpdateMutation();\r\n  const { data: { Token, Descripcion, Valor } = {} } = useGetUserQuery(Id, { skip: !!!Id });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      Id: Id,\r\n      Token: Token || '',\r\n      Descripcion: Descripcion || '',\r\n      Valor: Valor || '',\r\n    },\r\n    validationSchema: Yup.object().shape({      \r\n      Descripcion: Yup.string().required('Debe ingresar una descripción'),\r\n      Valor: Yup.string().required( 'Debe ingresar Valor'),   \r\n    }),\r\n    onSubmit: (values) => {\r\n      if (Id) {\r\n        return update(values);\r\n      }\r\n    }\r\n  });\r\n\r\n  const onCancelClick = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n      \r\n    if (isUpdateSuccess) {\r\n      toast.success(\"Parámetro se edito con exito\");\r\n      history.goBack();\r\n    }\r\n  }, [isUpdateSuccess, updateData]);\r\n\r\n  useEffect(() => { \r\n      \r\n    if (isUpdateError) {\r\n      toast.error([].concat(...Object.values(JSON.parse(updateError.data).Messages)));\r\n    }\r\n  }, [isUpdateError, updateError]);\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit} className=\"pt-4\">\r\n      <Section>\r\n        <SectionHeader className=\"d-flex align-items-center\">\r\n          <SectionTitle className=\"flex-fill\">\r\n            <TranslatableText  entry=\"Parámetros\" />\r\n          </SectionTitle>\r\n          <div className=\"d-block\">\r\n            <Button type=\"button\" variant=\"outline-primary\" onClick={onCancelClick}>\r\n              <TranslatableText entry=\"Cancelar\" />\r\n            </Button>\r\n            <Button type=\"submit\" className=\"ms-2\" hidden={disabled}>\r\n              <TranslatableText entry=\"Guardar\" />\r\n            </Button>\r\n          </div>\r\n        </SectionHeader>\r\n        <SectionBody>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText  entry=\"Token\" />\r\n                </Form.Label>\r\n                <Form.Control type=\"text\" {...formik.getFieldProps('Token')}  disabled={true} />                \r\n              </Form.Group>\r\n            </Col>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText  entry=\"Descripción\" />\r\n                </Form.Label>\r\n                <Form.Control type=\"text\"  {...formik.getFieldProps('Descripcion')} isInvalid={!!formik.errors.Descripcion && formik.touched.Descripcion} disabled={disabled} />\r\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.Descripcion}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={12} md={6}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>\r\n                  <TranslatableText  entry=\"Valor\" />\r\n                </Form.Label>\r\n                <Form.Control type=\"text\"  {...formik.getFieldProps('Valor')} isInvalid={!!formik.errors.Apellido && formik.touched.Apellido} disabled={disabled} />\r\n                <Form.Control.Feedback type=\"invalid\">{formik.errors.Apellido}</Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>            \r\n          </Row>          \r\n          </SectionBody>\r\n      </Section>\r\n    </Form>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\table\\index.jsx",["938","939"],[],"import React from 'react';\r\n\r\nimport { Header, OptionMenu, SelectFilterDescription, SelectFilterForm, SortDescription, SortForm, Table as TecsoTable, TextFilterDescription, TextFilterForm } from '../../../components/table';\r\nimport { TranslatableText } from '../../../components/translations';\r\n\r\n\r\n\r\nimport Row from './row';\r\n\r\nexport default function Table(props) { \r\n\r\n  return (\r\n    <TecsoTable {...props} row={(props) => <Row {...props} />}>\r\n      <Header className=\"d-flex\">\r\n        <TranslatableText  entry=\"Token\" />\r\n        <SortDescription className=\"ms-2\" conditions={(order) => ({ Token: order })} />\r\n        <TextFilterDescription className=\"ms-2\" conditions={(value) => ({ Token: value })} />\r\n        <OptionMenu className=\"ms-auto\">\r\n          <SortForm conditions={(order) => ({ Token: order })} />\r\n          <TextFilterForm conditions={(value) => ({ Token: value })} />\r\n        </OptionMenu>\r\n      </Header>\r\n      <Header  className=\"d-flex\">\r\n        <TranslatableText  entry=\"Descripción\" />\r\n        <SortDescription className=\"ms-2\" conditions={(order) => ({ Descripcion: order })} />\r\n        <TextFilterDescription className=\"ms-2\" conditions={(value) => ({ Descripcion: value })} />\r\n        <OptionMenu className=\"ms-auto\">\r\n          <SortForm conditions={(order) => ({ Descripcion: order })} />\r\n          <TextFilterForm conditions={(value) => ({ Descripcion: value })} />\r\n        </OptionMenu>\r\n      </Header>\r\n      <Header className=\"d-flex\">\r\n        <TranslatableText entry=\"Valor\" />\r\n        <SortDescription className=\"ms-2\" conditions={(order) => ({ Valor: order })} />\r\n        <TextFilterDescription className=\"ms-2\" conditions={(value) => ({ Valor: value })} />\r\n        <OptionMenu className=\"ms-auto\">\r\n          <SortForm conditions={(order) => ({ Valor: order })} />\r\n          <TextFilterForm conditions={(value) => ({ Valor: value })} />\r\n        </OptionMenu>\r\n      </Header>     \r\n      <Header className=\"d-flex\">\r\n        <TranslatableText  entry=\"Accion\" />\r\n      </Header>\r\n    </TecsoTable>\r\n  );\r\n};","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\parametros\\table\\row.jsx",["940","941","942","943","944"],[],"import React from 'react';\r\nimport { Badge } from 'react-bootstrap';\r\nimport { faCheck, faEdit,  faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport IconButton from '../../../components/icon-button';\r\nimport { Cell, Row as TecsoRow } from '../../../components/table';\r\nimport { TranslatableText } from '../../../components/translations';\r\nimport { Routes } from '../../../routes';\r\nimport { permissionsKeys } from '../../../utils/permissionsKeys';\r\nimport PermissionChecker from '../../../components/permissionChecker';\r\n\r\nexport default function Row({ value, index, values }) {\r\n\r\n  return (\r\n    <TecsoRow>\r\n      <Cell>{value.Token}</Cell>\r\n      <Cell>{value.Descripcion}</Cell>\r\n      <Cell>{value.Valor}</Cell>\r\n      <Cell>        \r\n        {PermissionChecker(permissionsKeys.PARAMETRO_UPDATE) && !(value.Usuario == 'admin@admin.com') && <IconButton title='Editar' icon={faEdit} href={Routes.Parametros.Update.path.replace(':Id', value.Id)} className=\"mx-1\" />}\r\n        \r\n      </Cell>\r\n    </TecsoRow>\r\n  );\r\n}","C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\votar\\index.js",["945","946","947","948"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\redux\\apis\\votos.js",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\index.jsx",["949"],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\header.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\table\\index.jsx",[],[],"C:\\Proyectos\\NosPremiamos\\ReactApp\\src\\pages\\controlarvotos\\table\\row.jsx",["950","951","952"],[],{"ruleId":"953","severity":1,"message":"954","line":7,"column":1,"nodeType":"955","endLine":15,"endColumn":2},{"ruleId":"956","severity":1,"message":"957","line":4,"column":10,"nodeType":"958","messageId":"959","endLine":4,"endColumn":25},{"ruleId":"960","severity":1,"message":"961","line":123,"column":35,"nodeType":"962","messageId":"963","endLine":123,"endColumn":37},{"ruleId":"964","severity":1,"message":"965","line":18,"column":6,"nodeType":"966","endLine":18,"endColumn":18,"suggestions":"967"},{"ruleId":"956","severity":1,"message":"968","line":1,"column":28,"nodeType":"958","messageId":"959","endLine":1,"endColumn":36},{"ruleId":"964","severity":1,"message":"965","line":66,"column":6,"nodeType":"966","endLine":66,"endColumn":58,"suggestions":"969"},{"ruleId":"964","severity":1,"message":"970","line":77,"column":6,"nodeType":"966","endLine":77,"endColumn":56,"suggestions":"971"},{"ruleId":"964","severity":1,"message":"965","line":43,"column":6,"nodeType":"966","endLine":43,"endColumn":29,"suggestions":"972"},{"ruleId":"964","severity":1,"message":"970","line":49,"column":6,"nodeType":"966","endLine":49,"endColumn":28,"suggestions":"973"},{"ruleId":"956","severity":1,"message":"974","line":20,"column":9,"nodeType":"958","messageId":"959","endLine":20,"endColumn":14},{"ruleId":"960","severity":1,"message":"961","line":48,"column":18,"nodeType":"962","messageId":"963","endLine":48,"endColumn":20},{"ruleId":"964","severity":1,"message":"975","line":58,"column":6,"nodeType":"966","endLine":58,"endColumn":8,"suggestions":"976"},{"ruleId":"956","severity":1,"message":"977","line":5,"column":24,"nodeType":"958","messageId":"959","endLine":5,"endColumn":27},{"ruleId":"956","severity":1,"message":"978","line":5,"column":29,"nodeType":"958","messageId":"959","endLine":5,"endColumn":33},{"ruleId":"964","severity":1,"message":"979","line":68,"column":6,"nodeType":"966","endLine":68,"endColumn":58,"suggestions":"980"},{"ruleId":"964","severity":1,"message":"970","line":79,"column":6,"nodeType":"966","endLine":79,"endColumn":56,"suggestions":"981"},{"ruleId":"956","severity":1,"message":"982","line":1,"column":17,"nodeType":"958","messageId":"959","endLine":1,"endColumn":26},{"ruleId":"956","severity":1,"message":"983","line":1,"column":29,"nodeType":"958","messageId":"959","endLine":1,"endColumn":31},{"ruleId":"956","severity":1,"message":"984","line":11,"column":8,"nodeType":"958","messageId":"959","endLine":11,"endColumn":15},{"ruleId":"956","severity":1,"message":"985","line":13,"column":8,"nodeType":"958","messageId":"959","endLine":13,"endColumn":13},{"ruleId":"956","severity":1,"message":"986","line":14,"column":8,"nodeType":"958","messageId":"959","endLine":14,"endColumn":14},{"ruleId":"956","severity":1,"message":"987","line":19,"column":25,"nodeType":"958","messageId":"959","endLine":19,"endColumn":44},{"ruleId":"956","severity":1,"message":"988","line":20,"column":25,"nodeType":"958","messageId":"959","endLine":20,"endColumn":43},{"ruleId":"964","severity":1,"message":"989","line":45,"column":6,"nodeType":"966","endLine":45,"endColumn":63,"suggestions":"990"},{"ruleId":"964","severity":1,"message":"965","line":36,"column":6,"nodeType":"966","endLine":36,"endColumn":63,"suggestions":"991"},{"ruleId":"964","severity":1,"message":"965","line":37,"column":8,"nodeType":"966","endLine":37,"endColumn":65,"suggestions":"992"},{"ruleId":"956","severity":1,"message":"968","line":1,"column":28,"nodeType":"958","messageId":"959","endLine":1,"endColumn":36},{"ruleId":"956","severity":1,"message":"993","line":2,"column":34,"nodeType":"958","messageId":"959","endLine":2,"endColumn":43},{"ruleId":"956","severity":1,"message":"994","line":3,"column":28,"nodeType":"958","messageId":"959","endLine":3,"endColumn":43},{"ruleId":"953","severity":1,"message":"954","line":10,"column":1,"nodeType":"955","endLine":126,"endColumn":2},{"ruleId":"964","severity":1,"message":"970","line":43,"column":10,"nodeType":"966","endLine":43,"endColumn":104,"suggestions":"995"},{"ruleId":"964","severity":1,"message":"965","line":36,"column":6,"nodeType":"966","endLine":36,"endColumn":63,"suggestions":"996"},{"ruleId":"953","severity":1,"message":"954","line":4,"column":1,"nodeType":"955","endLine":10,"endColumn":3},{"ruleId":"960","severity":1,"message":"961","line":67,"column":67,"nodeType":"962","messageId":"963","endLine":67,"endColumn":69},{"ruleId":"964","severity":1,"message":"970","line":75,"column":10,"nodeType":"966","endLine":75,"endColumn":53,"suggestions":"997"},{"ruleId":"964","severity":1,"message":"975","line":86,"column":8,"nodeType":"966","endLine":86,"endColumn":10,"suggestions":"998"},{"ruleId":"964","severity":1,"message":"970","line":116,"column":8,"nodeType":"966","endLine":116,"endColumn":30,"suggestions":"999"},{"ruleId":"956","severity":1,"message":"968","line":1,"column":28,"nodeType":"958","messageId":"959","endLine":1,"endColumn":36},{"ruleId":"956","severity":1,"message":"1000","line":10,"column":10,"nodeType":"958","messageId":"959","endLine":10,"endColumn":28},{"ruleId":"953","severity":1,"message":"954","line":14,"column":1,"nodeType":"955","endLine":166,"endColumn":3},{"ruleId":"964","severity":1,"message":"970","line":52,"column":6,"nodeType":"966","endLine":52,"endColumn":43,"suggestions":"1001"},{"ruleId":"964","severity":1,"message":"970","line":61,"column":6,"nodeType":"966","endLine":61,"endColumn":42,"suggestions":"1002"},{"ruleId":"964","severity":1,"message":"1003","line":75,"column":6,"nodeType":"966","endLine":75,"endColumn":29,"suggestions":"1004"},{"ruleId":"960","severity":1,"message":"961","line":78,"column":33,"nodeType":"962","messageId":"963","endLine":78,"endColumn":35},{"ruleId":"960","severity":1,"message":"961","line":83,"column":33,"nodeType":"962","messageId":"963","endLine":83,"endColumn":35},{"ruleId":"960","severity":1,"message":"961","line":88,"column":33,"nodeType":"962","messageId":"963","endLine":88,"endColumn":35},{"ruleId":"964","severity":1,"message":"970","line":93,"column":6,"nodeType":"966","endLine":93,"endColumn":59,"suggestions":"1005"},{"ruleId":"960","severity":1,"message":"961","line":96,"column":32,"nodeType":"962","messageId":"963","endLine":96,"endColumn":34},{"ruleId":"960","severity":1,"message":"961","line":99,"column":32,"nodeType":"962","messageId":"963","endLine":99,"endColumn":34},{"ruleId":"964","severity":1,"message":"970","line":102,"column":6,"nodeType":"966","endLine":102,"endColumn":30,"suggestions":"1006"},{"ruleId":"956","severity":1,"message":"1007","line":2,"column":10,"nodeType":"958","messageId":"959","endLine":2,"endColumn":13},{"ruleId":"956","severity":1,"message":"1008","line":2,"column":15,"nodeType":"958","messageId":"959","endLine":2,"endColumn":18},{"ruleId":"956","severity":1,"message":"1009","line":2,"column":26,"nodeType":"958","messageId":"959","endLine":2,"endColumn":30},{"ruleId":"956","severity":1,"message":"993","line":2,"column":40,"nodeType":"958","messageId":"959","endLine":2,"endColumn":49},{"ruleId":"956","severity":1,"message":"1010","line":3,"column":10,"nodeType":"958","messageId":"959","endLine":3,"endColumn":14},{"ruleId":"964","severity":1,"message":"1011","line":47,"column":6,"nodeType":"966","endLine":47,"endColumn":13,"suggestions":"1012"},{"ruleId":"964","severity":1,"message":"970","line":53,"column":6,"nodeType":"966","endLine":53,"endColumn":32,"suggestions":"1013"},{"ruleId":"956","severity":1,"message":"1014","line":4,"column":16,"nodeType":"958","messageId":"959","endLine":4,"endColumn":26},{"ruleId":"956","severity":1,"message":"1015","line":14,"column":71,"nodeType":"958","messageId":"959","endLine":14,"endColumn":78},{"ruleId":"964","severity":1,"message":"1016","line":35,"column":8,"nodeType":"966","endLine":35,"endColumn":22,"suggestions":"1017"},{"ruleId":"956","severity":1,"message":"994","line":3,"column":28,"nodeType":"958","messageId":"959","endLine":3,"endColumn":43},{"ruleId":"956","severity":1,"message":"1014","line":2,"column":10,"nodeType":"958","messageId":"959","endLine":2,"endColumn":20},{"ruleId":"956","severity":1,"message":"1018","line":2,"column":22,"nodeType":"958","messageId":"959","endLine":2,"endColumn":31},{"ruleId":"964","severity":1,"message":"965","line":66,"column":6,"nodeType":"966","endLine":66,"endColumn":58,"suggestions":"1019"},{"ruleId":"964","severity":1,"message":"970","line":77,"column":6,"nodeType":"966","endLine":77,"endColumn":56,"suggestions":"1020"},{"ruleId":"953","severity":1,"message":"954","line":7,"column":1,"nodeType":"955","endLine":16,"endColumn":3},{"ruleId":"953","severity":1,"message":"954","line":3,"column":1,"nodeType":"955","endLine":10,"endColumn":3},{"ruleId":"1021","severity":1,"message":"1022","line":7,"column":7,"nodeType":"1023","endLine":7,"endColumn":72},{"ruleId":"1024","severity":1,"message":"1025","line":7,"column":7,"nodeType":"1023","endLine":7,"endColumn":72},{"ruleId":"956","severity":1,"message":"1026","line":10,"column":9,"nodeType":"958","messageId":"959","endLine":10,"endColumn":28},{"ruleId":"964","severity":1,"message":"1027","line":21,"column":6,"nodeType":"966","endLine":21,"endColumn":8,"suggestions":"1028"},{"ruleId":"953","severity":1,"message":"954","line":12,"column":1,"nodeType":"955","endLine":98,"endColumn":3},{"ruleId":"964","severity":1,"message":"970","line":49,"column":6,"nodeType":"966","endLine":49,"endColumn":29,"suggestions":"1029"},{"ruleId":"964","severity":1,"message":"970","line":60,"column":6,"nodeType":"966","endLine":60,"endColumn":28,"suggestions":"1030"},{"ruleId":"953","severity":1,"message":"954","line":14,"column":1,"nodeType":"955","endLine":122,"endColumn":3},{"ruleId":"964","severity":1,"message":"979","line":61,"column":6,"nodeType":"966","endLine":61,"endColumn":29,"suggestions":"1031"},{"ruleId":"964","severity":1,"message":"970","line":70,"column":6,"nodeType":"966","endLine":70,"endColumn":28,"suggestions":"1032"},{"ruleId":"953","severity":1,"message":"954","line":13,"column":1,"nodeType":"955","endLine":80,"endColumn":3},{"ruleId":"964","severity":1,"message":"1033","line":49,"column":6,"nodeType":"966","endLine":49,"endColumn":45,"suggestions":"1034"},{"ruleId":"953","severity":1,"message":"954","line":12,"column":1,"nodeType":"955","endLine":86,"endColumn":3},{"ruleId":"964","severity":1,"message":"979","line":42,"column":6,"nodeType":"966","endLine":42,"endColumn":29,"suggestions":"1035"},{"ruleId":"964","severity":1,"message":"970","line":51,"column":6,"nodeType":"966","endLine":51,"endColumn":28,"suggestions":"1036"},{"ruleId":"956","severity":1,"message":"1037","line":2,"column":93,"nodeType":"958","messageId":"959","endLine":2,"endColumn":100},{"ruleId":"953","severity":1,"message":"954","line":22,"column":1,"nodeType":"955","endLine":63,"endColumn":3},{"ruleId":"953","severity":1,"message":"954","line":6,"column":1,"nodeType":"955","endLine":15,"endColumn":3},{"ruleId":"956","severity":1,"message":"1038","line":5,"column":10,"nodeType":"958","messageId":"959","endLine":5,"endColumn":21},{"ruleId":"964","severity":1,"message":"1039","line":18,"column":6,"nodeType":"966","endLine":18,"endColumn":23,"suggestions":"1040"},{"ruleId":"956","severity":1,"message":"1041","line":15,"column":10,"nodeType":"958","messageId":"959","endLine":15,"endColumn":16},{"ruleId":"964","severity":1,"message":"1042","line":23,"column":6,"nodeType":"966","endLine":23,"endColumn":13,"suggestions":"1043"},{"ruleId":"956","severity":1,"message":"982","line":1,"column":57,"nodeType":"958","messageId":"959","endLine":1,"endColumn":66},{"ruleId":"953","severity":1,"message":"954","line":9,"column":1,"nodeType":"955","endLine":49,"endColumn":3},{"ruleId":"953","severity":1,"message":"954","line":4,"column":1,"nodeType":"955","endLine":8,"endColumn":3},{"ruleId":"956","severity":1,"message":"1044","line":2,"column":10,"nodeType":"958","messageId":"959","endLine":2,"endColumn":21},{"ruleId":"956","severity":1,"message":"1045","line":3,"column":10,"nodeType":"958","messageId":"959","endLine":3,"endColumn":16},{"ruleId":"956","severity":1,"message":"1046","line":3,"column":25,"nodeType":"958","messageId":"959","endLine":3,"endColumn":32},{"ruleId":"960","severity":1,"message":"961","line":22,"column":76,"nodeType":"962","messageId":"963","endLine":22,"endColumn":78},{"ruleId":"960","severity":1,"message":"961","line":23,"column":76,"nodeType":"962","messageId":"963","endLine":23,"endColumn":78},{"ruleId":"960","severity":1,"message":"961","line":24,"column":76,"nodeType":"962","messageId":"963","endLine":24,"endColumn":78},{"ruleId":"956","severity":1,"message":"1044","line":1,"column":10,"nodeType":"958","messageId":"959","endLine":1,"endColumn":21},{"ruleId":"956","severity":1,"message":"1044","line":2,"column":10,"nodeType":"958","messageId":"959","endLine":2,"endColumn":21},{"ruleId":"956","severity":1,"message":"1047","line":7,"column":10,"nodeType":"958","messageId":"959","endLine":7,"endColumn":26},{"ruleId":"953","severity":1,"message":"954","line":3,"column":1,"nodeType":"955","endLine":5,"endColumn":3},{"ruleId":"953","severity":1,"message":"954","line":7,"column":1,"nodeType":"955","endLine":103,"endColumn":3},{"ruleId":"953","severity":1,"message":"954","line":6,"column":1,"nodeType":"955","endLine":14,"endColumn":3},{"ruleId":"956","severity":1,"message":"968","line":1,"column":76,"nodeType":"958","messageId":"959","endLine":1,"endColumn":84},{"ruleId":"964","severity":1,"message":"1048","line":42,"column":6,"nodeType":"966","endLine":42,"endColumn":8,"suggestions":"1049"},{"ruleId":"953","severity":1,"message":"954","line":3,"column":1,"nodeType":"955","endLine":7,"endColumn":3},{"ruleId":"953","severity":1,"message":"954","line":3,"column":1,"nodeType":"955","endLine":7,"endColumn":3},{"ruleId":"953","severity":1,"message":"954","line":6,"column":1,"nodeType":"955","endLine":55,"endColumn":3},{"ruleId":"964","severity":1,"message":"970","line":48,"column":10,"nodeType":"966","endLine":48,"endColumn":33,"suggestions":"1050"},{"ruleId":"956","severity":1,"message":"968","line":1,"column":28,"nodeType":"958","messageId":"959","endLine":1,"endColumn":36},{"ruleId":"956","severity":1,"message":"1009","line":5,"column":18,"nodeType":"958","messageId":"959","endLine":5,"endColumn":22},{"ruleId":"960","severity":1,"message":"961","line":41,"column":194,"nodeType":"962","messageId":"963","endLine":41,"endColumn":196},{"ruleId":"960","severity":1,"message":"961","line":41,"column":265,"nodeType":"962","messageId":"963","endLine":41,"endColumn":267},{"ruleId":"960","severity":1,"message":"961","line":45,"column":184,"nodeType":"962","messageId":"963","endLine":45,"endColumn":186},{"ruleId":"960","severity":1,"message":"961","line":45,"column":255,"nodeType":"962","messageId":"963","endLine":45,"endColumn":257},{"ruleId":"960","severity":1,"message":"961","line":51,"column":41,"nodeType":"962","messageId":"963","endLine":51,"endColumn":43},{"ruleId":"960","severity":1,"message":"961","line":51,"column":68,"nodeType":"962","messageId":"963","endLine":51,"endColumn":70},{"ruleId":"960","severity":1,"message":"961","line":52,"column":185,"nodeType":"962","messageId":"963","endLine":52,"endColumn":187},{"ruleId":"964","severity":1,"message":"970","line":65,"column":6,"nodeType":"966","endLine":65,"endColumn":24,"suggestions":"1051"},{"ruleId":"964","severity":1,"message":"970","line":74,"column":6,"nodeType":"966","endLine":74,"endColumn":26,"suggestions":"1052"},{"ruleId":"964","severity":1,"message":"965","line":85,"column":6,"nodeType":"966","endLine":85,"endColumn":58,"suggestions":"1053"},{"ruleId":"964","severity":1,"message":"970","line":96,"column":6,"nodeType":"966","endLine":96,"endColumn":56,"suggestions":"1054"},{"ruleId":"960","severity":1,"message":"961","line":175,"column":43,"nodeType":"962","messageId":"963","endLine":175,"endColumn":45},{"ruleId":"960","severity":1,"message":"961","line":31,"column":19,"nodeType":"962","messageId":"963","endLine":31,"endColumn":21},{"ruleId":"964","severity":1,"message":"1055","line":45,"column":6,"nodeType":"966","endLine":45,"endColumn":63,"suggestions":"1056"},{"ruleId":"960","severity":1,"message":"961","line":48,"column":17,"nodeType":"962","messageId":"963","endLine":48,"endColumn":19},{"ruleId":"956","severity":1,"message":"1057","line":5,"column":18,"nodeType":"958","messageId":"959","endLine":5,"endColumn":22},{"ruleId":"964","severity":1,"message":"965","line":37,"column":10,"nodeType":"966","endLine":37,"endColumn":67,"suggestions":"1058"},{"ruleId":"960","severity":1,"message":"961","line":23,"column":23,"nodeType":"962","messageId":"963","endLine":23,"endColumn":25},{"ruleId":"960","severity":1,"message":"961","line":24,"column":23,"nodeType":"962","messageId":"963","endLine":24,"endColumn":25},{"ruleId":"960","severity":1,"message":"961","line":26,"column":81,"nodeType":"962","messageId":"963","endLine":26,"endColumn":83},{"ruleId":"960","severity":1,"message":"961","line":27,"column":81,"nodeType":"962","messageId":"963","endLine":27,"endColumn":83},{"ruleId":"960","severity":1,"message":"961","line":27,"column":121,"nodeType":"962","messageId":"963","endLine":27,"endColumn":123},{"ruleId":"960","severity":1,"message":"961","line":28,"column":81,"nodeType":"962","messageId":"963","endLine":28,"endColumn":83},{"ruleId":"960","severity":1,"message":"961","line":28,"column":121,"nodeType":"962","messageId":"963","endLine":28,"endColumn":123},{"ruleId":"960","severity":1,"message":"961","line":16,"column":81,"nodeType":"962","messageId":"963","endLine":16,"endColumn":83},{"ruleId":"964","severity":1,"message":"965","line":46,"column":6,"nodeType":"966","endLine":46,"endColumn":35,"suggestions":"1059"},{"ruleId":"956","severity":1,"message":"1060","line":3,"column":30,"nodeType":"958","messageId":"959","endLine":3,"endColumn":53},{"ruleId":"956","severity":1,"message":"1061","line":3,"column":55,"nodeType":"958","messageId":"959","endLine":3,"endColumn":71},{"ruleId":"956","severity":1,"message":"1062","line":2,"column":10,"nodeType":"958","messageId":"959","endLine":2,"endColumn":15},{"ruleId":"956","severity":1,"message":"1037","line":3,"column":10,"nodeType":"958","messageId":"959","endLine":3,"endColumn":17},{"ruleId":"956","severity":1,"message":"1046","line":3,"column":28,"nodeType":"958","messageId":"959","endLine":3,"endColumn":35},{"ruleId":"956","severity":1,"message":"1047","line":7,"column":10,"nodeType":"958","messageId":"959","endLine":7,"endColumn":26},{"ruleId":"960","severity":1,"message":"961","line":20,"column":81,"nodeType":"962","messageId":"963","endLine":20,"endColumn":83},{"ruleId":"956","severity":1,"message":"1009","line":4,"column":18,"nodeType":"958","messageId":"959","endLine":4,"endColumn":22},{"ruleId":"953","severity":1,"message":"954","line":15,"column":1,"nodeType":"955","endLine":115,"endColumn":3},{"ruleId":"964","severity":1,"message":"979","line":51,"column":6,"nodeType":"966","endLine":51,"endColumn":33,"suggestions":"1063"},{"ruleId":"964","severity":1,"message":"970","line":59,"column":6,"nodeType":"966","endLine":59,"endColumn":32,"suggestions":"1064"},{"ruleId":"964","severity":1,"message":"965","line":52,"column":6,"nodeType":"966","endLine":52,"endColumn":63,"suggestions":"1065"},{"ruleId":"956","severity":1,"message":"1062","line":2,"column":10,"nodeType":"958","messageId":"959","endLine":2,"endColumn":15},{"ruleId":"956","severity":1,"message":"1045","line":3,"column":19,"nodeType":"958","messageId":"959","endLine":3,"endColumn":25},{"ruleId":"956","severity":1,"message":"1046","line":3,"column":28,"nodeType":"958","messageId":"959","endLine":3,"endColumn":35},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'permissionsKeys' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["1066"],"'useState' is defined but never used.",["1067"],"React Hook useEffect has a missing dependency: 'formik'. Either include it or remove the dependency array.",["1068"],["1069"],["1070"],"'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'captchaDemo'. Either include it or remove the dependency array.",["1071"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","React Hook useEffect has missing dependencies: 'formik' and 'history'. Either include them or remove the dependency array.",["1072"],["1073"],"'useEffect' is defined but never used.","'us' is defined but never used.","'Manager' is defined but never used.","'Table' is defined but never used.","'Header' is defined but never used.","'genericTranslations' is assigned a value but never used.","'errorsTranslations' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Eliminado' and 'history'. Either include them or remove the dependency array.",["1074"],["1075"],["1076"],"'FormCheck' is defined but never used.","'useTranslations' is defined but never used.",["1077"],["1078"],["1079"],["1080"],["1081"],"'useGetByTokenQuery' is defined but never used.",["1082"],["1083"],"React Hook useEffect has missing dependencies: 'formik' and 'representantesPatente'. Either include them or remove the dependency array.",["1084"],["1085"],["1086"],"'Col' is defined but never used.","'Row' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'isLoginSuccess', and 'loginData'. Either include them or remove the dependency array.",["1087"],["1088"],"'useHistory' is defined but never used.","'addData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'genericTranslations.ReenvioMail'. Either include it or remove the dependency array.",["1089"],"'useParams' is defined but never used.",["1090"],["1091"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'filterChangeHandler' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'onQueryChange'. Either include it or remove the dependency array. If 'onQueryChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1092"],["1093"],["1094"],["1095"],["1096"],"React Hook useEffect has missing dependencies: 'permiteDescargarReporte' and 'terminal.nombre'. Either include them or remove the dependency array.",["1097"],["1098"],["1099"],"'faCheck' is defined but never used.","'application' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'group', 'keys', and 'query.data'. Either include them or remove the dependency array.",["1100"],"'logout' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["1101"],"'useSelector' is defined but never used.","'faEdit' is defined but never used.","'faTrash' is defined but never used.","'TranslatableText' is defined but never used.","React Hook useEffect has missing dependencies: 'children' and 'onQueryChange'. Either include them or remove the dependency array. If 'onQueryChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1102"],["1103"],["1104"],["1105"],["1106"],["1107"],"React Hook useEffect has missing dependencies: 'EstadoId' and 'history'. Either include them or remove the dependency array.",["1108"],"'Form' is defined but never used.",["1109"],["1110"],"'SelectFilterDescription' is defined but never used.","'SelectFilterForm' is defined but never used.","'Badge' is defined but never used.",["1111"],["1112"],["1113"],{"desc":"1114","fix":"1115"},{"desc":"1116","fix":"1117"},{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1122","fix":"1123"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1118","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1131","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1131","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1124","fix":"1139"},{"desc":"1122","fix":"1140"},{"desc":"1141","fix":"1142"},{"desc":"1143","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1116","fix":"1157"},{"desc":"1118","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1161","fix":"1162"},{"desc":"1122","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1122","fix":"1166"},{"desc":"1167","fix":"1168"},{"desc":"1164","fix":"1169"},{"desc":"1122","fix":"1170"},{"desc":"1171","fix":"1172"},{"desc":"1173","fix":"1174"},{"desc":"1175","fix":"1176"},{"desc":"1161","fix":"1177"},{"desc":"1178","fix":"1179"},{"desc":"1180","fix":"1181"},{"desc":"1116","fix":"1182"},{"desc":"1118","fix":"1183"},{"desc":"1184","fix":"1185"},{"desc":"1131","fix":"1186"},{"desc":"1187","fix":"1188"},{"desc":"1189","fix":"1190"},{"desc":"1191","fix":"1192"},{"desc":"1193","fix":"1194"},"Update the dependencies array to be: [auth.token, history]",{"range":"1195","text":"1196"},"Update the dependencies array to be: [isAddSuccess, addData, isUpdateSuccess, updateData, history]",{"range":"1197","text":"1198"},"Update the dependencies array to be: [isAddError, addError, isUpdateError, updateError, formik]",{"range":"1199","text":"1200"},"Update the dependencies array to be: [isAddSuccess, addData, history]",{"range":"1201","text":"1202"},"Update the dependencies array to be: [isAddError, addError, formik]",{"range":"1203","text":"1204"},"Update the dependencies array to be: [captchaDemo]",{"range":"1205","text":"1206"},"Update the dependencies array to be: [isAddSuccess, addData, isUpdateSuccess, updateData, formik, history]",{"range":"1207","text":"1208"},{"range":"1209","text":"1200"},"Update the dependencies array to be: [isDeleteSuccess, deleteData, isDeleteError, deleteError, Eliminado, history]",{"range":"1210","text":"1211"},"Update the dependencies array to be: [isDeleteSuccess, deleteData, isDeleteError, deleteError, history]",{"range":"1212","text":"1213"},{"range":"1214","text":"1213"},"Update the dependencies array to be: [isResetPasswordSuccess, resetPasswordData, isResetPasswordError, resetPasswordError, history, formik]",{"range":"1215","text":"1216"},{"range":"1217","text":"1213"},"Update the dependencies array to be: [formik.values.termiYcondicion, contenidos, formik]",{"range":"1218","text":"1219"},{"range":"1220","text":"1206"},{"range":"1221","text":"1204"},"Update the dependencies array to be: [isCobrarTasaSuccess, cobrarTasaData, formik]",{"range":"1222","text":"1223"},"Update the dependencies array to be: [isCobrarTasaError, cobrarTasaError, formik]",{"range":"1224","text":"1225"},"Update the dependencies array to be: [formik, formik.values.patente, representantesPatente]",{"range":"1226","text":"1227"},"Update the dependencies array to be: [formik.values.escalable, formik.values.esEscalable, formik]",{"range":"1228","text":"1229"},"Update the dependencies array to be: [formik, formik.values.efectivo]",{"range":"1230","text":"1231"},"Update the dependencies array to be: [history, isLoginSuccess, loginData, token]",{"range":"1232","text":"1233"},"Update the dependencies array to be: [formik, isLoginError, loginError]",{"range":"1234","text":"1235"},"Update the dependencies array to be: [genericTranslations.ReenvioMail, isAddSuccess]",{"range":"1236","text":"1237"},{"range":"1238","text":"1198"},{"range":"1239","text":"1200"},"Update the dependencies array to be: [onQueryChange]",{"range":"1240","text":"1241"},"Update the dependencies array to be: [isAddSuccess, addData, formik]",{"range":"1242","text":"1243"},{"range":"1244","text":"1204"},"Update the dependencies array to be: [isAddSuccess, addData, formik, history]",{"range":"1245","text":"1246"},{"range":"1247","text":"1204"},"Update the dependencies array to be: [isLiquidacionSuccess, liquidacionData, permiteDescargarReporte, terminal.nombre]",{"range":"1248","text":"1249"},{"range":"1250","text":"1246"},{"range":"1251","text":"1204"},"Update the dependencies array to be: [dispatch, group, keys, query.data, query.isSuccess]",{"range":"1252","text":"1253"},"Update the dependencies array to be: [refetch, token]",{"range":"1254","text":"1255"},"Update the dependencies array to be: [children, onQueryChange]",{"range":"1256","text":"1257"},{"range":"1258","text":"1243"},"Update the dependencies array to be: [IncluyeNovedades, formik]",{"range":"1259","text":"1260"},"Update the dependencies array to be: [RequiereAprobacion, formik]",{"range":"1261","text":"1262"},{"range":"1263","text":"1198"},{"range":"1264","text":"1200"},"Update the dependencies array to be: [isDeleteSuccess, deleteData, isDeleteError, deleteError, EstadoId, history]",{"range":"1265","text":"1266"},{"range":"1267","text":"1213"},"Update the dependencies array to be: [history, isUpdateSuccess, updateData]",{"range":"1268","text":"1269"},"Update the dependencies array to be: [formik, history, isVotarSuccess, votarData]",{"range":"1270","text":"1271"},"Update the dependencies array to be: [formik, isVotarError, votarError]",{"range":"1272","text":"1273"},"Update the dependencies array to be: [isUpdateSuccess, updateData, isUpdateError, updateError, history]",{"range":"1274","text":"1275"},[543,555],"[auth.token, history]",[2377,2429],"[isAddSuccess, addData, isUpdateSuccess, updateData, history]",[2913,2963],"[isAddError, addError, isUpdateError, updateError, formik]",[1585,1608],"[isAddSuccess, addData, history]",[1711,1733],"[isAddError, addError, formik]",[2305,2307],"[captchaDemo]",[3032,3084],"[isAddSuccess, addData, isUpdateSuccess, updateData, formik, history]",[3376,3426],[1495,1552],"[isDeleteSuccess, deleteData, isDeleteError, deleteError, Eliminado, history]",[1258,1315],"[isDeleteSuccess, deleteData, isDeleteError, deleteError, history]",[1327,1384],[1698,1792],"[isResetPasswordSuccess, resetPasswordData, isResetPasswordError, resetPasswordError, history, formik]",[1222,1279],[3581,3624],"[formik.values.termiYcondicion, contenidos, formik]",[3789,3791],[4511,4533],[2894,2931],"[isCobrarTasaSuccess, cobrarTasaData, formik]",[3161,3197],"[isCobrarTasaError, cobrarTasaError, formik]",[3567,3590],"[formik, formik.values.patente, representantesPatente]",[4246,4299],"[formik.values.escalable, formik.values.esEscalable, formik]",[4538,4562],"[formik, formik.values.efectivo]",[1694,1701],"[history, isLoginSuccess, loginData, token]",[1880,1906],"[formik, isLoginError, loginError]",[1436,1450],"[genericTranslations.ReenvioMail, isAddSuccess]",[2721,2773],[3087,3137],[1102,1104],"[onQueryChange]",[2387,2410],"[isAddSuccess, addData, formik]",[2653,2675],[3117,3140],"[isAddSuccess, addData, formik, history]",[3349,3371],[2263,2302],"[isLiquidacionSuccess, liquidacionData, permiteDescargarReporte, terminal.nombre]",[1685,1708],[1917,1939],[636,653],"[dispatch, group, keys, query.data, query.isSuccess]",[751,758],"[refetch, token]",[1928,1930],"[children, onQueryChange]",[1907,1930],[3297,3315],"[IncluyeNovedades, formik]",[3527,3547],"[RequiereAprobacion, formik]",[3811,3863],[4347,4397],[1515,1572],"[isDeleteSuccess, deleteData, isDeleteError, deleteError, EstadoId, history]",[1392,1449],[1569,1598],"[history, isUpdateSuccess, updateData]",[2272,2299],"[formik, history, isVotarSuccess, votarData]",[2494,2520],"[formik, isVotarError, votarError]",[2276,2333],"[isUpdateSuccess, updateData, isUpdateError, updateError, history]"]