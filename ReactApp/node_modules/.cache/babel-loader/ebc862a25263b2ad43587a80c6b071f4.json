{"ast":null,"code":"import createApi from '../createApi';\nimport { apiUrl } from '../../utils/apiUrl';\nexport const TiposMovimiento = {\n  CargoSaldo: -1,\n  PagoTasa: -2\n};\nexport const api = createApi({\n  reducerPath: 'api:representantes',\n  url: apiUrl.Representantes,\n  endpoints: builder => ({\n    cargarSaldo: builder.mutation({\n      query: importe => ({\n        url: 'CargarSaldo',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: importe\n      }),\n      invalidatesTags: [{\n        type: `${builder.tagType}.movimientos`,\n        id: '*'\n      }]\n    }),\n    get: builder.get(),\n    getItems: builder.getItems(),\n    getMovimientos: builder.query({\n      query: function () {\n        let {\n          filter,\n          order = [],\n          pagination = {}\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          url: 'Movimientos',\n          params: builder.normalizeQueryParameters({\n            filter,\n            order,\n            pagination\n          })\n        };\n      },\n      transformResponse: response => ({\n        data: response.items,\n        length: response.totalCount\n      }),\n      providesTags: result => {\n        if (result !== null && result !== void 0 && result.data) {\n          return [...result.data.map(_ref => {\n            let {\n              id\n            } = _ref;\n            return {\n              type: `${builder.tagType}.movimientos`,\n              id\n            };\n          }), {\n            type: `${builder.tagType}.movimientos`,\n            id: '*'\n          }];\n        } else {\n          return [{\n            type: `${builder.tagType}.movimientos`,\n            id: '*'\n          }];\n        }\n      }\n    })\n  })\n});\nexport const {\n  useCargarSaldoMutation,\n  useGetQuery,\n  useGetItemsQuery,\n  useGetMovimientosQuery\n} = api;","map":{"version":3,"names":["createApi","apiUrl","TiposMovimiento","CargoSaldo","PagoTasa","api","reducerPath","url","Representantes","endpoints","builder","cargarSaldo","mutation","query","importe","method","headers","body","invalidatesTags","type","tagType","id","get","getItems","getMovimientos","filter","order","pagination","params","normalizeQueryParameters","transformResponse","response","data","items","length","totalCount","providesTags","result","map","useCargarSaldoMutation","useGetQuery","useGetItemsQuery","useGetMovimientosQuery"],"sources":["C:/Proyectos/NosPremiamos/ReactApp/src/redux/apis/representantes.js"],"sourcesContent":["import createApi from '../createApi';\r\n\r\nimport { apiUrl } from '../../utils/apiUrl';\r\n\r\nexport const TiposMovimiento = {\r\n  CargoSaldo: -1,\r\n  PagoTasa: -2\r\n};\r\n\r\nexport const api = createApi({\r\n  reducerPath: 'api:representantes',\r\n  url: apiUrl.Representantes,\r\n  endpoints: (builder) => ({\r\n    cargarSaldo: builder.mutation({\r\n      query: (importe) => ({\r\n        url: 'CargarSaldo',\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: importe\r\n      }),\r\n      invalidatesTags: [{ type: `${builder.tagType}.movimientos`, id: '*' }]\r\n    }),\r\n    get: builder.get(),\r\n    getItems: builder.getItems(),\r\n    getMovimientos: builder.query({\r\n      query: ({ filter, order = [], pagination = {} } = {}) => ({\r\n        url: 'Movimientos',\r\n        params: builder.normalizeQueryParameters({ filter, order, pagination })\r\n      }),\r\n      transformResponse: (response) => ({\r\n        data: response.items,\r\n        length: response.totalCount\r\n      }),\r\n      providesTags: (result) => {\r\n        if (result?.data) {\r\n          return [...result.data.map(({ id }) => ({ type: `${builder.tagType}.movimientos`, id })), { type: `${builder.tagType}.movimientos`, id: '*' }];\r\n        }\r\n        else {\r\n          return [{ type: `${builder.tagType}.movimientos`, id: '*' }];\r\n        }\r\n      }\r\n    })\r\n  })\r\n});\r\n\r\nexport const { useCargarSaldoMutation, useGetQuery, useGetItemsQuery, useGetMovimientosQuery, } = api;"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAO,MAAMC,eAAe,GAAG;EAC7BC,UAAU,EAAE,CAAC,CADgB;EAE7BC,QAAQ,EAAE,CAAC;AAFkB,CAAxB;AAKP,OAAO,MAAMC,GAAG,GAAGL,SAAS,CAAC;EAC3BM,WAAW,EAAE,oBADc;EAE3BC,GAAG,EAAEN,MAAM,CAACO,cAFe;EAG3BC,SAAS,EAAGC,OAAD,KAAc;IACvBC,WAAW,EAAED,OAAO,CAACE,QAAR,CAAiB;MAC5BC,KAAK,EAAGC,OAAD,KAAc;QACnBP,GAAG,EAAE,aADc;QAEnBQ,MAAM,EAAE,MAFW;QAGnBC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAHU;QAInBC,IAAI,EAAEH;MAJa,CAAd,CADqB;MAO5BI,eAAe,EAAE,CAAC;QAAEC,IAAI,EAAG,GAAET,OAAO,CAACU,OAAQ,cAA3B;QAA0CC,EAAE,EAAE;MAA9C,CAAD;IAPW,CAAjB,CADU;IAUvBC,GAAG,EAAEZ,OAAO,CAACY,GAAR,EAVkB;IAWvBC,QAAQ,EAAEb,OAAO,CAACa,QAAR,EAXa;IAYvBC,cAAc,EAAEd,OAAO,CAACG,KAAR,CAAc;MAC5BA,KAAK,EAAE;QAAA,IAAC;UAAEY,MAAF;UAAUC,KAAK,GAAG,EAAlB;UAAsBC,UAAU,GAAG;QAAnC,CAAD,uEAA2C,EAA3C;QAAA,OAAmD;UACxDpB,GAAG,EAAE,aADmD;UAExDqB,MAAM,EAAElB,OAAO,CAACmB,wBAAR,CAAiC;YAAEJ,MAAF;YAAUC,KAAV;YAAiBC;UAAjB,CAAjC;QAFgD,CAAnD;MAAA,CADqB;MAK5BG,iBAAiB,EAAGC,QAAD,KAAe;QAChCC,IAAI,EAAED,QAAQ,CAACE,KADiB;QAEhCC,MAAM,EAAEH,QAAQ,CAACI;MAFe,CAAf,CALS;MAS5BC,YAAY,EAAGC,MAAD,IAAY;QACxB,IAAIA,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEL,IAAZ,EAAkB;UAChB,OAAO,CAAC,GAAGK,MAAM,CAACL,IAAP,CAAYM,GAAZ,CAAgB;YAAA,IAAC;cAAEjB;YAAF,CAAD;YAAA,OAAa;cAAEF,IAAI,EAAG,GAAET,OAAO,CAACU,OAAQ,cAA3B;cAA0CC;YAA1C,CAAb;UAAA,CAAhB,CAAJ,EAAmF;YAAEF,IAAI,EAAG,GAAET,OAAO,CAACU,OAAQ,cAA3B;YAA0CC,EAAE,EAAE;UAA9C,CAAnF,CAAP;QACD,CAFD,MAGK;UACH,OAAO,CAAC;YAAEF,IAAI,EAAG,GAAET,OAAO,CAACU,OAAQ,cAA3B;YAA0CC,EAAE,EAAE;UAA9C,CAAD,CAAP;QACD;MACF;IAhB2B,CAAd;EAZO,CAAd;AAHgB,CAAD,CAArB;AAoCP,OAAO,MAAM;EAAEkB,sBAAF;EAA0BC,WAA1B;EAAuCC,gBAAvC;EAAyDC;AAAzD,IAAqFrC,GAA3F"},"metadata":{},"sourceType":"module"}