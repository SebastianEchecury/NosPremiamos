{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useGetTranslationValuesQuery } from '../../redux/apis/translations';\nimport { add } from '../../redux/slices/missing-translations';\nexport default function useTranslations(_ref) {\n  _s();\n\n  var _query$data2;\n\n  let {\n    group,\n    keys = [],\n    fill = true\n  } = _ref;\n  const query = useGetTranslationValuesQuery(group);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (query.isSuccess) {\n      const missings = {\n        group,\n        keys: keys.filter(key => {\n          var _query$data;\n\n          return !((_query$data = query.data) !== null && _query$data !== void 0 && _query$data.some(translation => translation.key === key));\n        })\n      };\n      dispatch(add(missings));\n    }\n  }, [query.isSuccess]);\n  return {\n    translations: { ...(fill ? keys.reduce((translations, key) => ({ ...translations,\n        [key]: `${group}.${key}`\n      }), {}) : {}),\n      ...((_query$data2 = query.data) === null || _query$data2 === void 0 ? void 0 : _query$data2.reduce((translations, translation) => ({ ...translations,\n        [translation.key]: translation.value\n      }), {}))\n    },\n    ...query\n  };\n}\n\n_s(useTranslations, \"5vI2psP4HSJ8Izxeh9XnsxqetTI=\", false, function () {\n  return [useGetTranslationValuesQuery, useDispatch];\n});","map":{"version":3,"names":["useEffect","useDispatch","useGetTranslationValuesQuery","add","useTranslations","group","keys","fill","query","dispatch","isSuccess","missings","filter","key","data","some","translation","translations","reduce","value"],"sources":["C:/Proyectos/NosPremiamos/ReactApp/src/components/translations/useTranslations.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useGetTranslationValuesQuery } from '../../redux/apis/translations';\r\nimport { add } from '../../redux/slices/missing-translations';\r\n\r\nexport default function useTranslations({ group, keys = [], fill = true }) {\r\n  const query = useGetTranslationValuesQuery(group);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (query.isSuccess) {\r\n      const missings = {\r\n        group,\r\n        keys: keys.filter((key) => !query.data?.some((translation) => translation.key === key))\r\n      };\r\n      dispatch(add(missings));\r\n    }\r\n  }, [query.isSuccess]);\r\n\r\n  return {\r\n    translations: {\r\n      ...((fill) ? keys.reduce((translations, key) => ({ ...translations, [key]: `${group}.${key}` }), {}) : {}),\r\n      ...query.data?.reduce((translations, translation) => ({ ...translations, [translation.key]: translation.value }), {})\r\n    },\r\n    ...query\r\n  };\r\n}"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,4BAAT,QAA6C,+BAA7C;AACA,SAASC,GAAT,QAAoB,yCAApB;AAEA,eAAe,SAASC,eAAT,OAA4D;EAAA;;EAAA;;EAAA,IAAnC;IAAEC,KAAF;IAASC,IAAI,GAAG,EAAhB;IAAoBC,IAAI,GAAG;EAA3B,CAAmC;EACzE,MAAMC,KAAK,GAAGN,4BAA4B,CAACG,KAAD,CAA1C;EACA,MAAMI,QAAQ,GAAGR,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,CAACE,SAAV,EAAqB;MACnB,MAAMC,QAAQ,GAAG;QACfN,KADe;QAEfC,IAAI,EAAEA,IAAI,CAACM,MAAL,CAAaC,GAAD;UAAA;;UAAA,OAAS,iBAACL,KAAK,CAACM,IAAP,wCAAC,YAAYC,IAAZ,CAAkBC,WAAD,IAAiBA,WAAW,CAACH,GAAZ,KAAoBA,GAAtD,CAAD,CAAT;QAAA,CAAZ;MAFS,CAAjB;MAIAJ,QAAQ,CAACN,GAAG,CAACQ,QAAD,CAAJ,CAAR;IACD;EACF,CARQ,EAQN,CAACH,KAAK,CAACE,SAAP,CARM,CAAT;EAUA,OAAO;IACLO,YAAY,EAAE,EACZ,IAAKV,IAAD,GAASD,IAAI,CAACY,MAAL,CAAY,CAACD,YAAD,EAAeJ,GAAf,MAAwB,EAAE,GAAGI,YAAL;QAAmB,CAACJ,GAAD,GAAQ,GAAER,KAAM,IAAGQ,GAAI;MAA1C,CAAxB,CAAZ,EAAoF,EAApF,CAAT,GAAmG,EAAvG,CADY;MAEZ,oBAAGL,KAAK,CAACM,IAAT,iDAAG,aAAYI,MAAZ,CAAmB,CAACD,YAAD,EAAeD,WAAf,MAAgC,EAAE,GAAGC,YAAL;QAAmB,CAACD,WAAW,CAACH,GAAb,GAAmBG,WAAW,CAACG;MAAlD,CAAhC,CAAnB,EAA+G,EAA/G,CAAH;IAFY,CADT;IAKL,GAAGX;EALE,CAAP;AAOD;;GArBuBJ,e;UACRF,4B,EACGD,W"},"metadata":{},"sourceType":"module"}