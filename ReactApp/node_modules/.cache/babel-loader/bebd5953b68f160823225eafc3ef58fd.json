{"ast":null,"code":"import createApi from '../createApi';\nimport { apiUrl } from '../../utils/apiUrl';\nexport const TiposMovimiento = {\n  LiquidacionCuentaCorriente: -1,\n  CobroEfectivo: -2,\n  CobroCuentaCorriente: -3\n};\nexport const api = createApi({\n  reducerPath: 'api:terminales',\n  url: apiUrl.Terminales,\n  endpoints: builder => ({\n    cobrarTasa: builder.mutation({\n      query: values => ({\n        url: 'CobrarTasa',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: values,\n        responseHandler: response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            return response.json().then(response => builder.normalizeErrors(response.errors));\n          }\n        }\n      }),\n      invalidatesTags: [builder.tagType, {\n        type: `${builder.tagType}.movimientos`,\n        id: '*'\n      }]\n    }),\n    add: builder.add(),\n    delete: builder.delete(),\n    update: builder.update(),\n    get: builder.get(),\n    getItems: builder.getItems(),\n    getList: builder.getList(),\n    getMovimientos: builder.query({\n      query: function () {\n        let {\n          filter,\n          order = [],\n          pagination = {}\n        } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return {\n          url: 'Movimientos',\n          params: builder.normalizeQueryParameters({\n            filter,\n            order,\n            pagination\n          })\n        };\n      },\n      transformResponse: response => ({\n        data: response.items,\n        length: response.totalCount\n      }),\n      providesTags: result => {\n        if (result !== null && result !== void 0 && result.data) {\n          return [...result.data.map(_ref => {\n            let {\n              id\n            } = _ref;\n            return {\n              type: `${builder.tagType}.movimientos`,\n              id\n            };\n          }), {\n            type: `${builder.tagType}.movimientos`,\n            id: '*'\n          }];\n        } else {\n          return [{\n            type: `${builder.tagType}.movimientos`,\n            id: '*'\n          }];\n        }\n      }\n    }),\n    liquidarCuentaCorriente: builder.mutation({\n      query: saldo => ({\n        url: 'LiquidarCtaCte',\n        method: 'POST',\n        params: {\n          saldo\n        },\n        responseHandler: response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            return response.json().then(response => builder.normalizeErrors(response.errors));\n          }\n        }\n      }),\n      invalidatesTags: [builder.tagType, {\n        type: `${builder.tagType}.movimientos`,\n        id: '*'\n      }]\n    })\n  })\n});\nexport const {\n  useAddMutation,\n  useDeleteMutation,\n  useUpdateMutation,\n  useGetQuery,\n  useGetItemsQuery,\n  useGetListQuery,\n  useGetMovimientosQuery,\n  useLiquidarCuentaCorrienteMutation,\n  useCobrarTasaMutation\n} = api;","map":{"version":3,"names":["createApi","apiUrl","TiposMovimiento","LiquidacionCuentaCorriente","CobroEfectivo","CobroCuentaCorriente","api","reducerPath","url","Terminales","endpoints","builder","cobrarTasa","mutation","query","values","method","headers","body","responseHandler","response","ok","json","then","normalizeErrors","errors","invalidatesTags","tagType","type","id","add","delete","update","get","getItems","getList","getMovimientos","filter","order","pagination","params","normalizeQueryParameters","transformResponse","data","items","length","totalCount","providesTags","result","map","liquidarCuentaCorriente","saldo","useAddMutation","useDeleteMutation","useUpdateMutation","useGetQuery","useGetItemsQuery","useGetListQuery","useGetMovimientosQuery","useLiquidarCuentaCorrienteMutation","useCobrarTasaMutation"],"sources":["C:/Proyectos/NosPremiamos/ReactApp/src/redux/apis/terminales.js"],"sourcesContent":["import createApi from '../createApi';\r\n\r\nimport { apiUrl } from '../../utils/apiUrl';\r\n\r\nexport const TiposMovimiento = {\r\n  LiquidacionCuentaCorriente: -1,\r\n  CobroEfectivo: -2,\r\n  CobroCuentaCorriente: -3\r\n};\r\n\r\nexport const api = createApi({\r\n  reducerPath: 'api:terminales',\r\n  url: apiUrl.Terminales,\r\n  endpoints: (builder) => ({\r\n    cobrarTasa: builder.mutation({\r\n      query: (values) => ({\r\n        url: 'CobrarTasa',\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: values,\r\n        responseHandler: (response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          else {\r\n            return response.json().then((response) => builder.normalizeErrors(response.errors));\r\n          }\r\n        }\r\n      }),\r\n      invalidatesTags: [builder.tagType, { type: `${builder.tagType}.movimientos`, id: '*' }]\r\n    }),\r\n    add: builder.add(),\r\n    delete: builder.delete(),\r\n    update: builder.update(),\r\n    get: builder.get(),\r\n    getItems: builder.getItems(),\r\n    getList: builder.getList(),\r\n    getMovimientos: builder.query({\r\n      query: ({ filter, order = [], pagination = {} } = {}) => ({\r\n        url: 'Movimientos',\r\n        params: builder.normalizeQueryParameters({ filter, order, pagination })\r\n      }),\r\n      transformResponse: (response) => ({\r\n        data: response.items,\r\n        length: response.totalCount\r\n      }),\r\n      providesTags: (result) => {\r\n        if (result?.data) {\r\n          return [...result.data.map(({ id }) => ({ type: `${builder.tagType}.movimientos`, id })), { type: `${builder.tagType}.movimientos`, id: '*' }];\r\n        }\r\n        else {\r\n          return [{ type: `${builder.tagType}.movimientos`, id: '*' }];\r\n        }\r\n      }\r\n    }),\r\n    liquidarCuentaCorriente: builder.mutation({\r\n      query: (saldo) => ({\r\n        url: 'LiquidarCtaCte',\r\n        method: 'POST',\r\n        params: { saldo },\r\n        responseHandler: (response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          else {\r\n            return response.json().then((response) => builder.normalizeErrors(response.errors));\r\n          }\r\n        }\r\n      }),\r\n      invalidatesTags: [builder.tagType, { type: `${builder.tagType}.movimientos`, id: '*' }]\r\n    })\r\n  })\r\n});\r\n\r\nexport const { useAddMutation, useDeleteMutation, useUpdateMutation, useGetQuery, useGetItemsQuery, useGetListQuery, useGetMovimientosQuery, useLiquidarCuentaCorrienteMutation, useCobrarTasaMutation } = api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}