{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\NosPremiamos\\\\ReactApp\\\\src\\\\pages\\\\sistema\\\\terminal\\\\table\\\\row.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { faEdit, faEye, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport IconButton from '../../../../components/icon-button';\nimport { Cell, Row as TecsoRow } from '../../../../components/table';\nimport { useTranslations } from '../../../../components/translations';\nimport { Routes } from '../../../../routes';\nimport { permissionsKeys } from '../../../../utils/permissionsKeys';\nimport PermissionChecker from '../../../../components/permissionChecker';\nimport { translationsGroupNames } from '../../../../utils/translationsGroupNames';\nimport { useGetListQuery } from '../../../../redux/apis/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(_ref) {\n  _s();\n\n  let {\n    value,\n    index,\n    values\n  } = _ref;\n  const {\n    translations\n  } = useTranslations({\n    group: translationsGroupNames.Generic,\n    keys: ['Edit', 'Delete', 'View']\n  });\n  const {\n    data = []\n  } = useGetListQuery({\n    filter: {\n      terminalId: value.id\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(TecsoRow, {\n    children: [/*#__PURE__*/_jsxDEV(Cell, {\n      children: value.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: value.cuit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: value.nroPlanta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: data.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cell, {\n      children: [PermissionChecker(permissionsKeys.CONFIGURACION_TERMINAL_ADMINISTRAR) && /*#__PURE__*/_jsxDEV(IconButton, {\n        title: translations.View,\n        icon: faEye,\n        href: Routes.Terminales.View.path.replace(':id', value.id),\n        className: \"mx-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 83\n      }, this), PermissionChecker(permissionsKeys.CONFIGURACION_TERMINAL_ADMINISTRAR) && !value.isSystem && /*#__PURE__*/_jsxDEV(IconButton, {\n        title: translations.Edit,\n        icon: faEdit,\n        href: Routes.Terminales.Update.path.replace(':id', value.id),\n        className: \"mx-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 102\n      }, this), PermissionChecker(permissionsKeys.CONFIGURACION_TERMINAL_ADMINISTRAR) && !value.isSystem && /*#__PURE__*/_jsxDEV(IconButton, {\n        title: translations.Delete,\n        icon: faTrash,\n        href: Routes.Terminales.Delete.path.replace(':id', value.id),\n        className: \"mx-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Row, \"bf+uSK9pb6mhjo8Z26DkPC45VnI=\", false, function () {\n  return [useTranslations, useGetListQuery];\n});\n\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","faEdit","faEye","faTrash","IconButton","Cell","Row","TecsoRow","useTranslations","Routes","permissionsKeys","PermissionChecker","translationsGroupNames","useGetListQuery","value","index","values","translations","group","Generic","keys","data","filter","terminalId","id","nombre","cuit","nroPlanta","length","CONFIGURACION_TERMINAL_ADMINISTRAR","View","Terminales","path","replace","isSystem","Edit","Update","Delete"],"sources":["C:/Proyectos/NosPremiamos/ReactApp/src/pages/sistema/terminal/table/row.jsx"],"sourcesContent":["import React from 'react';\r\nimport { faEdit, faEye, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport IconButton from '../../../../components/icon-button';\r\nimport { Cell, Row as TecsoRow } from '../../../../components/table';\r\nimport { useTranslations } from '../../../../components/translations';\r\nimport { Routes } from '../../../../routes';\r\nimport { permissionsKeys } from '../../../../utils/permissionsKeys';\r\nimport PermissionChecker from '../../../../components/permissionChecker';\r\nimport { translationsGroupNames } from '../../../../utils/translationsGroupNames';\r\n\r\nimport { useGetListQuery } from '../../../../redux/apis/users';\r\n\r\n\r\nexport default function Row({ value, index, values }) {\r\n  const { translations } = useTranslations({ group: translationsGroupNames.Generic, keys: ['Edit', 'Delete', 'View'] });\r\n\r\n  const { data = [] } = useGetListQuery({ filter: { terminalId: value.id } });\r\n\r\n  return (\r\n    <TecsoRow>\r\n      <Cell>{value.nombre}</Cell>\r\n      <Cell>{value.cuit}</Cell>\r\n      <Cell>{value.nroPlanta}</Cell>\r\n      <Cell>{data.length}</Cell>\r\n      <Cell>\r\n        {PermissionChecker(permissionsKeys.CONFIGURACION_TERMINAL_ADMINISTRAR) && <IconButton title={translations.View} icon={faEye} href={Routes.Terminales.View.path.replace(':id', value.id)} className=\"mx-1\" />}\r\n        {PermissionChecker(permissionsKeys.CONFIGURACION_TERMINAL_ADMINISTRAR) && !value.isSystem && <IconButton title={translations.Edit} icon={faEdit} href={Routes.Terminales.Update.path.replace(':id', value.id)} className=\"mx-1\" />}\r\n        {PermissionChecker(permissionsKeys.CONFIGURACION_TERMINAL_ADMINISTRAR) && !value.isSystem && <IconButton title={translations.Delete} icon={faTrash} href={Routes.Terminales.Delete.path.replace(':id', value.id)} className=\"mx-1\" />}\r\n      </Cell>\r\n    </TecsoRow>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}