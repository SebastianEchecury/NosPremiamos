{"ast":null,"code":"import createApi from '../createApi';\nimport { apiUrl } from '../../utils/apiUrl';\nexport const api = createApi({\n  reducerPath: 'api:cupos',\n  url: apiUrl.Cupos,\n  endpoints: builder => ({\n    add: builder.add(),\n    addCtg: builder.mutation({\n      query: _ref => {\n        let {\n          fechaDesde,\n          fechaHasta\n        } = _ref;\n        return {\n          url: 'ctg',\n          method: 'POST',\n          body: {\n            fechaDesde,\n            fechaHasta\n          },\n          responseHandler: response => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              return response.json().then(response => builder.normalizeErrors(response.errors));\n            }\n          }\n        };\n      },\n      invalidatesTags: [{\n        type: builder.tagType,\n        id: '*'\n      }]\n    }),\n    get: builder.get(),\n    getItems: builder.getItems(),\n    getList: builder.getList()\n  })\n});\nexport const {\n  useAddMutation,\n  useAddCtgMutation,\n  useGetQuery,\n  useGetItemsQuery,\n  useGetListQuery\n} = api;","map":{"version":3,"names":["createApi","apiUrl","api","reducerPath","url","Cupos","endpoints","builder","add","addCtg","mutation","query","fechaDesde","fechaHasta","method","body","responseHandler","response","ok","json","then","normalizeErrors","errors","invalidatesTags","type","tagType","id","get","getItems","getList","useAddMutation","useAddCtgMutation","useGetQuery","useGetItemsQuery","useGetListQuery"],"sources":["C:/Proyectos/NosPremiamos/ReactApp/src/redux/apis/cupos.js"],"sourcesContent":["import createApi from '../createApi';\r\n\r\nimport { apiUrl } from '../../utils/apiUrl';\r\n\r\nexport const api = createApi({\r\n  reducerPath: 'api:cupos',\r\n  url: apiUrl.Cupos,\r\n  endpoints: (builder) => ({\r\n    add: builder.add(),\r\n    addCtg: builder.mutation({\r\n      query: ({ fechaDesde, fechaHasta }) => ({\r\n        url: 'ctg',\r\n        method: 'POST',\r\n        body: { fechaDesde, fechaHasta },\r\n        responseHandler: (response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          else {\r\n            return response.json().then((response) => builder.normalizeErrors(response.errors));\r\n          }\r\n        }\r\n      }),\r\n      invalidatesTags: [{ type: builder.tagType, id: '*' }]\r\n    }),\r\n    get: builder.get(),\r\n    getItems: builder.getItems(),\r\n    getList: builder.getList()\r\n  })\r\n});\r\n\r\nexport const { useAddMutation, useAddCtgMutation, useGetQuery, useGetItemsQuery, useGetListQuery } = api;"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAO,MAAMC,GAAG,GAAGF,SAAS,CAAC;EAC3BG,WAAW,EAAE,WADc;EAE3BC,GAAG,EAAEH,MAAM,CAACI,KAFe;EAG3BC,SAAS,EAAGC,OAAD,KAAc;IACvBC,GAAG,EAAED,OAAO,CAACC,GAAR,EADkB;IAEvBC,MAAM,EAAEF,OAAO,CAACG,QAAR,CAAiB;MACvBC,KAAK,EAAE;QAAA,IAAC;UAAEC,UAAF;UAAcC;QAAd,CAAD;QAAA,OAAiC;UACtCT,GAAG,EAAE,KADiC;UAEtCU,MAAM,EAAE,MAF8B;UAGtCC,IAAI,EAAE;YAAEH,UAAF;YAAcC;UAAd,CAHgC;UAItCG,eAAe,EAAGC,QAAD,IAAc;YAC7B,IAAIA,QAAQ,CAACC,EAAb,EAAiB;cACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;YACD,CAFD,MAGK;cACH,OAAOF,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAsBH,QAAD,IAAcV,OAAO,CAACc,eAAR,CAAwBJ,QAAQ,CAACK,MAAjC,CAAnC,CAAP;YACD;UACF;QAXqC,CAAjC;MAAA,CADgB;MAcvBC,eAAe,EAAE,CAAC;QAAEC,IAAI,EAAEjB,OAAO,CAACkB,OAAhB;QAAyBC,EAAE,EAAE;MAA7B,CAAD;IAdM,CAAjB,CAFe;IAkBvBC,GAAG,EAAEpB,OAAO,CAACoB,GAAR,EAlBkB;IAmBvBC,QAAQ,EAAErB,OAAO,CAACqB,QAAR,EAnBa;IAoBvBC,OAAO,EAAEtB,OAAO,CAACsB,OAAR;EApBc,CAAd;AAHgB,CAAD,CAArB;AA2BP,OAAO,MAAM;EAAEC,cAAF;EAAkBC,iBAAlB;EAAqCC,WAArC;EAAkDC,gBAAlD;EAAoEC;AAApE,IAAwFhC,GAA9F"},"metadata":{},"sourceType":"module"}