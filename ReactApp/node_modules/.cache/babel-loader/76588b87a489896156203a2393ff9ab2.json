{"ast":null,"code":"import createApi from '../createApi';\nimport { apiUrl } from '../../utils/apiUrl';\nexport const api = createApi({\n  reducerPath: 'api:auth',\n  url: apiUrl.Auth,\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: _ref => {\n        let {\n          email,\n          password\n        } = _ref;\n        return {\n          url: 'Login',\n          method: 'POST',\n          body: {\n            email,\n            password\n          },\n          responseHandler: response => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              return response.json().then(response => builder.normalizeErrors(response.errors));\n            }\n          }\n        };\n      }\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: 'Logout',\n        method: 'POST'\n      })\n    }),\n    lostPassword: builder.mutation({\n      query: _ref2 => {\n        let {\n          email\n        } = _ref2;\n        return {\n          url: 'SendPasswordRecovery',\n          method: 'POST',\n          body: {\n            email\n          },\n          responseHandler: response => {\n            if (response.ok) {\n              return response.ok;\n            } else {\n              return response.json().then(response => builder.normalizeErrors(response.errors));\n            }\n          }\n        };\n      }\n    }),\n    ResetPassword: builder.mutation({\n      query: _ref3 => {\n        let {\n          password,\n          passwordnueva,\n          empleadoid\n        } = _ref3;\n        return {\n          url: 'CambiarPassword',\n          method: 'POST',\n          body: {\n            password,\n            passwordnueva,\n            empleadoid\n          },\n          responseHandler: response => {\n            if (response.ok) {\n              return response.ok;\n            } else {\n              return response.json().then(response => builder.normalizeErrors(response.errors));\n            }\n          }\n        };\n      }\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useLogoutMutation,\n  useLostPasswordMutation,\n  useResetPasswordMutation\n} = api;","map":{"version":3,"names":["createApi","apiUrl","api","reducerPath","url","Auth","endpoints","builder","login","mutation","query","email","password","method","body","responseHandler","response","ok","json","then","normalizeErrors","errors","logout","lostPassword","ResetPassword","passwordnueva","empleadoid","useLoginMutation","useLogoutMutation","useLostPasswordMutation","useResetPasswordMutation"],"sources":["C:/Proyectos/NosPremiamos/ReactApp/src/redux/apis/auth.js"],"sourcesContent":["import createApi from '../createApi';\r\n\r\nimport { apiUrl } from '../../utils/apiUrl';\r\n\r\nexport const api = createApi({\r\n  reducerPath: 'api:auth',\r\n  url: apiUrl.Auth,\r\n  endpoints: (builder) => ({\r\n    login: builder.mutation({\r\n      query: ({ email, password }) => ({\r\n        url: 'Login',\r\n        method: 'POST',\r\n        body: {\r\n          email,\r\n          password\r\n        },\r\n        responseHandler: (response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          else {\r\n            return response.json().then((response) => builder.normalizeErrors(response.errors));\r\n          }\r\n        }\r\n      })\r\n    }),\r\n    logout: builder.mutation({\r\n      query: () => ({\r\n        url: 'Logout',\r\n        method: 'POST'\r\n      })\r\n    }),\r\n    lostPassword: builder.mutation({\r\n      query: ({ email }) => ({\r\n        url: 'SendPasswordRecovery',\r\n        method: 'POST',\r\n        body: { email },\r\n        responseHandler: (response) => {\r\n          if (response.ok) {\r\n            return response.ok;\r\n          }\r\n          else {\r\n            return response.json().then((response) => builder.normalizeErrors(response.errors));\r\n          }\r\n        }\r\n      }),\r\n    }),\r\n    ResetPassword: builder.mutation({\r\n      query: ({ password , passwordnueva, empleadoid,}) => ({\r\n        url: 'CambiarPassword',\r\n        method: 'POST',\r\n        body:{password, passwordnueva, empleadoid},\r\n        responseHandler: (response) => {\r\n          if (response.ok) {\r\n            return response.ok;\r\n          }\r\n          else {\r\n              return response.json().then((response) => builder.normalizeErrors(response.errors));\r\n          }\r\n        }\r\n      }),\r\n    }),\r\n  })\r\n});\r\n\r\nexport const { useLoginMutation, useLogoutMutation, useLostPasswordMutation, useResetPasswordMutation} = api;"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,OAAO,MAAMC,GAAG,GAAGF,SAAS,CAAC;EAC3BG,WAAW,EAAE,UADc;EAE3BC,GAAG,EAAEH,MAAM,CAACI,IAFe;EAG3BC,SAAS,EAAGC,OAAD,KAAc;IACvBC,KAAK,EAAED,OAAO,CAACE,QAAR,CAAiB;MACtBC,KAAK,EAAE;QAAA,IAAC;UAAEC,KAAF;UAASC;QAAT,CAAD;QAAA,OAA0B;UAC/BR,GAAG,EAAE,OAD0B;UAE/BS,MAAM,EAAE,MAFuB;UAG/BC,IAAI,EAAE;YACJH,KADI;YAEJC;UAFI,CAHyB;UAO/BG,eAAe,EAAGC,QAAD,IAAc;YAC7B,IAAIA,QAAQ,CAACC,EAAb,EAAiB;cACf,OAAOD,QAAQ,CAACE,IAAT,EAAP;YACD,CAFD,MAGK;cACH,OAAOF,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAsBH,QAAD,IAAcT,OAAO,CAACa,eAAR,CAAwBJ,QAAQ,CAACK,MAAjC,CAAnC,CAAP;YACD;UACF;QAd8B,CAA1B;MAAA;IADe,CAAjB,CADgB;IAmBvBC,MAAM,EAAEf,OAAO,CAACE,QAAR,CAAiB;MACvBC,KAAK,EAAE,OAAO;QACZN,GAAG,EAAE,QADO;QAEZS,MAAM,EAAE;MAFI,CAAP;IADgB,CAAjB,CAnBe;IAyBvBU,YAAY,EAAEhB,OAAO,CAACE,QAAR,CAAiB;MAC7BC,KAAK,EAAE;QAAA,IAAC;UAAEC;QAAF,CAAD;QAAA,OAAgB;UACrBP,GAAG,EAAE,sBADgB;UAErBS,MAAM,EAAE,MAFa;UAGrBC,IAAI,EAAE;YAAEH;UAAF,CAHe;UAIrBI,eAAe,EAAGC,QAAD,IAAc;YAC7B,IAAIA,QAAQ,CAACC,EAAb,EAAiB;cACf,OAAOD,QAAQ,CAACC,EAAhB;YACD,CAFD,MAGK;cACH,OAAOD,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAsBH,QAAD,IAAcT,OAAO,CAACa,eAAR,CAAwBJ,QAAQ,CAACK,MAAjC,CAAnC,CAAP;YACD;UACF;QAXoB,CAAhB;MAAA;IADsB,CAAjB,CAzBS;IAwCvBG,aAAa,EAAEjB,OAAO,CAACE,QAAR,CAAiB;MAC9BC,KAAK,EAAE;QAAA,IAAC;UAAEE,QAAF;UAAaa,aAAb;UAA4BC;QAA5B,CAAD;QAAA,OAA+C;UACpDtB,GAAG,EAAE,iBAD+C;UAEpDS,MAAM,EAAE,MAF4C;UAGpDC,IAAI,EAAC;YAACF,QAAD;YAAWa,aAAX;YAA0BC;UAA1B,CAH+C;UAIpDX,eAAe,EAAGC,QAAD,IAAc;YAC7B,IAAIA,QAAQ,CAACC,EAAb,EAAiB;cACf,OAAOD,QAAQ,CAACC,EAAhB;YACD,CAFD,MAGK;cACD,OAAOD,QAAQ,CAACE,IAAT,GAAgBC,IAAhB,CAAsBH,QAAD,IAAcT,OAAO,CAACa,eAAR,CAAwBJ,QAAQ,CAACK,MAAjC,CAAnC,CAAP;YACH;UACF;QAXmD,CAA/C;MAAA;IADuB,CAAjB;EAxCQ,CAAd;AAHgB,CAAD,CAArB;AA6DP,OAAO,MAAM;EAAEM,gBAAF;EAAoBC,iBAApB;EAAuCC,uBAAvC;EAAgEC;AAAhE,IAA4F5B,GAAlG"},"metadata":{},"sourceType":"module"}