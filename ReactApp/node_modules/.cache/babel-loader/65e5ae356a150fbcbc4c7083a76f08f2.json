{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\NosPremiamos\\\\ReactApp\\\\src\\\\components\\\\pagination\\\\pagination.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Children, useEffect, useRef, useState } from \"react\";\nimport { Col, Form, Pagination, Row } from \"@themesberg/react-bootstrap\";\nimport PageSize from \"./page-size\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_DISPLAYED_PAGES = 10;\nexport default _s(_ref => {\n  _s();\n\n  let {\n    children,\n    index = 0,\n    length,\n    onChange,\n    className\n  } = _ref;\n  const currentPageInitialized = useRef(false);\n  const [currentPage, setCurrentPage] = useState({\n    index: index,\n    size: 10,\n    displacement: 0\n  });\n  const [pages, setPages] = useState({\n    from: 0,\n    to: 0,\n    length: 0\n  });\n  const [values, setValues] = useState({\n    from: 0,\n    to: 0\n  });\n\n  const firstPageClickHandler = () => {\n    setCurrentPage(previous => ({ ...previous,\n      index: 0,\n      displacement: -previous.index\n    }));\n  };\n\n  const previousPageClickHandler = () => {\n    if (currentPage.index > 0) {\n      setCurrentPage(previous => ({ ...previous,\n        index: previous.index - 1,\n        displacement: -1\n      }));\n    }\n  };\n\n  const pageClickHandler = index => {\n    setCurrentPage(previous => ({ ...previous,\n      index: index\n    }));\n  };\n\n  const nextPageClickHandler = () => {\n    if (currentPage.index < pages.length - 1) {\n      setCurrentPage(previous => ({ ...previous,\n        index: previous.index + 1,\n        displacement: 1\n      }));\n    }\n  };\n\n  const lastPageClickHandler = () => {\n    setCurrentPage(previous => ({ ...previous,\n      index: pages.length - 1,\n      displacement: pages.length - previous.index - 1\n    }));\n  };\n\n  const pageSizeChangeHandler = event => {\n    const size = Number.parseInt(event.target.value);\n    setCurrentPage(previous => ({ ...previous,\n      index: 0,\n      size,\n      displacement: 0\n    }));\n  };\n\n  useEffect(() => {\n    setCurrentPage(previous => ({ ...previous,\n      index: index\n    }));\n  }, [index]);\n  useEffect(() => {\n    setPages(previous => ({ ...previous,\n      length: Math.ceil(length / currentPage.size) || 1\n    }));\n  }, [length, currentPage.size]);\n  useEffect(() => {\n    setPages(previous => {\n      if (currentPage.index < previous.from || currentPage.index > previous.to) {\n        if (currentPage.displacement < 0) {\n          const from = currentPage.index;\n          const to = from + MAX_DISPLAYED_PAGES - 1;\n          return { ...previous,\n            from,\n            to\n          };\n        } else {\n          const from = Math.max(currentPage.index - MAX_DISPLAYED_PAGES + 1, 0);\n          const to = from + MAX_DISPLAYED_PAGES - 1;\n          return { ...previous,\n            from,\n            to\n          };\n        }\n      }\n\n      return { ...previous\n      };\n    });\n  }, [length, currentPage.index, currentPage.displacement]);\n  useEffect(() => {\n    const from = currentPage.index * currentPage.size;\n    const to = Math.min(from + currentPage.size, length);\n    setValues(previous => ({ ...previous,\n      from: from + 1,\n      to\n    }));\n  }, [length, currentPage.index, currentPage.size]);\n  useEffect(() => {\n    if (currentPageInitialized.current) {\n      onChange({\n        index: currentPage.index,\n        size: currentPage.size\n      });\n    } else {\n      currentPageInitialized.current = true;\n    }\n  }, [onChange, currentPage.index, currentPage.size]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    xs: \"auto\",\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n          onClick: firstPageClickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n          onClick: previousPageClickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), [...Array(Math.min(pages.length, MAX_DISPLAYED_PAGES)).keys()].map(index => index + pages.from).map(index => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: index === currentPage.index,\n          onClick: () => pageClickHandler(index),\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 121\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n          onClick: nextPageClickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n          onClick: lastPageClickHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(Form.Select, {\n        onChange: pageSizeChangeHandler,\n        children: Children.count(children) ? children : [10, 50, 100].map((size, index) => /*#__PURE__*/_jsxDEV(PageSize, {\n          children: size\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 85\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        plaintext: true,\n        readOnly: true,\n        value: `${values.from}-${values.to} of ${length}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}, \"iV6M1cv3PA2KAjqvOZvr599CCfs=\");","map":{"version":3,"names":["React","Children","useEffect","useRef","useState","Col","Form","Pagination","Row","PageSize","MAX_DISPLAYED_PAGES","children","index","length","onChange","className","currentPageInitialized","currentPage","setCurrentPage","size","displacement","pages","setPages","from","to","values","setValues","firstPageClickHandler","previous","previousPageClickHandler","pageClickHandler","nextPageClickHandler","lastPageClickHandler","pageSizeChangeHandler","event","Number","parseInt","target","value","Math","ceil","max","min","current","Array","keys","map","count"],"sources":["C:/Proyectos/NosPremiamos/ReactApp/src/components/pagination/pagination.jsx"],"sourcesContent":["import React, { Children, useEffect, useRef, useState } from \"react\";\r\nimport { Col, Form, Pagination, Row } from \"@themesberg/react-bootstrap\";\r\nimport PageSize from \"./page-size\";\r\n\r\nconst MAX_DISPLAYED_PAGES = 10;\r\n\r\nexport default ({ children, index = 0, length, onChange, className }) => {\r\n  const currentPageInitialized = useRef(false);\r\n  const [currentPage, setCurrentPage] = useState({ index: index, size: 10, displacement: 0 });\r\n  const [pages, setPages] = useState({ from: 0, to: 0, length: 0 });\r\n  const [values, setValues] = useState({ from: 0, to: 0 });\r\n\r\n  const firstPageClickHandler = () => {\r\n    setCurrentPage((previous) => ({ ...previous, index: 0, displacement: -previous.index }));\r\n  };\r\n  const previousPageClickHandler = () => {\r\n    if (currentPage.index > 0) {\r\n      setCurrentPage((previous) => ({ ...previous, index: previous.index - 1, displacement: -1 }));\r\n    }\r\n  };\r\n  const pageClickHandler = (index) => {\r\n    setCurrentPage((previous) => ({ ...previous, index: index }));\r\n  };\r\n  const nextPageClickHandler = () => {\r\n    if (currentPage.index < pages.length - 1) {\r\n      setCurrentPage((previous) => ({ ...previous, index: previous.index + 1, displacement: 1 }));\r\n    }\r\n  };\r\n  const lastPageClickHandler = () => {\r\n    setCurrentPage((previous) => ({ ...previous, index: pages.length - 1, displacement: pages.length - previous.index - 1 }));\r\n  };\r\n  const pageSizeChangeHandler = (event) => {\r\n    const size = Number.parseInt(event.target.value);\r\n    setCurrentPage((previous) => ({ ...previous, index: 0, size, displacement: 0 }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentPage((previous) => ({ ...previous, index: index }));\r\n  }, [index]);\r\n\r\n  useEffect(() => {\r\n    setPages((previous) => ({ ...previous, length: Math.ceil(length / currentPage.size) || 1 }));\r\n  }, [length, currentPage.size]);\r\n\r\n  useEffect(() => {\r\n    setPages((previous) => {\r\n      if (currentPage.index < previous.from || currentPage.index > previous.to) {\r\n        if (currentPage.displacement < 0) {\r\n          const from = currentPage.index;\r\n          const to = from + MAX_DISPLAYED_PAGES - 1;\r\n\r\n          return { ...previous, from, to };\r\n        }\r\n        else {\r\n          const from = Math.max(currentPage.index - MAX_DISPLAYED_PAGES + 1, 0);\r\n          const to = from + MAX_DISPLAYED_PAGES - 1;\r\n\r\n          return { ...previous, from, to };\r\n        }\r\n      }\r\n\r\n      return { ...previous };\r\n    });\r\n  }, [length, currentPage.index, currentPage.displacement]);\r\n\r\n  useEffect(() => {\r\n    const from = currentPage.index * currentPage.size;\r\n    const to = Math.min(from + currentPage.size, length);\r\n\r\n    setValues((previous) => ({ ...previous, from: from + 1, to }));\r\n  }, [length, currentPage.index, currentPage.size]);\r\n\r\n  useEffect(() => {\r\n    if (currentPageInitialized.current) {\r\n      onChange({ index: currentPage.index, size: currentPage.size });\r\n    }\r\n    else {\r\n      currentPageInitialized.current = true;\r\n    }\r\n  }, [onChange, currentPage.index, currentPage.size]);\r\n\r\n  return (\r\n    <Row xs=\"auto\" className={className}>\r\n      <Col>\r\n        <Pagination>\r\n          <Pagination.First onClick={firstPageClickHandler} />\r\n          <Pagination.Prev onClick={previousPageClickHandler} />\r\n          {[...Array(Math.min(pages.length, MAX_DISPLAYED_PAGES)).keys()].map(index => index + pages.from).map(index => <Pagination.Item key={index} active={index === currentPage.index} onClick={() => pageClickHandler(index)}>{index + 1}</Pagination.Item>)}\r\n          <Pagination.Next onClick={nextPageClickHandler} />\r\n          <Pagination.Last onClick={lastPageClickHandler} />\r\n        </Pagination>\r\n      </Col>\r\n      <Col xs=\"auto\">\r\n        <Form.Select onChange={pageSizeChangeHandler}>\r\n          {Children.count(children) ? children : [10, 50, 100].map((size, index) => <PageSize key={index}>{size}</PageSize>)}\r\n        </Form.Select>\r\n      </Col>\r\n      <Col>\r\n        <Form.Control plaintext readOnly value={`${values.from}-${values.to} of ${length}`} ></Form.Control>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,OAA7D;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,6BAA3C;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,MAAMC,mBAAmB,GAAG,EAA5B;AAEA,kBAAe,QAA0D;EAAA;;EAAA,IAAzD;IAAEC,QAAF;IAAYC,KAAK,GAAG,CAApB;IAAuBC,MAAvB;IAA+BC,QAA/B;IAAyCC;EAAzC,CAAyD;EACvE,MAAMC,sBAAsB,GAAGb,MAAM,CAAC,KAAD,CAArC;EACA,MAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC;IAAEQ,KAAK,EAAEA,KAAT;IAAgBO,IAAI,EAAE,EAAtB;IAA0BC,YAAY,EAAE;EAAxC,CAAD,CAA9C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC;IAAEmB,IAAI,EAAE,CAAR;IAAWC,EAAE,EAAE,CAAf;IAAkBX,MAAM,EAAE;EAA1B,CAAD,CAAlC;EACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC;IAAEmB,IAAI,EAAE,CAAR;IAAWC,EAAE,EAAE;EAAf,CAAD,CAApC;;EAEA,MAAMG,qBAAqB,GAAG,MAAM;IAClCT,cAAc,CAAEU,QAAD,KAAe,EAAE,GAAGA,QAAL;MAAehB,KAAK,EAAE,CAAtB;MAAyBQ,YAAY,EAAE,CAACQ,QAAQ,CAAChB;IAAjD,CAAf,CAAD,CAAd;EACD,CAFD;;EAGA,MAAMiB,wBAAwB,GAAG,MAAM;IACrC,IAAIZ,WAAW,CAACL,KAAZ,GAAoB,CAAxB,EAA2B;MACzBM,cAAc,CAAEU,QAAD,KAAe,EAAE,GAAGA,QAAL;QAAehB,KAAK,EAAEgB,QAAQ,CAAChB,KAAT,GAAiB,CAAvC;QAA0CQ,YAAY,EAAE,CAAC;MAAzD,CAAf,CAAD,CAAd;IACD;EACF,CAJD;;EAKA,MAAMU,gBAAgB,GAAIlB,KAAD,IAAW;IAClCM,cAAc,CAAEU,QAAD,KAAe,EAAE,GAAGA,QAAL;MAAehB,KAAK,EAAEA;IAAtB,CAAf,CAAD,CAAd;EACD,CAFD;;EAGA,MAAMmB,oBAAoB,GAAG,MAAM;IACjC,IAAId,WAAW,CAACL,KAAZ,GAAoBS,KAAK,CAACR,MAAN,GAAe,CAAvC,EAA0C;MACxCK,cAAc,CAAEU,QAAD,KAAe,EAAE,GAAGA,QAAL;QAAehB,KAAK,EAAEgB,QAAQ,CAAChB,KAAT,GAAiB,CAAvC;QAA0CQ,YAAY,EAAE;MAAxD,CAAf,CAAD,CAAd;IACD;EACF,CAJD;;EAKA,MAAMY,oBAAoB,GAAG,MAAM;IACjCd,cAAc,CAAEU,QAAD,KAAe,EAAE,GAAGA,QAAL;MAAehB,KAAK,EAAES,KAAK,CAACR,MAAN,GAAe,CAArC;MAAwCO,YAAY,EAAEC,KAAK,CAACR,MAAN,GAAee,QAAQ,CAAChB,KAAxB,GAAgC;IAAtF,CAAf,CAAD,CAAd;EACD,CAFD;;EAGA,MAAMqB,qBAAqB,GAAIC,KAAD,IAAW;IACvC,MAAMf,IAAI,GAAGgB,MAAM,CAACC,QAAP,CAAgBF,KAAK,CAACG,MAAN,CAAaC,KAA7B,CAAb;IACApB,cAAc,CAAEU,QAAD,KAAe,EAAE,GAAGA,QAAL;MAAehB,KAAK,EAAE,CAAtB;MAAyBO,IAAzB;MAA+BC,YAAY,EAAE;IAA7C,CAAf,CAAD,CAAd;EACD,CAHD;;EAKAlB,SAAS,CAAC,MAAM;IACdgB,cAAc,CAAEU,QAAD,KAAe,EAAE,GAAGA,QAAL;MAAehB,KAAK,EAAEA;IAAtB,CAAf,CAAD,CAAd;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;EAIAV,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAAEM,QAAD,KAAe,EAAE,GAAGA,QAAL;MAAef,MAAM,EAAE0B,IAAI,CAACC,IAAL,CAAU3B,MAAM,GAAGI,WAAW,CAACE,IAA/B,KAAwC;IAA/D,CAAf,CAAD,CAAR;EACD,CAFQ,EAEN,CAACN,MAAD,EAASI,WAAW,CAACE,IAArB,CAFM,CAAT;EAIAjB,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAAEM,QAAD,IAAc;MACrB,IAAIX,WAAW,CAACL,KAAZ,GAAoBgB,QAAQ,CAACL,IAA7B,IAAqCN,WAAW,CAACL,KAAZ,GAAoBgB,QAAQ,CAACJ,EAAtE,EAA0E;QACxE,IAAIP,WAAW,CAACG,YAAZ,GAA2B,CAA/B,EAAkC;UAChC,MAAMG,IAAI,GAAGN,WAAW,CAACL,KAAzB;UACA,MAAMY,EAAE,GAAGD,IAAI,GAAGb,mBAAP,GAA6B,CAAxC;UAEA,OAAO,EAAE,GAAGkB,QAAL;YAAeL,IAAf;YAAqBC;UAArB,CAAP;QACD,CALD,MAMK;UACH,MAAMD,IAAI,GAAGgB,IAAI,CAACE,GAAL,CAASxB,WAAW,CAACL,KAAZ,GAAoBF,mBAApB,GAA0C,CAAnD,EAAsD,CAAtD,CAAb;UACA,MAAMc,EAAE,GAAGD,IAAI,GAAGb,mBAAP,GAA6B,CAAxC;UAEA,OAAO,EAAE,GAAGkB,QAAL;YAAeL,IAAf;YAAqBC;UAArB,CAAP;QACD;MACF;;MAED,OAAO,EAAE,GAAGI;MAAL,CAAP;IACD,CAjBO,CAAR;EAkBD,CAnBQ,EAmBN,CAACf,MAAD,EAASI,WAAW,CAACL,KAArB,EAA4BK,WAAW,CAACG,YAAxC,CAnBM,CAAT;EAqBAlB,SAAS,CAAC,MAAM;IACd,MAAMqB,IAAI,GAAGN,WAAW,CAACL,KAAZ,GAAoBK,WAAW,CAACE,IAA7C;IACA,MAAMK,EAAE,GAAGe,IAAI,CAACG,GAAL,CAASnB,IAAI,GAAGN,WAAW,CAACE,IAA5B,EAAkCN,MAAlC,CAAX;IAEAa,SAAS,CAAEE,QAAD,KAAe,EAAE,GAAGA,QAAL;MAAeL,IAAI,EAAEA,IAAI,GAAG,CAA5B;MAA+BC;IAA/B,CAAf,CAAD,CAAT;EACD,CALQ,EAKN,CAACX,MAAD,EAASI,WAAW,CAACL,KAArB,EAA4BK,WAAW,CAACE,IAAxC,CALM,CAAT;EAOAjB,SAAS,CAAC,MAAM;IACd,IAAIc,sBAAsB,CAAC2B,OAA3B,EAAoC;MAClC7B,QAAQ,CAAC;QAAEF,KAAK,EAAEK,WAAW,CAACL,KAArB;QAA4BO,IAAI,EAAEF,WAAW,CAACE;MAA9C,CAAD,CAAR;IACD,CAFD,MAGK;MACHH,sBAAsB,CAAC2B,OAAvB,GAAiC,IAAjC;IACD;EACF,CAPQ,EAON,CAAC7B,QAAD,EAAWG,WAAW,CAACL,KAAvB,EAA8BK,WAAW,CAACE,IAA1C,CAPM,CAAT;EASA,oBACE,QAAC,GAAD;IAAK,EAAE,EAAC,MAAR;IAAe,SAAS,EAAEJ,SAA1B;IAAA,wBACE,QAAC,GAAD;MAAA,uBACE,QAAC,UAAD;QAAA,wBACE,QAAC,UAAD,CAAY,KAAZ;UAAkB,OAAO,EAAEY;QAA3B;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,UAAD,CAAY,IAAZ;UAAiB,OAAO,EAAEE;QAA1B;UAAA;UAAA;UAAA;QAAA,QAFF,EAGG,CAAC,GAAGe,KAAK,CAACL,IAAI,CAACG,GAAL,CAASrB,KAAK,CAACR,MAAf,EAAuBH,mBAAvB,CAAD,CAAL,CAAmDmC,IAAnD,EAAJ,EAA+DC,GAA/D,CAAmElC,KAAK,IAAIA,KAAK,GAAGS,KAAK,CAACE,IAA1F,EAAgGuB,GAAhG,CAAoGlC,KAAK,iBAAI,QAAC,UAAD,CAAY,IAAZ;UAA6B,MAAM,EAAEA,KAAK,KAAKK,WAAW,CAACL,KAA3D;UAAkE,OAAO,EAAE,MAAMkB,gBAAgB,CAAClB,KAAD,CAAjG;UAAA,UAA2GA,KAAK,GAAG;QAAnH,GAAsBA,KAAtB;UAAA;UAAA;UAAA;QAAA,QAA7G,CAHH,eAIE,QAAC,UAAD,CAAY,IAAZ;UAAiB,OAAO,EAAEmB;QAA1B;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,UAAD,CAAY,IAAZ;UAAiB,OAAO,EAAEC;QAA1B;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE,QAAC,GAAD;MAAK,EAAE,EAAC,MAAR;MAAA,uBACE,QAAC,IAAD,CAAM,MAAN;QAAa,QAAQ,EAAEC,qBAAvB;QAAA,UACGhC,QAAQ,CAAC8C,KAAT,CAAepC,QAAf,IAA2BA,QAA3B,GAAsC,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAcmC,GAAd,CAAkB,CAAC3B,IAAD,EAAOP,KAAP,kBAAiB,QAAC,QAAD;UAAA,UAAuBO;QAAvB,GAAeP,KAAf;UAAA;UAAA;UAAA;QAAA,QAAnC;MADzC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVF,eAeE,QAAC,GAAD;MAAA,uBACE,QAAC,IAAD,CAAM,OAAN;QAAc,SAAS,MAAvB;QAAwB,QAAQ,MAAhC;QAAiC,KAAK,EAAG,GAAEa,MAAM,CAACF,IAAK,IAAGE,MAAM,CAACD,EAAG,OAAMX,MAAO;MAAjF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAhGD"},"metadata":{},"sourceType":"module"}